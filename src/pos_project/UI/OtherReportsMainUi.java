/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClientMainUi.java
 *
 * Created on Jul 17, 2013, 7:34:27 AM
 */
package pos_project.UI;

import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.event.KeyListener;
import java.io.File;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import pos_project.Action.CollectionAction;
import pos_project.Action.DateActions;
import pos_project.Action.ExcelAction;
import pos_project.Action.InvoiceAction;
import pos_project.Action.ItemAction;
import pos_project.Action.LocationAction;
import pos_project.Action.TransferAction;
import pos_project.classes.Client;
import pos_project.classes.ErrorMessages;
import pos_project.classes.Formats;
import pos_project.classes.Item;
import pos_project.classes.OtReportAccess;

/**
 *
 * @author Cif3r
 */
public class OtherReportsMainUi extends javax.swing.JPanel {

    private Client inventorySupplier;
//    private Client receivableSummaryCustomer;
//    private Client receivableLedgerCustomer;
//    private Client receivableAgingCustomer;
//    private Client payableSummaryCustomer;
//    private Client payableLedgerCustomer;
    private Client detailedSalesCustomer;
    private Client detailedSalesSupplier;
    private Client detailedSaleSupplier;
    private Client postDatedCustomr;
    private Client postDatedSupplier;
    private Client salesPerson;
    private Item item;
    private int dailySalesCollectionReportType = 0;
    private int dailySalesPaymentReportType = 0;
    private int dailySalesReportReportType=0;
    private int dailyOtcReportReportType=0;
    private boolean isInit = true;
    TableRowSorter<DefaultTableModel> sorter;
    DefaultTableModel itemLedgerModel;
    /** Creates new form ClientMainUi */
    public OtherReportsMainUi() {
        initComponents();
        initializeLedgerDates();
        isInit = false;
//        jTabbedPane1.remove(9);
    }
    
    public OtherReportsMainUi(boolean isTrue) {
        initComponents();
        initializeLedgerDates();
        isInit = false;
        
        for(int i = 0; i<2;i++){
            jTabbedPane1.remove(0);
        }
        for(int i = 0; i<6;i++){
            jTabbedPane1.remove(2);
        }
        
//        jTabbedPane1.remove(9);
    }
    
     public OtherReportsMainUi(Short userId) {
        initComponents();
        initializeLedgerDates();
        isInit = false;
       ArrayList<Component> tabs = checkRights(userId); 
        for(Component comp :tabs){
            jTabbedPane1.remove(comp);
        }
        
        
//        jTabbedPane1.remove(9);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel13 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        dailySalesReportButtonGroup = new javax.swing.ButtonGroup();
        dailySalesCollectiontButtonGroup = new javax.swing.ButtonGroup();
        dailySalesPaymentButtonGroup = new javax.swing.ButtonGroup();
        dailyOtcReportButtonGroup = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        itemNameLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemLedgerTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        itemLedgerFromMonthComboBox = new javax.swing.JComboBox();
        itemLedgerFromDayComboBox = new javax.swing.JComboBox();
        itemLedgerFromYearComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        itemLedgerToMonthComboBox = new javax.swing.JComboBox();
        itemLedgerToDayComboBox = new javax.swing.JComboBox();
        itemLedgerToYearComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        ledgerLocationComboBox = new javax.swing.JComboBox();
        jPanel21 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        inventorySupplierNameLabel = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        inventoryDatePanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox();
        jComboBox8 = new javax.swing.JComboBox();
        jComboBox9 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jComboBox10 = new javax.swing.JComboBox();
        jComboBox11 = new javax.swing.JComboBox();
        jComboBox12 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        inventoryTable = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        inventoryLocationComboBox = new javax.swing.JComboBox();
        jPanel7 = new javax.swing.JPanel();
        receivableSummaryDatePanel2 = new javax.swing.JPanel();
        dailySalesCollectionMonthComboBox = new javax.swing.JComboBox();
        dailySalesCollectionDayComboBox = new javax.swing.JComboBox();
        dailySalesCollectionYearComboBox = new javax.swing.JComboBox();
        dailySalesMonthMinus = new javax.swing.JButton();
        dailySalesDayMinus = new javax.swing.JButton();
        dailySalesDayPlus = new javax.swing.JButton();
        dailySalesMonthPlus = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        dailySalesSummaryTable = new javax.swing.JTable();
        jButton12 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        dailySalesCollectionDailyRadioButton = new javax.swing.JRadioButton();
        dailySalesCollectionMonthlyRadioButton = new javax.swing.JRadioButton();
        dailySalesCollectionYearlyRadioButton = new javax.swing.JRadioButton();
        jPanel15 = new javax.swing.JPanel();
        receivableSummaryDatePanel4 = new javax.swing.JPanel();
        dailySalesPaymentMonthComboBox = new javax.swing.JComboBox();
        dailySalesPaymentDayComboBox = new javax.swing.JComboBox();
        dailySalesPaymentYearComboBox = new javax.swing.JComboBox();
        dailySalesPayMonthMinus = new javax.swing.JButton();
        dailySalesPayDayMinus = new javax.swing.JButton();
        dailySalesPayDayPlus = new javax.swing.JButton();
        dailySalesPayMonthPlus = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        dailySalesSummaryTable1 = new javax.swing.JTable();
        jButton33 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        dailySalesPaymentDailyRadioButton = new javax.swing.JRadioButton();
        dailySalesPaymentMonthlyRadioButton = new javax.swing.JRadioButton();
        dailySalesPaymentYearlyRadioButton = new javax.swing.JRadioButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        dailySalesReportDailyRadioButton = new javax.swing.JRadioButton();
        dailySalesReportMonthlyRadioButton = new javax.swing.JRadioButton();
        dailySalesReportYearlyRadioButton = new javax.swing.JRadioButton();
        receivableSummaryDatePanel3 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        dailySalesMonthComboBox = new javax.swing.JComboBox();
        dailySalesDayComboBox = new javax.swing.JComboBox();
        dailySalesYearComboBox = new javax.swing.JComboBox();
        dailySalesRepMonthMinus = new javax.swing.JButton();
        dailySalesRepDayMinus = new javax.swing.JButton();
        dailySalesRepDayPlus = new javax.swing.JButton();
        dailySalesRepMonthPlus = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        detailedDailySalesTable = new javax.swing.JTable();
        jButton28 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        detSalesCustomerNameLabel = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        detailedSalesCustomerDatePanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        detSalesCustFMonthComboBox = new javax.swing.JComboBox();
        detSalesCustFDayComboBox = new javax.swing.JComboBox();
        detSalesCustFYearComboBox = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        detSalesCustTMonthComboBox = new javax.swing.JComboBox();
        detSalesCustTDayComboBox = new javax.swing.JComboBox();
        detSalesCustTYearComboBox = new javax.swing.JComboBox();
        jScrollPane9 = new javax.swing.JScrollPane();
        detailedSalesCustomerTable = new javax.swing.JTable();
        jButton21 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        detSalesSupplierNameLabel = new javax.swing.JLabel();
        jButton22 = new javax.swing.JButton();
        detailedSalesSupplierDatePanel = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        detSalesSuppFMonthComboBox = new javax.swing.JComboBox();
        detSalesSuppFDayComboBox = new javax.swing.JComboBox();
        detSalesSuppFYearComboBox = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        detSalesSuppTMonthComboBox = new javax.swing.JComboBox();
        detSalesSuppTDayComboBox = new javax.swing.JComboBox();
        detSalesSuppTYearComboBox = new javax.swing.JComboBox();
        jScrollPane10 = new javax.swing.JScrollPane();
        detailedSalesSupplierTable = new javax.swing.JTable();
        jButton23 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        detSalesSupplierNameLabel1 = new javax.swing.JLabel();
        jButton24 = new javax.swing.JButton();
        jScrollPane15 = new javax.swing.JScrollPane();
        detSalesSupplierTable = new javax.swing.JTable();
        jButton25 = new javax.swing.JButton();
        receivableSummaryDatePanel6 = new javax.swing.JPanel();
        detSalesMonthComboBox = new javax.swing.JComboBox();
        detSalesYearComboBox = new javax.swing.JComboBox();
        dailySalesMonthMinus1 = new javax.swing.JButton();
        dailySalesDayMinus1 = new javax.swing.JButton();
        dailySalesDayPlus1 = new javax.swing.JButton();
        dailySalesMonthPlus1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        ledgerLocationComboBox1 = new javax.swing.JComboBox();
        jPanel18 = new javax.swing.JPanel();
        transferLabel = new javax.swing.JLabel();
        transferNameLabel = new javax.swing.JLabel();
        transferButton = new javax.swing.JButton();
        detailedSalesSupplierDatePanel1 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        transferFromMonthComboBox = new javax.swing.JComboBox();
        transferFromDayComboBox = new javax.swing.JComboBox();
        transferFromYearComboBox = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        transferToMonthComboBox = new javax.swing.JComboBox();
        transferToDayComboBox = new javax.swing.JComboBox();
        transferToYearComboBox = new javax.swing.JComboBox();
        jScrollPane13 = new javax.swing.JScrollPane();
        transferTable = new javax.swing.JTable();
        jButton35 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        receivableSummaryDatePanel5 = new javax.swing.JPanel();
        dailyOtcMonthComboBox1 = new javax.swing.JComboBox();
        dailyOtcDayComboBox1 = new javax.swing.JComboBox();
        dailyOtcYearComboBox1 = new javax.swing.JComboBox();
        dailyOtcReportMonthMinus = new javax.swing.JButton();
        dailyOtcReportDayMinus = new javax.swing.JButton();
        dailyOtcReportDayPlus = new javax.swing.JButton();
        dailyOtcReportMonthPlus = new javax.swing.JButton();
        jScrollPane14 = new javax.swing.JScrollPane();
        dailyOtcTable1 = new javax.swing.JTable();
        jButton39 = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        dailyOtcReportDailyRadioButton = new javax.swing.JRadioButton();
        dailyOtcReportMonthlyRadioButton = new javax.swing.JRadioButton();
        dailyOtcReportYearlyRadioButton = new javax.swing.JRadioButton();
        jPanel19 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        detSalesCustomerNameLabel1 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        detailedSalesCustomerDatePanel1 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        detailedSalesPersonFMonthComboBox = new javax.swing.JComboBox();
        detailedSalesPersontFDayComboBox = new javax.swing.JComboBox();
        detailedSalesPersonFYearComboBox = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        detailedSalesPersonTMonthComboBox = new javax.swing.JComboBox();
        detailedSalesPersonTDayComboBox = new javax.swing.JComboBox();
        detailedSalesPersonTYearComboBox = new javax.swing.JComboBox();
        jScrollPane16 = new javax.swing.JScrollPane();
        detailedSalesCustomerTable1 = new javax.swing.JTable();
        jButton26 = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        postDatedNameLabel1 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        postDatedSummaryDatePanel1 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jComboBox31 = new javax.swing.JComboBox();
        jComboBox32 = new javax.swing.JComboBox();
        jComboBox33 = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jComboBox34 = new javax.swing.JComboBox();
        jComboBox35 = new javax.swing.JComboBox();
        jComboBox36 = new javax.swing.JComboBox();
        jScrollPane7 = new javax.swing.JScrollPane();
        postDatedSummaryTable1 = new javax.swing.JTable();
        jButton15 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        postDatedNameLabel = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        postDatedSummaryDatePanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jComboBox25 = new javax.swing.JComboBox();
        jComboBox26 = new javax.swing.JComboBox();
        jComboBox27 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jComboBox28 = new javax.swing.JComboBox();
        jComboBox29 = new javax.swing.JComboBox();
        jComboBox30 = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        postDatedSummaryTable = new javax.swing.JTable();
        jButton10 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setMinimumSize(new java.awt.Dimension(755, 325));

        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentShown(evt);
            }
        });
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Item Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel1, gridBagConstraints);

        itemNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel1.add(itemNameLabel, gridBagConstraints);

        jButton1.setText("Search...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel1.add(jButton1, gridBagConstraints);

        itemLedgerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Invoice No.", "Client Name", "IN/OUT", "Price", "Quantity as of"
            }
        ));
        jScrollPane1.setViewportView(itemLedgerTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jButton2.setText("Generate Report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jButton2, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        jPanel5.add(jLabel3, gridBagConstraints);

        itemLedgerFromMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        itemLedgerFromMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLedgerFromMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel5.add(itemLedgerFromMonthComboBox, gridBagConstraints);

        itemLedgerFromDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        itemLedgerFromDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLedgerFromDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(itemLedgerFromDayComboBox, gridBagConstraints);

        itemLedgerFromYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        itemLedgerFromYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLedgerFromYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(itemLedgerFromYearComboBox, gridBagConstraints);

        jLabel4.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        jPanel5.add(jLabel4, gridBagConstraints);

        itemLedgerToMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        itemLedgerToMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLedgerToMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(itemLedgerToMonthComboBox, gridBagConstraints);

        itemLedgerToDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        itemLedgerToDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLedgerToDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(itemLedgerToDayComboBox, gridBagConstraints);

        itemLedgerToYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        itemLedgerToYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLedgerToYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(itemLedgerToYearComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jPanel5, gridBagConstraints);

        jLabel2.setText("Location");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel2, gridBagConstraints);

        ledgerLocationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ledgerLocationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ledgerLocationComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(ledgerLocationComboBox, gridBagConstraints);

        jPanel21.setMinimumSize(new java.awt.Dimension(230, 30));
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jLabel13.setText("Search:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel21.add(jLabel13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 5, 0);
        jPanel21.add(txtSearch, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 0);
        jPanel1.add(jPanel21, gridBagConstraints);

        jTabbedPane1.addTab("Item Ledger", jPanel1);

        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(jLabel5, gridBagConstraints);

        inventorySupplierNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel2.add(inventorySupplierNameLabel, gridBagConstraints);

        jButton3.setText("Search...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel2.add(jButton3, gridBagConstraints);

        inventoryDatePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        inventoryDatePanel.setLayout(new java.awt.GridBagLayout());

        jLabel7.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        inventoryDatePanel.add(jLabel7, gridBagConstraints);

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        inventoryDatePanel.add(jComboBox7, gridBagConstraints);

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel.add(jComboBox8, gridBagConstraints);

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel.add(jComboBox9, gridBagConstraints);

        jLabel8.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        inventoryDatePanel.add(jLabel8, gridBagConstraints);

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel.add(jComboBox10, gridBagConstraints);

        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel.add(jComboBox11, gridBagConstraints);

        jComboBox12.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel.add(jComboBox12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(inventoryDatePanel, gridBagConstraints);

        inventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane2.setViewportView(inventoryTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel2.add(jScrollPane2, gridBagConstraints);

        jButton4.setText("Generate Report");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel2.add(jButton4, gridBagConstraints);

        jLabel29.setText("Location");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(jLabel29, gridBagConstraints);

        inventoryLocationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        inventoryLocationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryLocationComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(inventoryLocationComboBox, gridBagConstraints);

        jTabbedPane1.addTab("Inventory", jPanel2);

        jPanel7.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel7ComponentShown(evt);
            }
        });
        jPanel7.setLayout(new java.awt.GridBagLayout());

        receivableSummaryDatePanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        receivableSummaryDatePanel2.setLayout(new java.awt.GridBagLayout());

        dailySalesCollectionMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        dailySalesCollectionMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesCollectionMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel2.add(dailySalesCollectionMonthComboBox, gridBagConstraints);

        dailySalesCollectionDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dailySalesCollectionDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesCollectionDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel2.add(dailySalesCollectionDayComboBox, gridBagConstraints);

        dailySalesCollectionYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        dailySalesCollectionYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesCollectionYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel2.add(dailySalesCollectionYearComboBox, gridBagConstraints);

        dailySalesMonthMinus.setText("<<");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel2.add(dailySalesMonthMinus, gridBagConstraints);

        dailySalesDayMinus.setText("<");
        dailySalesDayMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesDayMinusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel2.add(dailySalesDayMinus, gridBagConstraints);

        dailySalesDayPlus.setText(">");
        dailySalesDayPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesDayPlusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel2.add(dailySalesDayPlus, gridBagConstraints);

        dailySalesMonthPlus.setText(">>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel2.add(dailySalesMonthPlus, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel7.add(receivableSummaryDatePanel2, gridBagConstraints);

        dailySalesSummaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane6.setViewportView(dailySalesSummaryTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel7.add(jScrollPane6, gridBagConstraints);

        jButton12.setText("Generate Report");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel7.add(jButton12, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabel10.setText("Report Type: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanel8.add(jLabel10, gridBagConstraints);

        dailySalesCollectiontButtonGroup.add(dailySalesCollectionDailyRadioButton);
        dailySalesCollectionDailyRadioButton.setSelected(true);
        dailySalesCollectionDailyRadioButton.setText("Daily");
        dailySalesCollectionDailyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesCollectionDailyRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel8.add(dailySalesCollectionDailyRadioButton, gridBagConstraints);

        dailySalesCollectiontButtonGroup.add(dailySalesCollectionMonthlyRadioButton);
        dailySalesCollectionMonthlyRadioButton.setText("Monthly");
        dailySalesCollectionMonthlyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesCollectionMonthlyRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel8.add(dailySalesCollectionMonthlyRadioButton, gridBagConstraints);

        dailySalesCollectiontButtonGroup.add(dailySalesCollectionYearlyRadioButton);
        dailySalesCollectionYearlyRadioButton.setText("Yearly");
        dailySalesCollectionYearlyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesCollectionYearlyRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel8.add(dailySalesCollectionYearlyRadioButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel7.add(jPanel8, gridBagConstraints);

        jTabbedPane1.addTab("Daily Sales Collection", jPanel7);

        jPanel15.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel15ComponentShown(evt);
            }
        });
        jPanel15.setLayout(new java.awt.GridBagLayout());

        receivableSummaryDatePanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        receivableSummaryDatePanel4.setLayout(new java.awt.GridBagLayout());

        dailySalesPaymentMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        dailySalesPaymentMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesPaymentMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel4.add(dailySalesPaymentMonthComboBox, gridBagConstraints);

        dailySalesPaymentDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dailySalesPaymentDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesPaymentDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel4.add(dailySalesPaymentDayComboBox, gridBagConstraints);

        dailySalesPaymentYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        dailySalesPaymentYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesPaymentYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel4.add(dailySalesPaymentYearComboBox, gridBagConstraints);

        dailySalesPayMonthMinus.setText("<<");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel4.add(dailySalesPayMonthMinus, gridBagConstraints);

        dailySalesPayDayMinus.setText("<");
        dailySalesPayDayMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesPayDayMinusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel4.add(dailySalesPayDayMinus, gridBagConstraints);

        dailySalesPayDayPlus.setText(">");
        dailySalesPayDayPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesPayDayPlusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel4.add(dailySalesPayDayPlus, gridBagConstraints);

        dailySalesPayMonthPlus.setText(">>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel4.add(dailySalesPayMonthPlus, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel15.add(receivableSummaryDatePanel4, gridBagConstraints);

        dailySalesSummaryTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane12.setViewportView(dailySalesSummaryTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel15.add(jScrollPane12, gridBagConstraints);

        jButton33.setText("Generate Report");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel15.add(jButton33, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jLabel11.setText("Report Type: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanel9.add(jLabel11, gridBagConstraints);

        dailySalesPaymentButtonGroup.add(dailySalesPaymentDailyRadioButton);
        dailySalesPaymentDailyRadioButton.setSelected(true);
        dailySalesPaymentDailyRadioButton.setText("Daily");
        dailySalesPaymentDailyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesPaymentDailyRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel9.add(dailySalesPaymentDailyRadioButton, gridBagConstraints);

        dailySalesPaymentButtonGroup.add(dailySalesPaymentMonthlyRadioButton);
        dailySalesPaymentMonthlyRadioButton.setText("Monthly");
        dailySalesPaymentMonthlyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesPaymentMonthlyRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel9.add(dailySalesPaymentMonthlyRadioButton, gridBagConstraints);

        dailySalesPaymentButtonGroup.add(dailySalesPaymentYearlyRadioButton);
        dailySalesPaymentYearlyRadioButton.setText("Yearly");
        dailySalesPaymentYearlyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesPaymentYearlyRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel9.add(dailySalesPaymentYearlyRadioButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel15.add(jPanel9, gridBagConstraints);

        jTabbedPane1.addTab("Daily Sales Payment", jPanel15);

        jPanel12.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel12ComponentShown(evt);
            }
        });
        jPanel12.setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("Report Type: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanel4.add(jLabel9, gridBagConstraints);

        dailySalesReportButtonGroup.add(dailySalesReportDailyRadioButton);
        dailySalesReportDailyRadioButton.setSelected(true);
        dailySalesReportDailyRadioButton.setText("Daily");
        dailySalesReportDailyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesReportDailyRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel4.add(dailySalesReportDailyRadioButton, gridBagConstraints);

        dailySalesReportButtonGroup.add(dailySalesReportMonthlyRadioButton);
        dailySalesReportMonthlyRadioButton.setText("Monthly");
        dailySalesReportMonthlyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesReportMonthlyRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel4.add(dailySalesReportMonthlyRadioButton, gridBagConstraints);

        dailySalesReportButtonGroup.add(dailySalesReportYearlyRadioButton);
        dailySalesReportYearlyRadioButton.setText("Yearly");
        dailySalesReportYearlyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesReportYearlyRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel4.add(dailySalesReportYearlyRadioButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel12.add(jPanel4, gridBagConstraints);

        receivableSummaryDatePanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        receivableSummaryDatePanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        dailySalesMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        dailySalesMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 0, 0);
        jPanel3.add(dailySalesMonthComboBox, gridBagConstraints);

        dailySalesDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dailySalesDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 5, 0, 0);
        jPanel3.add(dailySalesDayComboBox, gridBagConstraints);

        dailySalesYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        dailySalesYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 5, 0, 0);
        jPanel3.add(dailySalesYearComboBox, gridBagConstraints);

        dailySalesRepMonthMinus.setText("<<");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel3.add(dailySalesRepMonthMinus, gridBagConstraints);

        dailySalesRepDayMinus.setText("<");
        dailySalesRepDayMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesRepDayMinusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel3.add(dailySalesRepDayMinus, gridBagConstraints);

        dailySalesRepDayPlus.setText(">");
        dailySalesRepDayPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesRepDayPlusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel3.add(dailySalesRepDayPlus, gridBagConstraints);

        dailySalesRepMonthPlus.setText(">>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel3.add(dailySalesRepMonthPlus, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        receivableSummaryDatePanel3.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel12.add(receivableSummaryDatePanel3, gridBagConstraints);

        detailedDailySalesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane11.setViewportView(detailedDailySalesTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel12.add(jScrollPane11, gridBagConstraints);

        jButton28.setText("Generate Report");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel12.add(jButton28, gridBagConstraints);

        jTabbedPane1.addTab("Daily Sales Report", jPanel12);

        jPanel10.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel10ComponentShown(evt);
            }
        });
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jLabel17.setText("Customer Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel10.add(jLabel17, gridBagConstraints);

        detSalesCustomerNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel10.add(detSalesCustomerNameLabel, gridBagConstraints);

        jButton11.setText("Search...");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel10.add(jButton11, gridBagConstraints);

        detailedSalesCustomerDatePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        detailedSalesCustomerDatePanel.setLayout(new java.awt.GridBagLayout());

        jLabel18.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        detailedSalesCustomerDatePanel.add(jLabel18, gridBagConstraints);

        detSalesCustFMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        detSalesCustFMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesCustFMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        detailedSalesCustomerDatePanel.add(detSalesCustFMonthComboBox, gridBagConstraints);

        detSalesCustFDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        detSalesCustFDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesCustFDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel.add(detSalesCustFDayComboBox, gridBagConstraints);

        detSalesCustFYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        detSalesCustFYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesCustFYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel.add(detSalesCustFYearComboBox, gridBagConstraints);

        jLabel19.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        detailedSalesCustomerDatePanel.add(jLabel19, gridBagConstraints);

        detSalesCustTMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        detSalesCustTMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesCustTMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel.add(detSalesCustTMonthComboBox, gridBagConstraints);

        detSalesCustTDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        detSalesCustTDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesCustTDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel.add(detSalesCustTDayComboBox, gridBagConstraints);

        detSalesCustTYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        detSalesCustTYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesCustTYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel.add(detSalesCustTYearComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel10.add(detailedSalesCustomerDatePanel, gridBagConstraints);

        detailedSalesCustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane9.setViewportView(detailedSalesCustomerTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel10.add(jScrollPane9, gridBagConstraints);

        jButton21.setText("Generate Report");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel10.add(jButton21, gridBagConstraints);

        jTabbedPane1.addTab("Detailed Sales Report (Customer)", jPanel10);

        jPanel11.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel11ComponentShown(evt);
            }
        });
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel26.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel11.add(jLabel26, gridBagConstraints);

        detSalesSupplierNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel11.add(detSalesSupplierNameLabel, gridBagConstraints);

        jButton22.setText("Search...");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel11.add(jButton22, gridBagConstraints);

        detailedSalesSupplierDatePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        detailedSalesSupplierDatePanel.setLayout(new java.awt.GridBagLayout());

        jLabel27.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        detailedSalesSupplierDatePanel.add(jLabel27, gridBagConstraints);

        detSalesSuppFMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        detSalesSuppFMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesSuppFMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        detailedSalesSupplierDatePanel.add(detSalesSuppFMonthComboBox, gridBagConstraints);

        detSalesSuppFDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        detSalesSuppFDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesSuppFDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel.add(detSalesSuppFDayComboBox, gridBagConstraints);

        detSalesSuppFYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        detSalesSuppFYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesSuppFYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel.add(detSalesSuppFYearComboBox, gridBagConstraints);

        jLabel28.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        detailedSalesSupplierDatePanel.add(jLabel28, gridBagConstraints);

        detSalesSuppTMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        detSalesSuppTMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesSuppTMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel.add(detSalesSuppTMonthComboBox, gridBagConstraints);

        detSalesSuppTDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        detSalesSuppTDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesSuppTDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel.add(detSalesSuppTDayComboBox, gridBagConstraints);

        detSalesSuppTYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        detSalesSuppTYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesSuppTYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel.add(detSalesSuppTYearComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel11.add(detailedSalesSupplierDatePanel, gridBagConstraints);

        detailedSalesSupplierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane10.setViewportView(detailedSalesSupplierTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel11.add(jScrollPane10, gridBagConstraints);

        jButton23.setText("Generate Report");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel11.add(jButton23, gridBagConstraints);

        jTabbedPane1.addTab("Detailed Purchase Report (Supplier)", jPanel11);

        jPanel14.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel14ComponentShown(evt);
            }
        });
        jPanel14.setLayout(new java.awt.GridBagLayout());

        jLabel30.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel14.add(jLabel30, gridBagConstraints);

        detSalesSupplierNameLabel1.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel14.add(detSalesSupplierNameLabel1, gridBagConstraints);

        jButton24.setText("Search...");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel14.add(jButton24, gridBagConstraints);

        detSalesSupplierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane15.setViewportView(detSalesSupplierTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel14.add(jScrollPane15, gridBagConstraints);

        jButton25.setText("Generate Report");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel14.add(jButton25, gridBagConstraints);

        receivableSummaryDatePanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        receivableSummaryDatePanel6.setLayout(new java.awt.GridBagLayout());

        detSalesMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        detSalesMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel6.add(detSalesMonthComboBox, gridBagConstraints);

        detSalesYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        detSalesYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel6.add(detSalesYearComboBox, gridBagConstraints);

        dailySalesMonthMinus1.setText("<<");
        dailySalesMonthMinus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesMonthMinus1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel6.add(dailySalesMonthMinus1, gridBagConstraints);

        dailySalesDayMinus1.setText("<");
        dailySalesDayMinus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesDayMinus1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel6.add(dailySalesDayMinus1, gridBagConstraints);

        dailySalesDayPlus1.setText(">");
        dailySalesDayPlus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesDayPlus1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel6.add(dailySalesDayPlus1, gridBagConstraints);

        dailySalesMonthPlus1.setText(">>");
        dailySalesMonthPlus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesMonthPlus1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel6.add(dailySalesMonthPlus1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel14.add(receivableSummaryDatePanel6, gridBagConstraints);

        jLabel6.setText("Location");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel14.add(jLabel6, gridBagConstraints);

        ledgerLocationComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ledgerLocationComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ledgerLocationComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel14.add(ledgerLocationComboBox1, gridBagConstraints);

        jTabbedPane1.addTab("Detailed Sales Report (Supplier)", jPanel14);

        jPanel18.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel18ComponentShown(evt);
            }
        });
        jPanel18.setLayout(new java.awt.GridBagLayout());

        transferLabel.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel18.add(transferLabel, gridBagConstraints);

        transferNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel18.add(transferNameLabel, gridBagConstraints);

        transferButton.setText("Search...");
        transferButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel18.add(transferButton, gridBagConstraints);

        detailedSalesSupplierDatePanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        detailedSalesSupplierDatePanel1.setLayout(new java.awt.GridBagLayout());

        jLabel31.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        detailedSalesSupplierDatePanel1.add(jLabel31, gridBagConstraints);

        transferFromMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        transferFromMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferFromMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        detailedSalesSupplierDatePanel1.add(transferFromMonthComboBox, gridBagConstraints);

        transferFromDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        transferFromDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferFromDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel1.add(transferFromDayComboBox, gridBagConstraints);

        transferFromYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        transferFromYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferFromYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel1.add(transferFromYearComboBox, gridBagConstraints);

        jLabel32.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        detailedSalesSupplierDatePanel1.add(jLabel32, gridBagConstraints);

        transferToMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        transferToMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferToMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel1.add(transferToMonthComboBox, gridBagConstraints);

        transferToDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        transferToDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferToDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel1.add(transferToDayComboBox, gridBagConstraints);

        transferToYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        transferToYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferToYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel1.add(transferToYearComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel18.add(detailedSalesSupplierDatePanel1, gridBagConstraints);

        transferTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane13.setViewportView(transferTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel18.add(jScrollPane13, gridBagConstraints);

        jButton35.setText("Generate Report");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel18.add(jButton35, gridBagConstraints);

        jTabbedPane1.addTab("Detailed Transfer Report", jPanel18);

        jPanel17.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel17ComponentShown(evt);
            }
        });
        jPanel17.setLayout(new java.awt.GridBagLayout());

        receivableSummaryDatePanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        receivableSummaryDatePanel5.setLayout(new java.awt.GridBagLayout());

        dailyOtcMonthComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        dailyOtcMonthComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyOtcMonthComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel5.add(dailyOtcMonthComboBox1, gridBagConstraints);

        dailyOtcDayComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dailyOtcDayComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyOtcDayComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel5.add(dailyOtcDayComboBox1, gridBagConstraints);

        dailyOtcYearComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        dailyOtcYearComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyOtcYearComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel5.add(dailyOtcYearComboBox1, gridBagConstraints);

        dailyOtcReportMonthMinus.setText("<<");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel5.add(dailyOtcReportMonthMinus, gridBagConstraints);

        dailyOtcReportDayMinus.setText("<");
        dailyOtcReportDayMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyOtcReportDayMinusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel5.add(dailyOtcReportDayMinus, gridBagConstraints);

        dailyOtcReportDayPlus.setText(">");
        dailyOtcReportDayPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyOtcReportDayPlusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel5.add(dailyOtcReportDayPlus, gridBagConstraints);

        dailyOtcReportMonthPlus.setText(">>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel5.add(dailyOtcReportMonthPlus, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel17.add(receivableSummaryDatePanel5, gridBagConstraints);

        dailyOtcTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane14.setViewportView(dailyOtcTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel17.add(jScrollPane14, gridBagConstraints);

        jButton39.setText("Generate Report");
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel17.add(jButton39, gridBagConstraints);

        jPanel20.setLayout(new java.awt.GridBagLayout());

        jLabel12.setText("Report Type: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanel20.add(jLabel12, gridBagConstraints);

        dailyOtcReportButtonGroup.add(dailyOtcReportDailyRadioButton);
        dailyOtcReportDailyRadioButton.setSelected(true);
        dailyOtcReportDailyRadioButton.setText("Daily");
        dailyOtcReportDailyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyOtcReportDailyRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(dailyOtcReportDailyRadioButton, gridBagConstraints);

        dailyOtcReportButtonGroup.add(dailyOtcReportMonthlyRadioButton);
        dailyOtcReportMonthlyRadioButton.setText("Monthly");
        dailyOtcReportMonthlyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyOtcReportMonthlyRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(dailyOtcReportMonthlyRadioButton, gridBagConstraints);

        dailyOtcReportButtonGroup.add(dailyOtcReportYearlyRadioButton);
        dailyOtcReportYearlyRadioButton.setText("Yearly");
        dailyOtcReportYearlyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyOtcReportYearlyRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(dailyOtcReportYearlyRadioButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel17.add(jPanel20, gridBagConstraints);

        jTabbedPane1.addTab("Daily OTC Report", jPanel17);

        jPanel19.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel19ComponentShown(evt);
            }
        });
        jPanel19.setLayout(new java.awt.GridBagLayout());

        jLabel20.setText("Sales Person");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel19.add(jLabel20, gridBagConstraints);

        detSalesCustomerNameLabel1.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel19.add(detSalesCustomerNameLabel1, gridBagConstraints);

        jButton13.setText("Search...");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel19.add(jButton13, gridBagConstraints);

        detailedSalesCustomerDatePanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        detailedSalesCustomerDatePanel1.setLayout(new java.awt.GridBagLayout());

        jLabel21.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        detailedSalesCustomerDatePanel1.add(jLabel21, gridBagConstraints);

        detailedSalesPersonFMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        detailedSalesPersonFMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedSalesPersonFMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        detailedSalesCustomerDatePanel1.add(detailedSalesPersonFMonthComboBox, gridBagConstraints);

        detailedSalesPersontFDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        detailedSalesPersontFDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedSalesPersontFDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel1.add(detailedSalesPersontFDayComboBox, gridBagConstraints);

        detailedSalesPersonFYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        detailedSalesPersonFYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedSalesPersonFYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel1.add(detailedSalesPersonFYearComboBox, gridBagConstraints);

        jLabel22.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        detailedSalesCustomerDatePanel1.add(jLabel22, gridBagConstraints);

        detailedSalesPersonTMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        detailedSalesPersonTMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedSalesPersonTMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel1.add(detailedSalesPersonTMonthComboBox, gridBagConstraints);

        detailedSalesPersonTDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        detailedSalesPersonTDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedSalesPersonTDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel1.add(detailedSalesPersonTDayComboBox, gridBagConstraints);

        detailedSalesPersonTYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        detailedSalesPersonTYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedSalesPersonTYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel1.add(detailedSalesPersonTYearComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel19.add(detailedSalesCustomerDatePanel1, gridBagConstraints);

        detailedSalesCustomerTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane16.setViewportView(detailedSalesCustomerTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel19.add(jScrollPane16, gridBagConstraints);

        jButton26.setText("Generate Report");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel19.add(jButton26, gridBagConstraints);

        jTabbedPane1.addTab("Detailed Sales Report (Sales Person)", jPanel19);

        jPanel22.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel22ComponentShown(evt);
            }
        });
        jPanel22.setLayout(new java.awt.GridBagLayout());

        jLabel23.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel22.add(jLabel23, gridBagConstraints);

        postDatedNameLabel1.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel22.add(postDatedNameLabel1, gridBagConstraints);

        jButton14.setText("Search...");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel22.add(jButton14, gridBagConstraints);

        postDatedSummaryDatePanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        postDatedSummaryDatePanel1.setLayout(new java.awt.GridBagLayout());

        jLabel24.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        postDatedSummaryDatePanel1.add(jLabel24, gridBagConstraints);

        jComboBox31.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        postDatedSummaryDatePanel1.add(jComboBox31, gridBagConstraints);

        jComboBox32.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel1.add(jComboBox32, gridBagConstraints);

        jComboBox33.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel1.add(jComboBox33, gridBagConstraints);

        jLabel25.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        postDatedSummaryDatePanel1.add(jLabel25, gridBagConstraints);

        jComboBox34.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel1.add(jComboBox34, gridBagConstraints);

        jComboBox35.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel1.add(jComboBox35, gridBagConstraints);

        jComboBox36.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel1.add(jComboBox36, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel22.add(postDatedSummaryDatePanel1, gridBagConstraints);

        postDatedSummaryTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane7.setViewportView(postDatedSummaryTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel22.add(jScrollPane7, gridBagConstraints);

        jButton15.setText("Generate Report");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel22.add(jButton15, gridBagConstraints);

        jTabbedPane1.addTab("Post Dated Checks Summary (Supplier)", jPanel22);

        jPanel6.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel6ComponentShown(evt);
            }
        });
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel14.setText("Customer Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel6.add(jLabel14, gridBagConstraints);

        postDatedNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel6.add(postDatedNameLabel, gridBagConstraints);

        jButton9.setText("Search...");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel6.add(jButton9, gridBagConstraints);

        postDatedSummaryDatePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        postDatedSummaryDatePanel.setLayout(new java.awt.GridBagLayout());

        jLabel15.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        postDatedSummaryDatePanel.add(jLabel15, gridBagConstraints);

        jComboBox25.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        postDatedSummaryDatePanel.add(jComboBox25, gridBagConstraints);

        jComboBox26.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel.add(jComboBox26, gridBagConstraints);

        jComboBox27.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel.add(jComboBox27, gridBagConstraints);

        jLabel16.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        postDatedSummaryDatePanel.add(jLabel16, gridBagConstraints);

        jComboBox28.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel.add(jComboBox28, gridBagConstraints);

        jComboBox29.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel.add(jComboBox29, gridBagConstraints);

        jComboBox30.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel.add(jComboBox30, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel6.add(postDatedSummaryDatePanel, gridBagConstraints);

        postDatedSummaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane5.setViewportView(postDatedSummaryTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel6.add(jScrollPane5, gridBagConstraints);

        jButton10.setText("Generate Report");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel6.add(jButton10, gridBagConstraints);

        jTabbedPane1.addTab("Post Dated Checks Summary (Customer)", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 882, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
        // TODO add your handling code here:
        ledgerLocationComboBox.setModel(LocationAction.getLocationModel());
        
    }//GEN-LAST:event_jPanel1ComponentShown

    private void itemLedgerToDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLedgerToDayComboBoxActionPerformed
        // TODO add your handling code here:
        itemLedgerSearch();
//        if(!itemNameLabel.getText().equals("-")){
//                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(itemLedgerFromYearComboBox.getSelectedItem().toString()), itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromDayComboBox.getSelectedIndex()+1);
//                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(itemLedgerToYearComboBox.getSelectedItem().toString()), itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
//                    itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//         }
    }//GEN-LAST:event_itemLedgerToDayComboBoxActionPerformed

    private void itemLedgerFromMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLedgerFromMonthComboBoxActionPerformed
        // TODO add your handling code here:
        
//        int i = itemLedgerFromDayComboBox.getSelectedIndex()+1;
//        itemLedgerFromDayComboBox.setModel(DateActions.fixDay(itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromYearComboBox.getSelectedItem().toString()));
//        checkCurrentItemLedgerFromDay(i);
//        itemLedgerSearch();
//         if(!itemNameLabel.getText().equals("-")){
//                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(itemLedgerFromYearComboBox.getSelectedItem().toString()), itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromDayComboBox.getSelectedIndex()+1);
//                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(itemLedgerToYearComboBox.getSelectedItem().toString()), itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
//                    if(fromCal.compareTo(toCal)<=0){
//                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                    } else {
//                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
//                    }
//         }
        DateActions.comboBoxDateAction(itemLedgerFromYearComboBox, itemLedgerFromMonthComboBox, itemLedgerFromDayComboBox);
        itemLedgerSearch();
    }//GEN-LAST:event_itemLedgerFromMonthComboBoxActionPerformed

    private void itemLedgerFromYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLedgerFromYearComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(itemLedgerFromYearComboBox, itemLedgerFromMonthComboBox, itemLedgerFromDayComboBox);
        itemLedgerSearch();
        
    }//GEN-LAST:event_itemLedgerFromYearComboBoxActionPerformed

    private void itemLedgerToMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLedgerToMonthComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(itemLedgerToYearComboBox, itemLedgerToMonthComboBox, itemLedgerToDayComboBox);
        itemLedgerSearch();
    }//GEN-LAST:event_itemLedgerToMonthComboBoxActionPerformed

    private void itemLedgerToYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLedgerToYearComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(itemLedgerToYearComboBox, itemLedgerToMonthComboBox, itemLedgerToDayComboBox);
        itemLedgerSearch();
    }//GEN-LAST:event_itemLedgerToYearComboBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
              SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 4,false);
//        }
       
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getItem() != null){
////                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(itemLedgerFromYearComboBox.getSelectedItem().toString()), itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromDayComboBox.getSelectedIndex()+1);
//                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(itemLedgerToYearComboBox.getSelectedItem().toString()), itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
                    item = detailsPopUp.getItem();
                    itemNameLabel.setText(item.getItemName());
//                    itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                    if(fromCal.compareTo(toCal)<=0){
////                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                        Client loc = (Client) ledgerLocationComboBox.getSelectedItem();
//                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), 
//                                Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime()), loc.getClientId()));
//                         setAlignRight(itemLedgerTable, 3);
//                         setAlignRight(itemLedgerTable, 4);
//                         setAlignRight(itemLedgerTable, 5);
//                         setAlignRight(itemLedgerTable, 6);
//                    } else {
//                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
//                    }
                itemLedgerSearch();
         }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 2,false);
//        }
        
                detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
                    inventorySupplier = detailsPopUp.getClient();
                    inventorySupplierNameLabel.setText(inventorySupplier.getClientName());
                    Client loc = (Client) inventoryLocationComboBox.getSelectedItem();
                    inventoryTable.setModel(ItemAction.getInventoryTableData(inventorySupplier.getClientId(),loc.getClientId()) );
         }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentShown
        inventoryDatePanel.setVisible(false);
        inventoryLocationComboBox.setModel(LocationAction.getLocationModel());
    }//GEN-LAST:event_jPanel2ComponentShown

    private void itemLedgerFromDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLedgerFromDayComboBoxActionPerformed
        // TODO add your handling code here:
        itemLedgerSearch();
//        if(!itemNameLabel.getText().equals("-")){
//                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(itemLedgerFromYearComboBox.getSelectedItem().toString()), itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromDayComboBox.getSelectedIndex()+1);
//                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(itemLedgerToYearComboBox.getSelectedItem().toString()), itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
//                    itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//         }
    }//GEN-LAST:event_itemLedgerFromDayComboBoxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
//        generateExcel(itemLedgerTable.getModel(), "Item Ledger", 0);
//            System.out.println("Table mod rows = "+itemLedgerTable.getModel().getRowCount() );
//            System.out.println("Row Sorter . model rows = "+itemLedgerTable.getRowSorter().getViewRowCount() );
//            System.out.println("table row = "+itemLedgerTable.getRowCount() );
//            System.out.println("Table mod rows = "+itemLedgerTable.getModel().getRowCount() );
//            System.out.println("Mod rows = "+itemLedgerModel.getRowCount() );
            if(!itemNameLabel.getText().equals("-") && !isInit){
   
            DefaultTableModel mod = new DefaultTableModel();
//            if(itemLedgerTable.getModel().getRowCount()!= itemLedgerTable.getRowCount()){
                ArrayList<Integer> index = new ArrayList();
               for(int k = 0; k < itemLedgerTable.getColumnCount(); k++){
                   mod.addColumn(itemLedgerTable.getColumnName(k));
               }
                for(int i = 0; i< itemLedgerTable.getRowCount(); i++){
                  
                    index.add(itemLedgerTable.getRowSorter().convertRowIndexToModel(i));
                }
                
                for(int j =0; j < itemLedgerTable.getModel().getRowCount(); j++){
//                    boolean isView = false;
                    for(Integer indexVal : index){
                        if(j == indexVal){
                            mod.addRow((Vector) itemLedgerModel.getDataVector().elementAt(j));
                        }
                    }
               }

//            }
//            System.out.println("Table mod rows = "+itemLedgerTable.getModel().getRowCount() );
//            if(mod != null){
//                System.out.println("Mod rows = "+mod.getRowCount() );
//            }
                    generateExcel(mod, "Item Ledger", 0);
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        generateExcel(inventoryTable.getModel(), "Inventory Report", 1);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 1,false);
//        }
        
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
                    postDatedCustomr = detailsPopUp.getClient();
                    postDatedNameLabel.setText(postDatedCustomr.getClientName());
                    postDatedSummaryTable.setModel(CollectionAction.getCollectionPostDatedTableData(postDatedCustomr.getClientId()));
         }
                setAlignRight(postDatedSummaryTable, 2);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        generateExcel(postDatedSummaryTable.getModel(), "Post-Dated Summary", 6);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jPanel6ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel6ComponentShown
        // TODO add your handling code here:
        postDatedSummaryDatePanel.setVisible(false);
    }//GEN-LAST:event_jPanel6ComponentShown

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        String title = new String();
        switch(dailySalesCollectionReportType){
            case 1:
                title = "Monthly Sales Collection";
                        
                break;
            case 2:
                title = "Yearly Sales Collection";
                break;
            default:
                title = "Daily Sales Collection";
                
        }
        generateExcel(dailySalesSummaryTable.getModel(), title, 3);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jPanel7ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel7ComponentShown
        // TODO add your handling code here:
        initializeDailySalesTable();
    }//GEN-LAST:event_jPanel7ComponentShown

    private void dailySalesCollectionMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesCollectionMonthComboBoxActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
//         int i = dailySalesDayComboBox.getSelectedIndex()+1;
//        dailySalesDayComboBox.setModel(DateActions.fixDay(dailySalesMonthComboBox.getSelectedIndex(), dailySalesYearComboBox.getSelectedItem().toString()));
//        checkCurrentDailySalesDay(i);
        DateActions.comboBoxDateAction(dailySalesCollectionYearComboBox, dailySalesCollectionMonthComboBox, dailySalesCollectionDayComboBox);
        initializeDailySalesTable();
    }//GEN-LAST:event_dailySalesCollectionMonthComboBoxActionPerformed

    private void dailySalesCollectionDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesCollectionDayComboBoxActionPerformed
        // TODO add your handling code here:
//          int i = dailySalesDayComboBox.getSelectedIndex()+1;
//        dailySalesDayComboBox.setModel(DateActions.fixDay(dailySalesMonthComboBox.getSelectedIndex(), dailySalesYearComboBox.getSelectedItem().toString()));
//        checkCurrentDailySalesDay(i);
        initializeDailySalesTable();
    }//GEN-LAST:event_dailySalesCollectionDayComboBoxActionPerformed

    private void dailySalesCollectionYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesCollectionYearComboBoxActionPerformed
        // TODO add your handling code here:
//          int i = dailySalesDayComboBox.getSelectedIndex()+1;
//        dailySalesDayComboBox.setModel(DateActions.fixDay(dailySalesMonthComboBox.getSelectedIndex(), dailySalesYearComboBox.getSelectedItem().toString()));
//        checkCurrentDailySalesDay(i);
        DateActions.comboBoxDateAction(dailySalesCollectionYearComboBox, dailySalesCollectionMonthComboBox, dailySalesCollectionDayComboBox);
        initializeDailySalesTable();
    }//GEN-LAST:event_dailySalesCollectionYearComboBoxActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 1,false);
//        }
        
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
//                    accountReceivableLedgerTable.setModel(CollectionAction.getReceivableLedgerTableData(receivableLedgerCustomer.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                   detailedSalesCustomerTable.setModel(InvoiceAction.getInvoiceDetailedSalesData(detailsPopUp.getClient().getClientId()));
                    detailedSalesCustomer = detailsPopUp.getClient();
                    detSalesCustomerNameLabel.setText(detailsPopUp.getClient().getClientName());
                    detailedSalesReportCustomerSearch();
         }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        generateExcel(detailedSalesCustomerTable.getModel(), "Detailed Sales (Customer)", 9);
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jPanel10ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel10ComponentShown
        // TODO add your handling code here:
//        detailedSalesCustomerDatePanel.setVisible(false);
    }//GEN-LAST:event_jPanel10ComponentShown

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
         SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 2,false);
//        }
        
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
//                   detailedSalesSupplierTable.setModel(InvoiceAction.getInvoiceDetailedSalesData(detailsPopUp.getClient().getClientId()));
                    detailedSalesSupplier = detailsPopUp.getClient();
                    detSalesSupplierNameLabel.setText(detailsPopUp.getClient().getClientName());
                    detailedSalesReportSupplierSearch();
         } 
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        generateExcel(detailedSalesSupplierTable.getModel(), "Detailed Purchase Report (Supplier)", 10);
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jPanel11ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel11ComponentShown
        // TODO add your handling code here:
//        detailedSalesSupplierDatePanel.setVisible(false);
    }//GEN-LAST:event_jPanel11ComponentShown

    private void dailySalesMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesMonthComboBoxActionPerformed
        // TODO add your handling code here:
//          int i = detailedDailySalesDayComboBox.getSelectedIndex()+1;
//        detailedDailySalesDayComboBox.setModel(DateActions.fixDay(detailedDailySalesMonthComboBox.getSelectedIndex(), detailedDailySalesYearComboBox.getSelectedItem().toString()));
//        checkCurrentDetailedDailySalesDay(i);
        DateActions.comboBoxDateAction(dailySalesYearComboBox, dailySalesMonthComboBox, dailySalesDayComboBox);
        initializeDetailedDailySalesTable();
    }//GEN-LAST:event_dailySalesMonthComboBoxActionPerformed

    private void dailySalesDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesDayComboBoxActionPerformed
        // TODO add your handling code here:
          
        initializeDetailedDailySalesTable();
    }//GEN-LAST:event_dailySalesDayComboBoxActionPerformed

    private void dailySalesYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesYearComboBoxActionPerformed
        // TODO add your handling code here:
//            int i = detailedDailySalesDayComboBox.getSelectedIndex()+1;
//        detailedDailySalesDayComboBox.setModel(DateActions.fixDay(detailedDailySalesMonthComboBox.getSelectedIndex(), detailedDailySalesYearComboBox.getSelectedItem().toString()));
//        checkCurrentDetailedDailySalesDay(i);
        DateActions.comboBoxDateAction(dailySalesYearComboBox, dailySalesMonthComboBox, dailySalesDayComboBox);
        initializeDetailedDailySalesTable();
    }//GEN-LAST:event_dailySalesYearComboBoxActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
        String title = new String();
        switch(dailySalesReportReportType){
            case 1:
                title = "Monthly Sales Report";
                        
                break;
            case 2:
                title = "Yearly Sales Report";
                break;
            default:
                title = "Daily Sales Report";
                
        }
        generateExcel(detailedDailySalesTable.getModel(), title, 8);
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jPanel12ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel12ComponentShown
        // TODO add your handling code here:
        initializeDetailedDailySalesTable();
    }//GEN-LAST:event_jPanel12ComponentShown

    private void detSalesCustFMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesCustFMonthComboBoxActionPerformed
        // TODO add your handling code here:
//                int i = detSalesCustFDayComboBox.getSelectedIndex()+1;
//        detSalesCustFDayComboBox.setModel(DateActions.fixDay(detSalesCustFMonthComboBox.getSelectedIndex(), detSalesCustFYearComboBox.getSelectedItem().toString()));
//        checkCurrentComboBoxDay(detSalesCustFYearComboBox, detSalesCustFMonthComboBox, detSalesCustFDayComboBox, i);
//        payableLedgerSearch();
        DateActions.comboBoxDateAction(detSalesCustFYearComboBox, detSalesCustFMonthComboBox, detSalesCustFDayComboBox);
        detailedSalesReportCustomerSearch();
    }//GEN-LAST:event_detSalesCustFMonthComboBoxActionPerformed

    private void detSalesCustFYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesCustFYearComboBoxActionPerformed
        // TODO add your handling code here:
//            int i = detSalesCustFDayComboBox.getSelectedIndex()+1;
//        detSalesCustFDayComboBox.setModel(DateActions.fixDay(detSalesCustFMonthComboBox.getSelectedIndex(), detSalesCustFYearComboBox.getSelectedItem().toString()));
//        checkCurrentComboBoxDay(detSalesCustFYearComboBox, detSalesCustFMonthComboBox, detSalesCustFDayComboBox, i);
//        payableLedgerSearch();
        DateActions.comboBoxDateAction(detSalesCustFYearComboBox, detSalesCustFMonthComboBox, detSalesCustFDayComboBox);
        detailedSalesReportCustomerSearch();
    }//GEN-LAST:event_detSalesCustFYearComboBoxActionPerformed

    private void detSalesCustTMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesCustTMonthComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(detSalesCustTYearComboBox, detSalesCustTMonthComboBox, detSalesCustTDayComboBox);
        detailedSalesReportCustomerSearch();
    }//GEN-LAST:event_detSalesCustTMonthComboBoxActionPerformed

    private void detSalesCustTYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesCustTYearComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(detSalesCustTYearComboBox, detSalesCustTMonthComboBox, detSalesCustTDayComboBox);
        detailedSalesReportCustomerSearch();
    }//GEN-LAST:event_detSalesCustTYearComboBoxActionPerformed

    private void detSalesSuppFMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesSuppFMonthComboBoxActionPerformed
        DateActions.comboBoxDateAction(detSalesSuppFYearComboBox, detSalesSuppFMonthComboBox, detSalesSuppFDayComboBox);        // TODO add your handling code here:
        detailedSalesReportSupplierSearch();
    }//GEN-LAST:event_detSalesSuppFMonthComboBoxActionPerformed

    private void detSalesSuppFYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesSuppFYearComboBoxActionPerformed
            // TODO add your handling code here:
        DateActions.comboBoxDateAction(detSalesSuppFYearComboBox, detSalesSuppFMonthComboBox, detSalesSuppFDayComboBox);
        detailedSalesReportSupplierSearch();
    }//GEN-LAST:event_detSalesSuppFYearComboBoxActionPerformed

    private void detSalesSuppTMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesSuppTMonthComboBoxActionPerformed
        DateActions.comboBoxDateAction(detSalesSuppTYearComboBox, detSalesSuppTMonthComboBox, detSalesSuppTDayComboBox);
        detailedSalesReportSupplierSearch();
    }//GEN-LAST:event_detSalesSuppTMonthComboBoxActionPerformed

    private void detSalesSuppTYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesSuppTYearComboBoxActionPerformed
        DateActions.comboBoxDateAction(detSalesSuppTYearComboBox, detSalesSuppTMonthComboBox, detSalesSuppTDayComboBox);
        detailedSalesReportSupplierSearch();
        
    }//GEN-LAST:event_detSalesSuppTYearComboBoxActionPerformed

    private void detSalesCustFDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesCustFDayComboBoxActionPerformed
        detailedSalesReportCustomerSearch();
    }//GEN-LAST:event_detSalesCustFDayComboBoxActionPerformed

    private void detSalesCustTDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesCustTDayComboBoxActionPerformed
        detailedSalesReportCustomerSearch();
    }//GEN-LAST:event_detSalesCustTDayComboBoxActionPerformed

    private void detSalesSuppFDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesSuppFDayComboBoxActionPerformed
       detailedSalesReportSupplierSearch();
    }//GEN-LAST:event_detSalesSuppFDayComboBoxActionPerformed

    private void detSalesSuppTDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesSuppTDayComboBoxActionPerformed
       detailedSalesReportSupplierSearch();
    }//GEN-LAST:event_detSalesSuppTDayComboBoxActionPerformed

    private void dailySalesPaymentMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesPaymentMonthComboBoxActionPerformed
        // TODO add your handling code here:
       DateActions.comboBoxDateAction(dailySalesPaymentYearComboBox, dailySalesPaymentMonthComboBox, dailySalesPaymentDayComboBox);
        initializeDailySalesPayableTable();
    }//GEN-LAST:event_dailySalesPaymentMonthComboBoxActionPerformed

    private void dailySalesPaymentDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesPaymentDayComboBoxActionPerformed
        // TODO add your handling code here:
        initializeDailySalesPayableTable();
    }//GEN-LAST:event_dailySalesPaymentDayComboBoxActionPerformed

    private void dailySalesPaymentYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesPaymentYearComboBoxActionPerformed
        // TODO add your handling code here:
       DateActions.comboBoxDateAction(dailySalesPaymentYearComboBox, dailySalesPaymentMonthComboBox, dailySalesPaymentDayComboBox);
        initializeDailySalesPayableTable(); 
    }//GEN-LAST:event_dailySalesPaymentYearComboBoxActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        // TODO add your handling code here:
        String title = new String();
        switch(dailySalesPaymentReportType){
            case 1:
                title = "Monthly Sales Payment";
                        
                break;
            case 2:
                title = "Yearly Sales Payment";
                break;
            default:
                title = "Daily Sales Payment";
                
        }
        generateExcel(dailySalesSummaryTable1.getModel(), title, 5);
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jPanel15ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel15ComponentShown
        // TODO add your handling code here:
                // TODO add your handling code here:
        initializeDailySalesPayableTable();
    }//GEN-LAST:event_jPanel15ComponentShown

    private void ledgerLocationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ledgerLocationComboBoxActionPerformed
        // TODO add your handling code here:
        
            itemLedgerSearch();
        
    }//GEN-LAST:event_ledgerLocationComboBoxActionPerformed

    private void inventoryLocationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryLocationComboBoxActionPerformed
        // TODO add your handling code here:
        
        if(!inventorySupplierNameLabel.getText().equals("-")){
                    Client loc = (Client) inventoryLocationComboBox.getSelectedItem();
                    inventoryTable.setModel(ItemAction.getInventoryTableData(inventorySupplier.getClientId(),loc.getClientId()) );
        }
        setAlignRight(inventoryTable, 1);
        setAlignRight(inventoryTable, 2);
        
    }//GEN-LAST:event_inventoryLocationComboBoxActionPerformed

    private void transferFromMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferFromMonthComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(transferFromYearComboBox, transferFromMonthComboBox, transferFromDayComboBox);
        initializeDetailedTransferTable();
    }//GEN-LAST:event_transferFromMonthComboBoxActionPerformed

    private void transferFromDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferFromDayComboBoxActionPerformed
        // TODO add your handling code here:
        initializeDetailedTransferTable();
    }//GEN-LAST:event_transferFromDayComboBoxActionPerformed

    private void transferFromYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferFromYearComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(transferFromYearComboBox, transferFromMonthComboBox, transferFromDayComboBox);
        initializeDetailedTransferTable();
    }//GEN-LAST:event_transferFromYearComboBoxActionPerformed

    private void transferToMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferToMonthComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(transferToYearComboBox, transferToMonthComboBox, transferToDayComboBox);
        initializeDetailedTransferTable();
    }//GEN-LAST:event_transferToMonthComboBoxActionPerformed

    private void transferToDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferToDayComboBoxActionPerformed
        // TODO add your handling code here:
//        DateActions.comboBoxDateAction(transferToYearComboBox, transferToMonthComboBox, transferToDayComboBox);
        initializeDetailedTransferTable();
    }//GEN-LAST:event_transferToDayComboBoxActionPerformed

    private void transferToYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferToYearComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(transferToYearComboBox, transferToMonthComboBox, transferToDayComboBox);
        initializeDetailedTransferTable();
    }//GEN-LAST:event_transferToYearComboBoxActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        // TODO add your handling code here:
         generateExcel(transferTable.getModel(), "Transfer Report", 11);
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jPanel18ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel18ComponentShown
        // TODO add your handling code here:
       initializeDetailedTransferTable();
    }//GEN-LAST:event_jPanel18ComponentShown

    private void transferButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transferButtonActionPerformed

    private void dailyOtcMonthComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyOtcMonthComboBox1ActionPerformed
        // TODO add your handling code here:
         DateActions.comboBoxDateAction(transferFromYearComboBox, transferFromMonthComboBox, transferFromDayComboBox);
        initializeDailyOTCTable();
    }//GEN-LAST:event_dailyOtcMonthComboBox1ActionPerformed

    private void dailyOtcDayComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyOtcDayComboBox1ActionPerformed
        // TODO add your handling code here:
           
        initializeDailyOTCTable();
    }//GEN-LAST:event_dailyOtcDayComboBox1ActionPerformed

    private void dailyOtcYearComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyOtcYearComboBox1ActionPerformed
        // TODO add your handling code here:
           DateActions.comboBoxDateAction(transferFromYearComboBox, transferFromMonthComboBox, transferFromDayComboBox);
        initializeDailyOTCTable();
    }//GEN-LAST:event_dailyOtcYearComboBox1ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
        // TODO add your handling code here:
        String title = new String();
        switch(dailyOtcReportReportType){
            case 1:
                title = "Monthly Otc Report";
                        
                break;
            case 2:
                title = "Yearly Otc Report";
                break;
            default:
                title = "Daily Otc Report";
                
        }
         generateExcel(dailyOtcTable1.getModel(), title, 4);
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jPanel17ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel17ComponentShown
        // TODO add your handling code here:
        initializeDailyOTCTable();
    }//GEN-LAST:event_jPanel17ComponentShown

    private void dailySalesDayPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesDayPlusActionPerformed
        // TODO add your handling code here:
        adjustDailySalesCollectionDate(true);
        
    }//GEN-LAST:event_dailySalesDayPlusActionPerformed

    private void dailySalesDayMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesDayMinusActionPerformed
        // TODO add your handling code here:
        adjustDailySalesCollectionDate(false);
    }//GEN-LAST:event_dailySalesDayMinusActionPerformed

    private void dailySalesPayDayPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesPayDayPlusActionPerformed
        // TODO add your handling code here:
                adjustDailySalesPaymentDate(true);
    }//GEN-LAST:event_dailySalesPayDayPlusActionPerformed

    private void dailySalesPayDayMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesPayDayMinusActionPerformed
        // TODO add your handling code here:
                adjustDailySalesPaymentDate(false);
    }//GEN-LAST:event_dailySalesPayDayMinusActionPerformed

    private void dailySalesRepDayPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesRepDayPlusActionPerformed
         adjustDailySalesReportDate(true);
    }//GEN-LAST:event_dailySalesRepDayPlusActionPerformed

    private void dailySalesRepDayMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesRepDayMinusActionPerformed
        adjustDailySalesReportDate(false);
    }//GEN-LAST:event_dailySalesRepDayMinusActionPerformed

    private void dailyOtcReportDayPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyOtcReportDayPlusActionPerformed
        // TODO add your handling code here:
         adjustDailyOtcReportDate(true);
    }//GEN-LAST:event_dailyOtcReportDayPlusActionPerformed

    private void dailyOtcReportDayMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyOtcReportDayMinusActionPerformed
        // TODO add your handling code here:
        adjustDailyOtcReportDate(false);
    }//GEN-LAST:event_dailyOtcReportDayMinusActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 2,false);
        //        }

        detailsPopUp.setLocationRelativeTo(null);
        detailsPopUp.pack();
        detailsPopUp.setVisible(true);
        if(detailsPopUp.getClient() != null){
            //                   detailedSalesSupplierTable.setModel(InvoiceAction.getInvoiceDetailedSalesData(detailsPopUp.getClient().getClientId()));
            detailedSaleSupplier = detailsPopUp.getClient();
            detSalesSupplierNameLabel1.setText(detailsPopUp.getClient().getClientName());
            detailedSalesLocationSearch();
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
         
        generateExcel(detSalesSupplierTable.getModel(), "Detailed Sales Report (Supplier)", 2);
    }//GEN-LAST:event_jButton25ActionPerformed

    private void detSalesMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesMonthComboBoxActionPerformed
        // TODO add your handling code here:
        detailedSalesLocationSearch();
    }//GEN-LAST:event_detSalesMonthComboBoxActionPerformed

    private void detSalesYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesYearComboBoxActionPerformed
        // TODO add your handling code here:
        detailedSalesLocationSearch();
    }//GEN-LAST:event_detSalesYearComboBoxActionPerformed

    private void dailySalesMonthMinus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesMonthMinus1ActionPerformed
        // TODO add your handling code here:
        adjustDetailedSalesSupplierYear(false);
    }//GEN-LAST:event_dailySalesMonthMinus1ActionPerformed

    private void dailySalesDayMinus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesDayMinus1ActionPerformed
        // TODO add your handling code here:
        adjustDetailedSalesSupplierMonth(false);
    }//GEN-LAST:event_dailySalesDayMinus1ActionPerformed

    private void dailySalesDayPlus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesDayPlus1ActionPerformed
        // TODO add your handling code here:
        adjustDetailedSalesSupplierMonth(true);
    }//GEN-LAST:event_dailySalesDayPlus1ActionPerformed

    private void dailySalesMonthPlus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesMonthPlus1ActionPerformed
        // TODO add your handling code here:
        adjustDetailedSalesSupplierYear(true);
    }//GEN-LAST:event_dailySalesMonthPlus1ActionPerformed

    private void ledgerLocationComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ledgerLocationComboBox1ActionPerformed
        // TODO add your handling code here:
        detailedSalesLocationSearch();
    }//GEN-LAST:event_ledgerLocationComboBox1ActionPerformed

    private void jPanel14ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel14ComponentShown
        // TODO add your handling code here:
        ledgerLocationComboBox1.setModel(LocationAction.getLocationModel());
    }//GEN-LAST:event_jPanel14ComponentShown

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
    SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 9,false);
//        }
        
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
//                    accountReceivableLedgerTable.setModel(CollectionAction.getReceivableLedgerTableData(receivableLedgerCustomer.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                   detailedSalesCustomerTable.setModel(InvoiceAction.getInvoiceDetailedSalesData(detailsPopUp.getClient().getClientId()));
                    salesPerson = detailsPopUp.getClient();
                    detSalesCustomerNameLabel1.setText(detailsPopUp.getClient().getClientName());
                    detailedSalesReportSalesPersonSearch();
         }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void detailedSalesPersonFMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedSalesPersonFMonthComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detailedSalesPersonFMonthComboBoxActionPerformed

    private void detailedSalesPersontFDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedSalesPersontFDayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detailedSalesPersontFDayComboBoxActionPerformed

    private void detailedSalesPersonFYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedSalesPersonFYearComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detailedSalesPersonFYearComboBoxActionPerformed

    private void detailedSalesPersonTMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedSalesPersonTMonthComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detailedSalesPersonTMonthComboBoxActionPerformed

    private void detailedSalesPersonTDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedSalesPersonTDayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detailedSalesPersonTDayComboBoxActionPerformed

    private void detailedSalesPersonTYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedSalesPersonTYearComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detailedSalesPersonTYearComboBoxActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jPanel19ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel19ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel19ComponentShown

    private void dailySalesReportDailyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesReportDailyRadioButtonActionPerformed
        // TODO add your handling code here:
        dailySalesReportReportType =0;
        dailySalesMonthComboBox.setEnabled(true);
        dailySalesDayComboBox.setEnabled(true);
        dailySalesYearComboBox.setEnabled(true);
        initializeDetailedDailySalesTable();
    }//GEN-LAST:event_dailySalesReportDailyRadioButtonActionPerformed

    private void dailySalesCollectionDailyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesCollectionDailyRadioButtonActionPerformed
        // TODO add your handling code here:
        //Enables all combo Boxes
        dailySalesCollectionReportType =0;
        dailySalesCollectionMonthComboBox.setEnabled(true);
        dailySalesCollectionDayComboBox.setEnabled(true);
        dailySalesCollectionYearComboBox.setEnabled(true);
        initializeDailySalesTable();
        
        
    }//GEN-LAST:event_dailySalesCollectionDailyRadioButtonActionPerformed

    private void dailySalesPaymentDailyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesPaymentDailyRadioButtonActionPerformed
        // TODO add your handling code here:
        dailySalesPaymentReportType =0;
        dailySalesPaymentMonthComboBox.setEnabled(true);
        dailySalesPaymentDayComboBox.setEnabled(true);
        dailySalesPaymentYearComboBox.setEnabled(true);
        initializeDailySalesPayableTable();
    }//GEN-LAST:event_dailySalesPaymentDailyRadioButtonActionPerformed

    private void dailySalesPaymentMonthlyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesPaymentMonthlyRadioButtonActionPerformed
        // TODO add your handling code here:
        dailySalesPaymentReportType =1;
        dailySalesPaymentMonthComboBox.setEnabled(true);
        dailySalesPaymentDayComboBox.setEnabled(false);
        dailySalesPaymentYearComboBox.setEnabled(true);
        initializeDailySalesPayableTable();
    }//GEN-LAST:event_dailySalesPaymentMonthlyRadioButtonActionPerformed

    private void dailyOtcReportDailyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyOtcReportDailyRadioButtonActionPerformed
        // TODO add your handling code here:
        dailyOtcReportReportType = 0;
        dailyOtcMonthComboBox1.setEnabled(true);
        dailyOtcDayComboBox1.setEnabled(true);
        dailyOtcYearComboBox1.setEnabled(true);
        initializeDailyOTCTable();
    }//GEN-LAST:event_dailyOtcReportDailyRadioButtonActionPerformed

    private void dailySalesCollectionMonthlyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesCollectionMonthlyRadioButtonActionPerformed
        // TODO add your handling code here:
        dailySalesCollectionReportType =1;
        dailySalesCollectionMonthComboBox.setEnabled(true);
        dailySalesCollectionDayComboBox.setEnabled(false);
        dailySalesCollectionYearComboBox.setEnabled(true);
        initializeDailySalesTable();
    }//GEN-LAST:event_dailySalesCollectionMonthlyRadioButtonActionPerformed

    private void dailySalesCollectionYearlyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesCollectionYearlyRadioButtonActionPerformed
        // TODO add your handling code here:
        dailySalesCollectionReportType =2;
        dailySalesCollectionMonthComboBox.setEnabled(false);
        dailySalesCollectionDayComboBox.setEnabled(false);
        dailySalesCollectionYearComboBox.setEnabled(true);
        initializeDailySalesTable();
    }//GEN-LAST:event_dailySalesCollectionYearlyRadioButtonActionPerformed

    private void dailySalesPaymentYearlyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesPaymentYearlyRadioButtonActionPerformed
        // TODO add your handling code here:
        dailySalesPaymentReportType =2;
        dailySalesPaymentMonthComboBox.setEnabled(false);
        dailySalesPaymentDayComboBox.setEnabled(false);
        dailySalesPaymentYearComboBox.setEnabled(true);
        initializeDailySalesPayableTable();
    }//GEN-LAST:event_dailySalesPaymentYearlyRadioButtonActionPerformed

    private void dailySalesReportMonthlyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesReportMonthlyRadioButtonActionPerformed
        // TODO add your handling code here:
         dailySalesReportReportType =1;
        dailySalesMonthComboBox.setEnabled(true);
        dailySalesDayComboBox.setEnabled(false);
        dailySalesYearComboBox.setEnabled(true);
        initializeDetailedDailySalesTable();
    }//GEN-LAST:event_dailySalesReportMonthlyRadioButtonActionPerformed

    private void dailySalesReportYearlyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesReportYearlyRadioButtonActionPerformed
        // TODO add your handling code here:
         dailySalesReportReportType =2;
        dailySalesMonthComboBox.setEnabled(false);
        dailySalesDayComboBox.setEnabled(false);
        dailySalesYearComboBox.setEnabled(true);
        initializeDetailedDailySalesTable();
    }//GEN-LAST:event_dailySalesReportYearlyRadioButtonActionPerformed

    private void dailyOtcReportMonthlyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyOtcReportMonthlyRadioButtonActionPerformed
        // TODO add your handling code here:
        dailyOtcReportReportType = 1;
        dailyOtcMonthComboBox1.setEnabled(true);
        dailyOtcDayComboBox1.setEnabled(false);
        dailyOtcYearComboBox1.setEnabled(true);
        initializeDailyOTCTable();
    }//GEN-LAST:event_dailyOtcReportMonthlyRadioButtonActionPerformed

    private void dailyOtcReportYearlyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyOtcReportYearlyRadioButtonActionPerformed
        // TODO add your handling code here:
        dailyOtcReportReportType = 2;
        dailyOtcMonthComboBox1.setEnabled(false);
        dailyOtcDayComboBox1.setEnabled(false);
        dailyOtcYearComboBox1.setEnabled(true);
        initializeDailyOTCTable();
    }//GEN-LAST:event_dailyOtcReportYearlyRadioButtonActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
    SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 2,false);
//        }
        
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
                    postDatedSupplier = detailsPopUp.getClient();
                    postDatedNameLabel1.setText(postDatedSupplier.getClientName());
                    postDatedSummaryTable1.setModel(CollectionAction.getCollectionPostDatedTableData(postDatedSupplier.getClientId()));
         }
                setAlignRight(postDatedSummaryTable1, 2);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
 // TODO add your handling code here:
        generateExcel(postDatedSummaryTable1.getModel(), "Post-Dated Summary", 6);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jPanel22ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel22ComponentShown
    postDatedSummaryDatePanel1.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel22ComponentShown

    private void initializeLedgerDates(){
        
        int month = (new GregorianCalendar().get(GregorianCalendar.MONTH));
        int day = new GregorianCalendar().get(GregorianCalendar.DATE);
        GregorianCalendar cal = new GregorianCalendar();
        cal.add(GregorianCalendar.MONTH, -1);
        if (day > cal.getActualMaximum(GregorianCalendar.DATE)){
            day = cal.getActualMaximum(GregorianCalendar.DATE);
        }
//        day--;
//        int month = (new GregorianCalendar().get(GregorianCalendar.MONTH));
//        int day = new GregorianCalendar().get(GregorianCalendar.DATE)-1;
//        int max = new GregorianCalendar().getActualMaximum(GregorianCalendar.DATE);
//        max*=-1;
//        GregorianCalendar cal = new GregorianCalendar();
////        cal.add(GregorianCalendar.MONTH, -1);
//        cal.add(GregorianCalendar.DATE, max);
////        if (max > cal.getActualMaximum(GregorianCalendar.DATE)){
//            day = cal.get(GregorianCalendar.DATE);
////        }
        
        //Item Ledget To Date set Today
        itemLedgerToYearComboBox.setModel(DateActions.getYearModel());
        itemLedgerToYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        itemLedgerToMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        itemLedgerToDayComboBox.setModel(DateActions.fixDay(itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToYearComboBox.getSelectedItem().toString()));
        itemLedgerToDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        //Item Ledget To Date set 1 Month Ago
        itemLedgerFromYearComboBox.setModel(DateActions.getYearModel());
        itemLedgerFromYearComboBox.setSelectedItem(cal.get(GregorianCalendar.YEAR));
        itemLedgerFromMonthComboBox.setSelectedIndex(cal.get(GregorianCalendar.MONTH));
        itemLedgerFromDayComboBox.setModel(DateActions.fixDay(itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromYearComboBox.getSelectedItem().toString()));
        itemLedgerFromDayComboBox.setSelectedIndex(day-1);
        
        //receivable Ledger To Day set today
//        receivableLedgerToYearComboBox.setModel(DateActions.getYearModel());
//        receivableLedgerToYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
//        receivableLedgerToMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
//        receivableLedgerToDayComboBox.setModel(DateActions.fixDay(receivableLedgerToMonthComboBox.getSelectedIndex(), receivableLedgerToYearComboBox.getSelectedItem().toString()));
//        receivableLedgerToDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
//        
//        receivableLedgerFromYearComboBox.setModel(DateActions.getYearModel());
//        receivableLedgerFromYearComboBox.setSelectedItem(cal.get(GregorianCalendar.YEAR));
//        receivableLedgerFromMonthComboBox.setSelectedIndex(cal.get(GregorianCalendar.MONTH));
//        receivableLedgerFromDayComboBox.setModel(DateActions.fixDay(receivableLedgerFromMonthComboBox.getSelectedIndex(), receivableLedgerFromYearComboBox.getSelectedItem().toString()));
//        receivableLedgerFromDayComboBox.setSelectedIndex(day);
//        
//        //payab;le ledger day set
//        payableLedgerToYearComboBox.setModel(DateActions.getYearModel());
//        payableLedgerToYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
//        payableLedgerToMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
//        payableLedgerToDayComboBox.setModel(DateActions.fixDay(payableLedgerToMonthComboBox.getSelectedIndex(), payableLedgerToYearComboBox.getSelectedItem().toString()));
//        payableLedgerToDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
//        
//        payableLedgerFromYearComboBox.setModel(DateActions.getYearModel());
//        payableLedgerFromYearComboBox.setSelectedItem(cal.get(GregorianCalendar.YEAR));
//        payableLedgerFromMonthComboBox.setSelectedIndex(cal.get(GregorianCalendar.MONTH));
//        payableLedgerFromDayComboBox.setModel(DateActions.fixDay(payableLedgerFromMonthComboBox.getSelectedIndex(), payableLedgerFromYearComboBox.getSelectedItem().toString()));
//        payableLedgerFromDayComboBox.setSelectedIndex(day);
        
        //setDaily Sales Collection to current day
         dailySalesCollectionYearComboBox.setModel(DateActions.getYearModel());
        dailySalesCollectionYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        dailySalesCollectionMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        dailySalesCollectionDayComboBox.setModel(DateActions.fixDay(dailySalesCollectionMonthComboBox.getSelectedIndex(), dailySalesCollectionYearComboBox.getSelectedItem().toString()));
        dailySalesCollectionDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        //setDaily Otc Collection to current day
         dailyOtcYearComboBox1.setModel(DateActions.getYearModel());
        dailyOtcYearComboBox1.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        dailyOtcMonthComboBox1.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        dailyOtcDayComboBox1.setModel(DateActions.fixDay(dailyOtcMonthComboBox1.getSelectedIndex(), dailyOtcYearComboBox1.getSelectedItem().toString()));
        dailyOtcDayComboBox1.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        
        
        //set Detailed Daily Sales Collection to current day
         dailySalesYearComboBox.setModel(DateActions.getYearModel());
        dailySalesYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        dailySalesMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        dailySalesDayComboBox.setModel(DateActions.fixDay(dailySalesMonthComboBox.getSelectedIndex(), dailySalesYearComboBox.getSelectedItem().toString()));
        dailySalesDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        //set Daily Sales Payable to current day
        dailySalesPaymentYearComboBox.setModel(DateActions.getYearModel());
        dailySalesPaymentYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        dailySalesPaymentMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        dailySalesPaymentDayComboBox.setModel(DateActions.fixDay(dailySalesPaymentMonthComboBox.getSelectedIndex(), dailySalesPaymentYearComboBox.getSelectedItem().toString()));
        dailySalesPaymentDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        //detailed Sales Customer ledger day set
        detSalesCustTYearComboBox.setModel(DateActions.getYearModel());
        detSalesCustTYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        detSalesCustTMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        detSalesCustTDayComboBox.setModel(DateActions.fixDay(detSalesCustTMonthComboBox.getSelectedIndex(), detSalesCustTYearComboBox.getSelectedItem().toString()));
        detSalesCustTDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        detSalesCustFYearComboBox.setModel(DateActions.getYearModel());
        detSalesCustFYearComboBox.setSelectedItem(cal.get(GregorianCalendar.YEAR));
        detSalesCustFMonthComboBox.setSelectedIndex(cal.get(GregorianCalendar.MONTH));
        detSalesCustFDayComboBox.setModel(DateActions.fixDay(detSalesCustFMonthComboBox.getSelectedIndex(), detSalesCustFYearComboBox.getSelectedItem().toString()));
        detSalesCustFDayComboBox.setSelectedIndex(day-1);
        
        
             //detailed Sales Sales Person ledger day set
        detailedSalesPersonTYearComboBox.setModel(DateActions.getYearModel());
        detailedSalesPersonTYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        detailedSalesPersonTMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        detailedSalesPersonTDayComboBox.setModel(DateActions.fixDay(detailedSalesPersonTMonthComboBox.getSelectedIndex(), detailedSalesPersonTYearComboBox.getSelectedItem().toString()));
        detailedSalesPersonTDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        detailedSalesPersonFYearComboBox.setModel(DateActions.getYearModel());
        detailedSalesPersonFYearComboBox.setSelectedItem(cal.get(GregorianCalendar.YEAR));
        detailedSalesPersonFMonthComboBox.setSelectedIndex(cal.get(GregorianCalendar.MONTH));
        detailedSalesPersontFDayComboBox.setModel(DateActions.fixDay(detailedSalesPersonFMonthComboBox.getSelectedIndex(), detailedSalesPersonFYearComboBox.getSelectedItem().toString()));
        detailedSalesPersontFDayComboBox.setSelectedIndex(day-1);
        
        //detailed Sales Supplier ledger day set
        detSalesSuppTYearComboBox.setModel(DateActions.getYearModel());
        detSalesSuppTYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        detSalesSuppTMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        detSalesSuppTDayComboBox.setModel(DateActions.fixDay(detSalesSuppTMonthComboBox.getSelectedIndex(), detSalesSuppTYearComboBox.getSelectedItem().toString()));
        detSalesSuppTDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        detSalesSuppFYearComboBox.setModel(DateActions.getYearModel());
        detSalesSuppFYearComboBox.setSelectedItem(cal.get(GregorianCalendar.YEAR));
        detSalesSuppFMonthComboBox.setSelectedIndex(cal.get(GregorianCalendar.MONTH));
        detSalesSuppFDayComboBox.setModel(DateActions.fixDay(detSalesSuppFMonthComboBox.getSelectedIndex(), detSalesSuppFYearComboBox.getSelectedItem().toString()));
        detSalesSuppFDayComboBox.setSelectedIndex(day-1);
        
        
        //transfer day set
        transferToYearComboBox.setModel(DateActions.getYearModel());
        transferToYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        transferToMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        transferToDayComboBox.setModel(DateActions.fixDay(detSalesSuppTMonthComboBox.getSelectedIndex(), detSalesSuppTYearComboBox.getSelectedItem().toString()));
        transferToDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        transferFromYearComboBox.setModel(DateActions.getYearModel());
        transferFromYearComboBox.setSelectedItem(cal.get(GregorianCalendar.YEAR));
        transferFromMonthComboBox.setSelectedIndex(cal.get(GregorianCalendar.MONTH));
        transferFromDayComboBox.setModel(DateActions.fixDay(detSalesSuppFMonthComboBox.getSelectedIndex(), detSalesSuppFYearComboBox.getSelectedItem().toString()));
        transferFromDayComboBox.setSelectedIndex(day-1);
        
        
        transferButton.setVisible(false);
        transferNameLabel.setVisible(false);
        transferLabel.setVisible(false);
//        jTabbedPane1.remove(8);
        
        itemLedgerTable.getTableHeader().setReorderingAllowed(false);
        inventoryTable.getTableHeader().setReorderingAllowed(false);
//        accountReceivableLedgerTable.getTableHeader().setReorderingAllowed(false);
//        accountReceivableSummaryTable.getTableHeader().setReorderingAllowed(false);
//        accountPayableLedgerTable.getTableHeader().setReorderingAllowed(false);
//        accountPayableSummaryTable.getTableHeader().setReorderingAllowed(false);
        postDatedSummaryTable.getTableHeader().setReorderingAllowed(false);
        dailySalesSummaryTable.getTableHeader().setReorderingAllowed(false);
        dailySalesSummaryTable1.getTableHeader().setReorderingAllowed(false);
        detailedDailySalesTable.getTableHeader().setReorderingAllowed(false);
        detailedSalesCustomerTable.getTableHeader().setReorderingAllowed(false);
        detailedSalesSupplierTable.getTableHeader().setReorderingAllowed(false);
        transferTable.getTableHeader().setReorderingAllowed(false);
        
        dailySalesMonthMinus.setVisible(false);
        dailySalesMonthPlus.setVisible(false);
        dailySalesPayMonthMinus.setVisible(false);
        dailySalesPayMonthPlus.setVisible(false);
        dailySalesRepMonthMinus.setVisible(false);
        dailySalesRepMonthPlus.setVisible(false);
        dailyOtcReportMonthMinus.setVisible(false);
        dailyOtcReportMonthPlus.setVisible(false);
        
        //detailed sales date set to default
        
        detSalesYearComboBox.setModel(DateActions.getYearModel());
        detSalesYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        detSalesMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        
        
    }
    
    private void itemLedgerSearch(){
          if(!itemNameLabel.getText().equals("-") && !isInit){
                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(itemLedgerFromYearComboBox.getSelectedItem().toString()), itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromDayComboBox.getSelectedIndex()+1);
                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(itemLedgerToYearComboBox.getSelectedItem().toString()), itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
                      Client loc = (Client) ledgerLocationComboBox.getSelectedItem();
                    DefaultTableModel mod = new DefaultTableModel();
                    if(fromCal.compareTo(toCal)<=0){
//                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime()), loc.getClientId()));
                        mod = InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime()), loc.getClientId());
                        itemLedgerModel = InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime()), loc.getClientId());
                    } else {
                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
                    }
                    
                    
                          txtSearch.addKeyListener(new KeyListener(){
            public void keyReleased(java.awt.event.KeyEvent e){
                String text = txtSearch.getText();
                if (text.length() == 0) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)"+text));
                }
            }

            public void keyPressed(java.awt.event.KeyEvent e){
            }

            public void keyTyped(java.awt.event.KeyEvent e){
                
            }

            });
        sorter = new TableRowSorter<DefaultTableModel>(mod);
        itemLedgerTable.setModel(mod);
        itemLedgerTable.setRowSorter(sorter);
        itemLedgerTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        itemLedgerTable.setShowGrid(true);
        itemLedgerTable.setGridColor(Color.black);
                    setAlignRight(itemLedgerTable, 3);
                    setAlignRight(itemLedgerTable, 4);
                    setAlignRight(itemLedgerTable, 5);
                    setAlignRight(itemLedgerTable, 6);
         }
    }
    
    private ArrayList<Component> checkRights(Short userId){
        ArrayList<Component> tabs = new ArrayList<Component>();
         OtReportAccess ot = OtReportAccess.getOtReportAccess(userId);
        if(ot.getOtReportAccessItemLedger().equals(new Short("0")))
            tabs.add(jTabbedPane1.getComponent(0));
        if(ot.getOtReportAccessInventory().equals(new Short("0")))
            tabs.add(jTabbedPane1.getComponent(1));
        if(ot.getOtReportAccessPostDated().equals(new Short("0")))
            tabs.add(jTabbedPane1.getComponent(2));
        if(ot.getOtReportAccessDailySalesCollection().equals(new Short("0")))
            tabs.add(jTabbedPane1.getComponent(3));
        if(ot.getOtReportAccessDailySalesPayment().equals(new Short("0")))
            tabs.add(jTabbedPane1.getComponent(4));
        if(ot.getOtReportAccessDailySales().equals(new Short("0")))
            tabs.add(jTabbedPane1.getComponent(5));
        if(ot.getOtReportAccessDailySalesReCust().equals(new Short("0")))
            tabs.add(jTabbedPane1.getComponent(6));
        if(ot.getOtReportAccessDailySalesReSupp().equals(new Short("0")))
            tabs.add(jTabbedPane1.getComponent(7));
        if(ot.getOtReportAccessDetailedSales().equals(new Short("0")))
            tabs.add(jTabbedPane1.getComponent(8));
        if(ot.getOtReportAccessDetailedTransfer().equals(new Short("0")))
            tabs.add(jTabbedPane1.getComponent(9));
        if(ot.getOtReportAccessDailyOtc().equals(new Short("0")))
            tabs.add(jTabbedPane1.getComponent(10));
        if(ot.getOtReportAccessDetailedSalesperson().equals(new Short("0")))
            tabs.add(jTabbedPane1.getComponent(11));
        
        return tabs;
    }
    
    private void detailedSalesLocationSearch(){
          if(!detSalesSupplierNameLabel1.getText().equals("-") && !isInit){
                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(detSalesYearComboBox.getSelectedItem().toString()), detSalesMonthComboBox.getSelectedIndex(), 1);
                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(detSalesYearComboBox.getSelectedItem().toString()), detSalesMonthComboBox.getSelectedIndex(), new GregorianCalendar().getActualMaximum(GregorianCalendar.DAY_OF_MONTH), 23, 59);
                      Client loc = (Client) ledgerLocationComboBox1.getSelectedItem();
                    if(fromCal.compareTo(toCal)<=0){
                         detSalesSupplierTable.setModel(InvoiceAction.getInvoiceSalesReportSupplier(detailedSaleSupplier.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime()), loc.getClientId()));
//                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime()), loc.getClientId()));
                    } else {
                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
                    }
//                    setAlignRight(itemLedgerTable, 3);
//                    setAlignRight(itemLedgerTable, 4);
//                    setAlignRight(itemLedgerTable, 5);
//                    setAlignRight(itemLedgerTable, 6);
         }
    }
    
    private void adjustDailySalesCollectionDate(boolean isPlus){
        int day = dailySalesCollectionDayComboBox.getSelectedIndex()+1;
        String year = dailySalesCollectionYearComboBox.getSelectedItem().toString();
        int month = dailySalesCollectionMonthComboBox.getSelectedIndex();
        GregorianCalendar calendar = new GregorianCalendar(Integer.parseInt(year), month, day);
        int addValue = 0;
        if(isPlus){
            addValue =1;
        } else{
            addValue = -1;
        }

        switch(dailySalesCollectionReportType){
                case 1:
                    calendar.add(GregorianCalendar.MONTH, addValue);
                    break;
                case 2:
                    calendar.add(GregorianCalendar.YEAR, addValue);
                    break;
                default:
                    calendar.add(GregorianCalendar.DAY_OF_MONTH, addValue);
            }
        isInit = true;
        dailySalesCollectionYearComboBox.setSelectedItem(calendar.get(GregorianCalendar.YEAR));
        dailySalesCollectionMonthComboBox.setSelectedIndex(calendar.get(GregorianCalendar.MONTH));
        dailySalesCollectionDayComboBox.setModel(DateActions.fixDay(dailySalesCollectionMonthComboBox.getSelectedIndex(), dailySalesCollectionYearComboBox.getSelectedItem().toString()));
        isInit = false;
        dailySalesCollectionDayComboBox.setSelectedIndex(calendar.get(GregorianCalendar.DAY_OF_MONTH)-1);
        
    }
    
    private void adjustDailySalesPaymentDate(boolean isPlus){
        int day = dailySalesPaymentDayComboBox.getSelectedIndex()+1;
        String year = dailySalesPaymentYearComboBox.getSelectedItem().toString();
        int month = dailySalesPaymentMonthComboBox.getSelectedIndex();
        GregorianCalendar calendar = new GregorianCalendar(Integer.parseInt(year), month, day);
//        if(isPlus){
//            calendar.add(GregorianCalendar.DAY_OF_MONTH, 1);
//        } else{
//            calendar.add(GregorianCalendar.DAY_OF_MONTH, -1);
//        }
        int addValue = 0;
        if(isPlus){
            addValue =1;
        } else{
            addValue = -1;
        }

        switch(dailySalesPaymentReportType){
                case 1:
                    calendar.add(GregorianCalendar.MONTH, addValue);
                    break;
                case 2:
                    calendar.add(GregorianCalendar.YEAR, addValue);
                    break;
                default:
                    calendar.add(GregorianCalendar.DAY_OF_MONTH, addValue);
            }
        isInit = true;
        dailySalesPaymentYearComboBox.setSelectedItem(calendar.get(GregorianCalendar.YEAR));
        dailySalesPaymentMonthComboBox.setSelectedIndex(calendar.get(GregorianCalendar.MONTH));
        dailySalesPaymentDayComboBox.setModel(DateActions.fixDay(dailySalesPaymentMonthComboBox.getSelectedIndex(), dailySalesPaymentYearComboBox.getSelectedItem().toString()));
        isInit = false;
        dailySalesPaymentDayComboBox.setSelectedIndex(calendar.get(GregorianCalendar.DAY_OF_MONTH)-1);
        
    }
    
    private void adjustDailySalesReportDate(boolean isPlus){
        int day = dailySalesDayComboBox.getSelectedIndex()+1;
        String year = dailySalesYearComboBox.getSelectedItem().toString();
        int month = dailySalesMonthComboBox.getSelectedIndex();
        GregorianCalendar calendar = new GregorianCalendar(Integer.parseInt(year), month, day);
//        if(isPlus){
//            calendar.add(GregorianCalendar.DAY_OF_MONTH, 1);
//        } else{
//            calendar.add(GregorianCalendar.DAY_OF_MONTH, -1);
//        }
        int addValue = 0;
        if(isPlus){
            addValue =1;
        } else{
            addValue = -1;
        }

        switch(dailySalesReportReportType){
                case 1:
                    calendar.add(GregorianCalendar.MONTH, addValue);
                    break;
                case 2:
                    calendar.add(GregorianCalendar.YEAR, addValue);
                    break;
                default:
                    calendar.add(GregorianCalendar.DAY_OF_MONTH, addValue);
            }
        isInit = true;
        dailySalesYearComboBox.setSelectedItem(calendar.get(GregorianCalendar.YEAR));
        dailySalesMonthComboBox.setSelectedIndex(calendar.get(GregorianCalendar.MONTH));
        dailySalesDayComboBox.setModel(DateActions.fixDay(dailySalesMonthComboBox.getSelectedIndex(), dailySalesYearComboBox.getSelectedItem().toString()));
        isInit = false;
        dailySalesDayComboBox.setSelectedIndex(calendar.get(GregorianCalendar.DAY_OF_MONTH)-1);
        
    }
    
    
     private void adjustDailyOtcReportDate(boolean isPlus){
        int day = dailyOtcDayComboBox1.getSelectedIndex()+1;
        String year = dailyOtcYearComboBox1.getSelectedItem().toString();
        int month = dailyOtcMonthComboBox1.getSelectedIndex();
        GregorianCalendar calendar = new GregorianCalendar(Integer.parseInt(year), month, day);
//        if(isPlus){
//            calendar.add(GregorianCalendar.DAY_OF_MONTH, 1);
//        } else{
//            calendar.add(GregorianCalendar.DAY_OF_MONTH, -1);
//        }
        int addValue = 0;
        if(isPlus){
            addValue =1;
        } else{
            addValue = -1;
        }

        switch(dailyOtcReportReportType){
                case 1:
                    calendar.add(GregorianCalendar.MONTH, addValue);
                    break;
                case 2:
                    calendar.add(GregorianCalendar.YEAR, addValue);
                    break;
                default:
                    calendar.add(GregorianCalendar.DAY_OF_MONTH, addValue);
            }
        isInit = true;
        dailyOtcYearComboBox1.setSelectedItem(calendar.get(GregorianCalendar.YEAR));
        dailyOtcMonthComboBox1.setSelectedIndex(calendar.get(GregorianCalendar.MONTH));
        dailyOtcDayComboBox1.setModel(DateActions.fixDay(dailyOtcMonthComboBox1.getSelectedIndex(), dailyOtcYearComboBox1.getSelectedItem().toString()));
        isInit = false;
        dailyOtcDayComboBox1.setSelectedIndex(calendar.get(GregorianCalendar.DAY_OF_MONTH)-1);
        
    }
     
   private void detailedSalesReportCustomerSearch(){
          if(!detSalesCustomerNameLabel.getText().equals("-") && !isInit){
                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(detSalesCustFYearComboBox.getSelectedItem().toString()), detSalesCustFMonthComboBox.getSelectedIndex(), detSalesCustFDayComboBox.getSelectedIndex()+1);
                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(detSalesCustTYearComboBox.getSelectedItem().toString()), detSalesCustTMonthComboBox.getSelectedIndex(), detSalesCustTDayComboBox.getSelectedIndex()+1, 23, 59);
                    if(fromCal.compareTo(toCal)<=0){
                        detailedSalesCustomerTable.setModel(InvoiceAction.getInvoiceDetailedSalesData(detailedSalesCustomer.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
                    } else {
                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
                    }
         }
    }
   
   private void detailedSalesReportSalesPersonSearch(){
          if(!detSalesCustomerNameLabel1.getText().equals("-") && !isInit){
                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(detailedSalesPersonFYearComboBox.getSelectedItem().toString()), detailedSalesPersonFMonthComboBox.getSelectedIndex(), detailedSalesPersontFDayComboBox.getSelectedIndex()+1);
                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(detailedSalesPersonTYearComboBox.getSelectedItem().toString()), detailedSalesPersonTMonthComboBox.getSelectedIndex(), detailedSalesPersonTDayComboBox.getSelectedIndex()+1, 23, 59);
                    if(fromCal.compareTo(toCal)<=0){
                        detailedSalesCustomerTable1.setModel(InvoiceAction.getInvoiceDetailedSalesPersonData(salesPerson.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
                    } else {
                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
                    }
         }
    }
    
   private void detailedSalesReportSupplierSearch(){
          if(!detSalesSupplierNameLabel.getText().equals("-") && !isInit){
                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(detSalesSuppFYearComboBox.getSelectedItem().toString()), detSalesSuppFMonthComboBox.getSelectedIndex(), detSalesSuppFDayComboBox.getSelectedIndex()+1);
                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(detSalesSuppTYearComboBox.getSelectedItem().toString()), detSalesSuppTMonthComboBox.getSelectedIndex(), detSalesSuppTDayComboBox.getSelectedIndex()+1, 23, 59);
                    if(fromCal.compareTo(toCal)<=0){
                        detailedSalesSupplierTable.setModel(InvoiceAction.getInvoiceDetailedSalesData(detailedSalesSupplier.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
                    } else {
                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
                    }
         }
    }
     
    
       private void generateExcel(TableModel mod, String title, int reportType){
            
        try{
            JFileChooser.setDefaultLocale(Locale.ENGLISH);
            JFileChooser chooser = new JFileChooser();
              chooser.setDialogTitle("Save File");
            chooser.removeChoosableFileFilter(chooser.getFileFilter() );
            chooser.setFileFilter(new FileNameExtensionFilter("2003 Excel file *.xls", "xls")) ;

             int actionDialog = chooser.showSaveDialog(this);

              if ( actionDialog == JFileChooser.APPROVE_OPTION ){
                File file = chooser.getSelectedFile();
                        String fileName = new String();

                if(file.exists()){
//                    JOptionPane.showMessageDialog(this, "Please input another filename replace function not implemented yet", "Write Error", JOptionPane.ERROR_MESSAGE);
//                    file.delete();
//                         saveBrowse(chooser,isMonth,Type);
                      int confirmDialog = JOptionPane.showConfirmDialog(this, "Replace exisitng file?", "Save", JOptionPane.YES_NO_OPTION);
//
                    if(confirmDialog == JOptionPane.YES_OPTION){
                      file.delete();
                       }
//
//                    }else{
//                       saveBrowse(chooser,isMonth);
//                    }
                }
                fileName = file.toString();
                if( fileName.contains(".xls")){
                    fileName = fileName.substring(0,fileName.length()-4);
                }
                String dateString = new String();
                switch(reportType){
                    case 1:
                       //Inventory 
                        Client loc = (Client) inventoryLocationComboBox.getSelectedItem();
                        ExcelAction.createInventoryXL(fileName+".xls", mod, title, inventorySupplierNameLabel.getText(),loc.getClientName());
                        break;
                    case 2:
                        //Detailed Sales Report
                        GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(detSalesCustFYearComboBox.getSelectedItem().toString()), detSalesMonthComboBox.getSelectedIndex(), 1);
                        GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(detSalesCustTYearComboBox.getSelectedItem().toString()), detSalesMonthComboBox.getSelectedIndex(), new GregorianCalendar().getActualMaximum(GregorianCalendar.DAY_OF_MONTH), 23, 59);  
//                         ExcelAction.createWXL(fileName+".xls", mod, title, receivableLedgerNameLabel.getText(), Formats.dateFormatDays2.format(fromCal.getTime()), Formats.dateFormatDays2.format(toCal.getTime()));
                        ExcelAction.createDetailedSalesXL(fileName+".xls", mod, title, detailedSaleSupplier.getClientName(), Formats.dateFormatDays2.format(fromCal.getTime()),Formats.dateFormatMinutes2.format(toCal.getTime()));
                        break;
                        
                    case 3:
                        // Daily Sales Collection
                        GregorianCalendar dailySalesCal = new GregorianCalendar(Integer.parseInt(dailySalesCollectionYearComboBox.getSelectedItem().toString()), dailySalesCollectionMonthComboBox.getSelectedIndex(), dailySalesCollectionDayComboBox.getSelectedIndex()+1);
                        
                        switch(dailySalesCollectionReportType){
                            case 1:
                               dateString = Formats.dateFormatMonths2.format(dailySalesCal.getTime());
                                break;
                            case 2:
                                dateString = Formats.dateFormatYears.format(dailySalesCal.getTime());
                                break;
                            default:
                                dateString = Formats.dateFormatDays2.format(dailySalesCal.getTime());
                        }
                    
                        ExcelAction.createDailySalesWXL(fileName+".xls", mod, title, "-", dateString );
                      break;
                     case 4:
                         //Daily OTC
                             GregorianCalendar dailyOtcCal1 = new GregorianCalendar(Integer.parseInt(dailyOtcYearComboBox1.getSelectedItem().toString()), dailyOtcMonthComboBox1.getSelectedIndex(), dailyOtcDayComboBox1.getSelectedIndex()+1);
                              
                        switch(dailyOtcReportReportType){
                            case 1:
                               dateString = Formats.dateFormatMonths2.format(dailyOtcCal1.getTime());
                                break;
                            case 2:
                                dateString = Formats.dateFormatYears.format(dailyOtcCal1.getTime());
                                break;
                            default:
                                dateString = Formats.dateFormatDays2.format(dailyOtcCal1.getTime());
                        }
                            ExcelAction.createDailySalesWXL(fileName+".xls", mod, title, "-", dateString);
                         break;
                    case 5:
                        
                        //DAILY Sales payment
                            GregorianCalendar dailySalesCal1 = new GregorianCalendar(Integer.parseInt(dailySalesPaymentYearComboBox.getSelectedItem().toString()), dailySalesPaymentMonthComboBox.getSelectedIndex(), dailySalesPaymentDayComboBox.getSelectedIndex()+1);
                            switch(dailySalesPaymentReportType){
                            case 1:
                               dateString = Formats.dateFormatMonths2.format(dailySalesCal1.getTime());
                                break;
                            case 2:
                                dateString = Formats.dateFormatYears.format(dailySalesCal1.getTime());
                                break;
                            default:
                                dateString = Formats.dateFormatDays2.format(dailySalesCal1.getTime());
                        }
                            ExcelAction.createDailySalesWXL(fileName+".xls", mod, title, "-", dateString);
                      break;
                    case 6:
                        //Postdated checks
                        ExcelAction.createPostDatedChecksReportWXL(fileName+".xls", mod, title, postDatedNameLabel.getText());
                      break;
                    case 7:
                        break;
                    case 8:
                        //Detailed Sales
                        GregorianCalendar detDailySalesCal = new GregorianCalendar(Integer.parseInt(dailySalesYearComboBox.getSelectedItem().toString())
                                , dailySalesMonthComboBox.getSelectedIndex(), dailySalesDayComboBox.getSelectedIndex()+1);
                        switch(dailySalesReportReportType){
                            case 1:
                               dateString = Formats.dateFormatMonths2.format(detDailySalesCal.getTime());
                                break;
                            case 2:
                                dateString = Formats.dateFormatYears.format(detDailySalesCal.getTime());
                                break;
                            default:
                                dateString = Formats.dateFormatDays2.format(detDailySalesCal.getTime());
                        }
                        ExcelAction.createDetailedDailySalesWXL(fileName+".xls", mod, title, "-",dateString);
                      break;  
                    case 9:
                        GregorianCalendar detSalesCustFromCal = new GregorianCalendar(Integer.parseInt(detSalesCustFYearComboBox.getSelectedItem().toString()), detSalesCustFMonthComboBox.getSelectedIndex(), detSalesCustFDayComboBox.getSelectedIndex()+1);
                        GregorianCalendar detSalesCustToCal = new GregorianCalendar(Integer.parseInt(detSalesCustTYearComboBox.getSelectedItem().toString()), detSalesCustTMonthComboBox.getSelectedIndex(), detSalesCustTDayComboBox.getSelectedIndex()+1, 23, 59);  
                        ExcelAction.createDetailedWXL(fileName+".xls", mod, title, detSalesCustomerNameLabel.getText(), Formats.dateFormatDays2.format(detSalesCustFromCal.getTime()),
                                Formats.dateFormatDays2.format(detSalesCustToCal.getTime()));
                      break;  
                    case 10:
                        //Detailed Purchase Report
                        GregorianCalendar detSalesSupFromCal = new GregorianCalendar(Integer.parseInt(detSalesSuppFYearComboBox.getSelectedItem().toString()), detSalesSuppFMonthComboBox.getSelectedIndex(), detSalesSuppFDayComboBox.getSelectedIndex()+1);
                        GregorianCalendar detSalesSupToCal = new GregorianCalendar(Integer.parseInt(detSalesSuppTYearComboBox.getSelectedItem().toString()), detSalesSuppTMonthComboBox.getSelectedIndex(), detSalesSuppTDayComboBox.getSelectedIndex()+1, 23, 59);  
                        
                        ExcelAction.createDetailedWXL(fileName+".xls", mod, title, detSalesSupplierNameLabel.getText(), Formats.dateFormatDays2.format(detSalesSupFromCal.getTime()),
                                Formats.dateFormatDays2.format(detSalesSupToCal.getTime()));
                        break;
                       case 11:
                        GregorianCalendar transferFromCal = new GregorianCalendar(Integer.parseInt(transferFromYearComboBox.getSelectedItem().toString()), transferFromMonthComboBox.getSelectedIndex(), transferFromDayComboBox.getSelectedIndex()+1);
                        GregorianCalendar transferToCal = new GregorianCalendar(Integer.parseInt(transferToYearComboBox.getSelectedItem().toString()), transferToMonthComboBox.getSelectedIndex(), transferToDayComboBox.getSelectedIndex()+1, 23, 59);  
                        
                        ExcelAction.createTransferWXL(fileName+".xls", mod, title, Formats.dateFormatDays2.format(transferFromCal.getTime()),
                                Formats.dateFormatDays2.format(transferToCal.getTime()));
                        break;
                      
                     
                    default:
                        //Item ledger
                         GregorianCalendar fromCalItem = new GregorianCalendar(Integer.parseInt(itemLedgerFromYearComboBox.getSelectedItem().toString()), itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromDayComboBox.getSelectedIndex()+1);
                         GregorianCalendar toCalItem = new GregorianCalendar(Integer.parseInt(itemLedgerToYearComboBox.getSelectedItem().toString()), itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
                         Client loc2 = (Client) ledgerLocationComboBox.getSelectedItem(); 
                          ExcelAction.createItemLedgerXL(fileName+".xls", mod, title, itemNameLabel.getText(), Formats.dateFormatDays2.format(fromCalItem.getTime()), Formats.dateFormatDays2.format(toCalItem.getTime()), loc2.getClientName());
                        
                }
                //generate excel code
                
                 Desktop dt = Desktop.getDesktop();
                                dt.open(new File(fileName+".xls"));

              }

            }catch (Exception e){
                             e.printStackTrace();
                             System.out.println(e);
         }
}
       
       private void initializeDailySalesTable(){
           if(!isInit){
            int dailyYear = Integer.parseInt(dailySalesCollectionYearComboBox.getSelectedItem().toString());
            int dailyMonth = dailySalesCollectionMonthComboBox.getSelectedIndex();
            int dailyDay = dailySalesCollectionDayComboBox.getSelectedIndex()+1;
//            dailySalesSummaryTable.setModel(CollectionAction.getCollectionDailyTableData(dailyYear, dailyDay, dailyMonth));
            dailySalesSummaryTable.setModel(CollectionAction.getDailySalesXTableData(dailyYear, dailyDay, dailyMonth,true,dailySalesCollectionReportType));
           }
           setAlignRight(dailySalesSummaryTable, dailySalesSummaryTable.getColumnCount()-1);
       }
       
       private void initializeDailySalesPayableTable(){
           if(!isInit){
           int dailyYear = Integer.parseInt(dailySalesPaymentYearComboBox.getSelectedItem().toString());
        int dailyMonth = dailySalesPaymentMonthComboBox.getSelectedIndex();
        int dailyDay = dailySalesPaymentDayComboBox.getSelectedIndex()+1;
//        dailySalesSummaryTable1.setModel(CollectionAction.getPaymentDailyTableData(dailyYear, dailyDay, dailyMonth));
        dailySalesSummaryTable1.setModel(CollectionAction.getDailySalesXTableData(dailyYear, dailyDay, dailyMonth,false,dailySalesPaymentReportType));
        
           }
           setAlignRight(dailySalesSummaryTable1, dailySalesSummaryTable1.getColumnCount()-1);
       }
       
      
     
       
       private void initializeDetailedDailySalesTable(){
           if(!isInit) {
        int dailyYear = Integer.parseInt(dailySalesYearComboBox.getSelectedItem().toString());
        int dailyMonth = dailySalesMonthComboBox.getSelectedIndex();
        int dailyDay = dailySalesDayComboBox.getSelectedIndex()+1;
//        dailySalesSummaryTable.setModel(CollectionAction.getCollectionDailyTableData(dailyYear, dailyDay, dailyMonth));
        detailedDailySalesTable.setModel(InvoiceAction.getDailySalesReportData(dailyYear, dailyMonth, dailyDay, dailySalesReportReportType));
           }
           setAlignRight(detailedDailySalesTable, detailedDailySalesTable.getColumnCount()-1);
       }
       
       private void initializeDailyOTCTable(){
           if(!isInit) {
        int dailyYear = Integer.parseInt(dailyOtcYearComboBox1.getSelectedItem().toString());
        int dailyMonth = dailyOtcMonthComboBox1.getSelectedIndex();
        int dailyDay = dailyOtcDayComboBox1.getSelectedIndex()+1;
//        dailySalesSummaryTable.setModel(CollectionAction.getCollectionDailyTableData(dailyYear, dailyDay, dailyMonth));
            dailyOtcTable1.setModel(InvoiceAction.getDailyOtcReportData(dailyYear, dailyMonth, dailyDay, dailyOtcReportReportType));
           }
           setAlignRight(dailyOtcTable1, dailyOtcTable1.getColumnCount()-1);
       }
       
       
       private void initializeDetailedTransferTable(){
           if(!isInit){
        int fromYear = Integer.parseInt(transferFromYearComboBox.getSelectedItem().toString());
        int fromMonth = transferFromMonthComboBox.getSelectedIndex();
        int fromDay = transferFromDayComboBox.getSelectedIndex()+1;
        
        int toYear = Integer.parseInt(transferToYearComboBox.getSelectedItem().toString());
        int toMonth = transferToMonthComboBox.getSelectedIndex();
        int toDay = transferToDayComboBox.getSelectedIndex()+1;
        
           GregorianCalendar fromCal =  new GregorianCalendar(fromYear, fromMonth, fromDay);
           GregorianCalendar toCal =  new GregorianCalendar(toYear, toMonth, toDay,23,59);
//        dailySalesSummaryTable.setModel(CollectionAction.getCollectionDailyTableData(dailyYear, dailyDay, dailyMonth));
        transferTable.setModel(TransferAction.getTransferData(Formats.dateFormatSeconds.format(fromCal.getTime()),Formats.dateFormatSeconds.format(toCal.getTime())));
       }
           
           
      }
        private void setAlignRight(JTable table, int column){
        table.getColumnModel().getColumn(column).setCellRenderer( Formats.getTableRenderer() );
    }
        
        
   private void adjustDetailedSalesSupplierMonth(boolean isPlus){
       
        String year = detSalesYearComboBox.getSelectedItem().toString();
        int month = detSalesMonthComboBox.getSelectedIndex();
        GregorianCalendar calendar = new GregorianCalendar(Integer.parseInt(year), month, GregorianCalendar.DATE);
        if(isPlus){
            calendar.add(GregorianCalendar.MONTH, 1);
        } else{
            calendar.add(GregorianCalendar.MONTH, -1);
        }
        isInit = true;
        detSalesYearComboBox.setSelectedItem(calendar.get(GregorianCalendar.YEAR));
        detSalesMonthComboBox.setSelectedIndex(calendar.get(GregorianCalendar.MONTH));
//        detSalesDayComboBox1.setModel(DateActions.fixDay(dailySalesMonthComboBox1.getSelectedIndex(), dailySalesYearComboBox1.getSelectedItem().toString()));
       
        isInit = false;
         detailedSalesLocationSearch();
//        dailySalesDayComboBox1.setSelectedIndex(calendar.get(GregorianCalendar.DAY_OF_MONTH)-1);
        
    }
   
   private void adjustDetailedSalesSupplierYear(boolean isPlus){
       
        String year = detSalesYearComboBox.getSelectedItem().toString();
        int month = detSalesMonthComboBox.getSelectedIndex();
        GregorianCalendar calendar = new GregorianCalendar(Integer.parseInt(year), month, GregorianCalendar.DATE);
        if(isPlus){
            calendar.add(GregorianCalendar.YEAR, 1);
        } else{
            calendar.add(GregorianCalendar.YEAR, -1);
        }
        isInit = true;
        detSalesYearComboBox.setSelectedItem(calendar.get(GregorianCalendar.YEAR));
        detSalesMonthComboBox.setSelectedIndex(calendar.get(GregorianCalendar.MONTH));
//        detSalesDayComboBox1.setModel(DateActions.fixDay(dailySalesMonthComboBox1.getSelectedIndex(), dailySalesYearComboBox1.getSelectedItem().toString()));
       
        isInit = false;
         detailedSalesLocationSearch();
//        dailySalesDayComboBox1.setSelectedIndex(calendar.get(GregorianCalendar.DAY_OF_MONTH)-1);
        
    }
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox dailyOtcDayComboBox1;
    private javax.swing.JComboBox dailyOtcMonthComboBox1;
    private javax.swing.ButtonGroup dailyOtcReportButtonGroup;
    private javax.swing.JRadioButton dailyOtcReportDailyRadioButton;
    private javax.swing.JButton dailyOtcReportDayMinus;
    private javax.swing.JButton dailyOtcReportDayPlus;
    private javax.swing.JButton dailyOtcReportMonthMinus;
    private javax.swing.JButton dailyOtcReportMonthPlus;
    private javax.swing.JRadioButton dailyOtcReportMonthlyRadioButton;
    private javax.swing.JRadioButton dailyOtcReportYearlyRadioButton;
    private javax.swing.JTable dailyOtcTable1;
    private javax.swing.JComboBox dailyOtcYearComboBox1;
    private javax.swing.JRadioButton dailySalesCollectionDailyRadioButton;
    private javax.swing.JComboBox dailySalesCollectionDayComboBox;
    private javax.swing.JComboBox dailySalesCollectionMonthComboBox;
    private javax.swing.JRadioButton dailySalesCollectionMonthlyRadioButton;
    private javax.swing.JComboBox dailySalesCollectionYearComboBox;
    private javax.swing.JRadioButton dailySalesCollectionYearlyRadioButton;
    private javax.swing.ButtonGroup dailySalesCollectiontButtonGroup;
    private javax.swing.JComboBox dailySalesDayComboBox;
    private javax.swing.JButton dailySalesDayMinus;
    private javax.swing.JButton dailySalesDayMinus1;
    private javax.swing.JButton dailySalesDayPlus;
    private javax.swing.JButton dailySalesDayPlus1;
    private javax.swing.JComboBox dailySalesMonthComboBox;
    private javax.swing.JButton dailySalesMonthMinus;
    private javax.swing.JButton dailySalesMonthMinus1;
    private javax.swing.JButton dailySalesMonthPlus;
    private javax.swing.JButton dailySalesMonthPlus1;
    private javax.swing.JButton dailySalesPayDayMinus;
    private javax.swing.JButton dailySalesPayDayPlus;
    private javax.swing.JButton dailySalesPayMonthMinus;
    private javax.swing.JButton dailySalesPayMonthPlus;
    private javax.swing.ButtonGroup dailySalesPaymentButtonGroup;
    private javax.swing.JRadioButton dailySalesPaymentDailyRadioButton;
    private javax.swing.JComboBox dailySalesPaymentDayComboBox;
    private javax.swing.JComboBox dailySalesPaymentMonthComboBox;
    private javax.swing.JRadioButton dailySalesPaymentMonthlyRadioButton;
    private javax.swing.JComboBox dailySalesPaymentYearComboBox;
    private javax.swing.JRadioButton dailySalesPaymentYearlyRadioButton;
    private javax.swing.JButton dailySalesRepDayMinus;
    private javax.swing.JButton dailySalesRepDayPlus;
    private javax.swing.JButton dailySalesRepMonthMinus;
    private javax.swing.JButton dailySalesRepMonthPlus;
    private javax.swing.ButtonGroup dailySalesReportButtonGroup;
    private javax.swing.JRadioButton dailySalesReportDailyRadioButton;
    private javax.swing.JRadioButton dailySalesReportMonthlyRadioButton;
    private javax.swing.JRadioButton dailySalesReportYearlyRadioButton;
    private javax.swing.JTable dailySalesSummaryTable;
    private javax.swing.JTable dailySalesSummaryTable1;
    private javax.swing.JComboBox dailySalesYearComboBox;
    private javax.swing.JComboBox detSalesCustFDayComboBox;
    private javax.swing.JComboBox detSalesCustFMonthComboBox;
    private javax.swing.JComboBox detSalesCustFYearComboBox;
    private javax.swing.JComboBox detSalesCustTDayComboBox;
    private javax.swing.JComboBox detSalesCustTMonthComboBox;
    private javax.swing.JComboBox detSalesCustTYearComboBox;
    private javax.swing.JLabel detSalesCustomerNameLabel;
    private javax.swing.JLabel detSalesCustomerNameLabel1;
    private javax.swing.JComboBox detSalesMonthComboBox;
    private javax.swing.JComboBox detSalesSuppFDayComboBox;
    private javax.swing.JComboBox detSalesSuppFMonthComboBox;
    private javax.swing.JComboBox detSalesSuppFYearComboBox;
    private javax.swing.JComboBox detSalesSuppTDayComboBox;
    private javax.swing.JComboBox detSalesSuppTMonthComboBox;
    private javax.swing.JComboBox detSalesSuppTYearComboBox;
    private javax.swing.JLabel detSalesSupplierNameLabel;
    private javax.swing.JLabel detSalesSupplierNameLabel1;
    private javax.swing.JTable detSalesSupplierTable;
    private javax.swing.JComboBox detSalesYearComboBox;
    private javax.swing.JTable detailedDailySalesTable;
    private javax.swing.JPanel detailedSalesCustomerDatePanel;
    private javax.swing.JPanel detailedSalesCustomerDatePanel1;
    private javax.swing.JTable detailedSalesCustomerTable;
    private javax.swing.JTable detailedSalesCustomerTable1;
    private javax.swing.JComboBox detailedSalesPersonFMonthComboBox;
    private javax.swing.JComboBox detailedSalesPersonFYearComboBox;
    private javax.swing.JComboBox detailedSalesPersonTDayComboBox;
    private javax.swing.JComboBox detailedSalesPersonTMonthComboBox;
    private javax.swing.JComboBox detailedSalesPersonTYearComboBox;
    private javax.swing.JComboBox detailedSalesPersontFDayComboBox;
    private javax.swing.JPanel detailedSalesSupplierDatePanel;
    private javax.swing.JPanel detailedSalesSupplierDatePanel1;
    private javax.swing.JTable detailedSalesSupplierTable;
    private javax.swing.JPanel inventoryDatePanel;
    private javax.swing.JComboBox inventoryLocationComboBox;
    private javax.swing.JLabel inventorySupplierNameLabel;
    private javax.swing.JTable inventoryTable;
    private javax.swing.JComboBox itemLedgerFromDayComboBox;
    private javax.swing.JComboBox itemLedgerFromMonthComboBox;
    private javax.swing.JComboBox itemLedgerFromYearComboBox;
    private javax.swing.JTable itemLedgerTable;
    private javax.swing.JComboBox itemLedgerToDayComboBox;
    private javax.swing.JComboBox itemLedgerToMonthComboBox;
    private javax.swing.JComboBox itemLedgerToYearComboBox;
    private javax.swing.JLabel itemNameLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox10;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JComboBox jComboBox25;
    private javax.swing.JComboBox jComboBox26;
    private javax.swing.JComboBox jComboBox27;
    private javax.swing.JComboBox jComboBox28;
    private javax.swing.JComboBox jComboBox29;
    private javax.swing.JComboBox jComboBox30;
    private javax.swing.JComboBox jComboBox31;
    private javax.swing.JComboBox jComboBox32;
    private javax.swing.JComboBox jComboBox33;
    private javax.swing.JComboBox jComboBox34;
    private javax.swing.JComboBox jComboBox35;
    private javax.swing.JComboBox jComboBox36;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JComboBox jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox ledgerLocationComboBox;
    private javax.swing.JComboBox ledgerLocationComboBox1;
    private javax.swing.JLabel postDatedNameLabel;
    private javax.swing.JLabel postDatedNameLabel1;
    private javax.swing.JPanel postDatedSummaryDatePanel;
    private javax.swing.JPanel postDatedSummaryDatePanel1;
    private javax.swing.JTable postDatedSummaryTable;
    private javax.swing.JTable postDatedSummaryTable1;
    private javax.swing.JPanel receivableSummaryDatePanel2;
    private javax.swing.JPanel receivableSummaryDatePanel3;
    private javax.swing.JPanel receivableSummaryDatePanel4;
    private javax.swing.JPanel receivableSummaryDatePanel5;
    private javax.swing.JPanel receivableSummaryDatePanel6;
    private javax.swing.JButton transferButton;
    private javax.swing.JComboBox transferFromDayComboBox;
    private javax.swing.JComboBox transferFromMonthComboBox;
    private javax.swing.JComboBox transferFromYearComboBox;
    private javax.swing.JLabel transferLabel;
    private javax.swing.JLabel transferNameLabel;
    private javax.swing.JTable transferTable;
    private javax.swing.JComboBox transferToDayComboBox;
    private javax.swing.JComboBox transferToMonthComboBox;
    private javax.swing.JComboBox transferToYearComboBox;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}

