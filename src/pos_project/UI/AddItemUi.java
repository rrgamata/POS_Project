/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddClient.java
 *
 * Created on Jul 17, 2013, 2:38:44 PM
 */
package pos_project.UI;

import java.awt.Component;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicComboBoxRenderer;
import pos_project.Action.ItemAction;
import pos_project.classes.Client;
import pos_project.classes.ErrorMessages;
import pos_project.classes.Item;

/**
 *
 * @author Cif3r
 */
public class AddItemUi extends javax.swing.JDialog {
 private boolean editFlg = false;
    private String itemNumber;
    Client client;
    /** Creates new form AddClient */
    public AddItemUi(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public AddItemUi(java.awt.Frame parent, Boolean modal, boolean editflg) {
        initComponents();
       initialize(editflg);
    }
    
    public AddItemUi(java.awt.Frame parent, Boolean modal, boolean editflg, String clientNumber) {
        initComponents();
        
        if(editflg){
            initialize(editflg);
            Item c = Item.getItem(clientNumber);
            itemNameTextField.setText(c.getItemName());
            supplierNameLabel.setText(c.getClientName());
            itemPriceTextField.setText(c.getItemPrice().toString());
            this.itemNumber = clientNumber;
            client = Client.getClient(c.getItemClientNumber().toString());
            
        } else {
//            int supplierIndex = initialize(editflg, clientNumber);
//            supplierComboBox.setSelectedIndex(supplierIndex);
//            supplierComboBox.setEnabled(false);
//            jButton1.setEnabled(false);
                    
            
        }
                
        
    }
    
    private void initialize( boolean editflg){
        JOptionPane.setDefaultLocale(Locale.ENGLISH);
        setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        
        editFlg = editflg;
//        ArrayList<Client> supplierList = Client.getCustomerList(1);
//        DefaultComboBoxModel comb = new DefaultComboBoxModel(supplierList.toArray());
//        supplierComboBox.setModel(comb);
//        supplierComboBox.setRenderer(new ClientRenderer());
        if(editFlg){
            this.setTitle("Edit Item Details");
        } else {
            this.setTitle("Add New Item");
        }
    }
    
    private int initialize( boolean editflg, String clientNumber){
        int supplierIndex = 0;
        JOptionPane.setDefaultLocale(Locale.ENGLISH);
        setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        
        editFlg = editflg;
//        ArrayList<Client> supplierList = Client.getCustomerList(1);
//        for(int i =0; i<supplierList.size(); i++){
//            Client c = supplierList.get(i);
//            if(Integer.parseInt(clientNumber) == c.getClientId()){
//                supplierIndex = i;
//            }
//        }
//        DefaultComboBoxModel comb = new DefaultComboBoxModel(supplierList.toArray());
//        supplierComboBox.setModel(comb);
//        supplierComboBox.setRenderer(new ClientRenderer());
        if(editFlg){
            this.setTitle("Edit Item Details");
            client = Client.getClient(clientNumber);
        } else {
            this.setTitle("Add New Item");
        }
        return supplierIndex;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        itemPriceTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        AddClientOkButton = new javax.swing.JButton();
        AddClientCancelButton = new javax.swing.JButton();
        itemNameTextField = new javax.swing.JTextField();
        supplierNameLabel = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Item Details");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("Item Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 10);
        getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setText("SRP");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(itemPriceTextField, gridBagConstraints);

        AddClientOkButton.setText("OK");
        AddClientOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddClientOkButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AddClientOkButton);

        AddClientCancelButton.setText("Cancel");
        AddClientCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddClientCancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AddClientCancelButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
        getContentPane().add(jPanel1, gridBagConstraints);

        itemNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNameTextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 250;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 10);
        getContentPane().add(itemNameTextField, gridBagConstraints);

        supplierNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        getContentPane().add(supplierNameLabel, gridBagConstraints);

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        getContentPane().add(jButton2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddClientOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddClientOkButtonActionPerformed
        // TODO add your handling code here:
//        Client c = (Client) supplierComboBox.getSelectedItem();
        Client c = client; 
                
        if(!checkItem(itemNameTextField.getText(), itemPriceTextField.getText())){
            if(editFlg){
                int result = ItemAction.editItem(itemNameTextField.getText(), c.getClientId(), itemPriceTextField.getText(), itemNumber);
                if(!(result < 0) ){
                    JOptionPane.showMessageDialog(this,ErrorMessages.CONFIRM_EDITED_ITEM ,ErrorMessages.TITLE_SUCCESS,JOptionPane.INFORMATION_MESSAGE);
                }
                this.dispose();
                
            } else {
                int result = ItemAction.insertItem(itemNameTextField.getText(), c.getClientId(), itemPriceTextField.getText());
                if(!(result < 0) ){
                    success();
                }
            }
        }
}//GEN-LAST:event_AddClientOkButtonActionPerformed

    private void AddClientCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddClientCancelButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
}//GEN-LAST:event_AddClientCancelButtonActionPerformed

    private void itemNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemNameTextFieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 2,false);
        detailsPopUp.setLocationRelativeTo(null);
        detailsPopUp.pack();
        detailsPopUp.setVisible(true);
        client = detailsPopUp.getClient();
        supplierNameLabel.setText(client.getClientName());
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//
//            public void run() {
//                AddClient dialog = new AddClient(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }
    
    private boolean checkItem(String name, String price){
        boolean errorFlg = false;
        String errMsg = new String();
        if(name.isEmpty()||name == null){
            errorFlg = true;
            errMsg += "* "+ErrorMessages.ERROR_ITEM_NAME;
        }
        
        if(price.isEmpty()||price == null){
            errorFlg = true;
            errMsg += "* "+ErrorMessages.ERROR_ITEM_PRICE;
        } else {
            try{
                Double.parseDouble(price);
            } catch (Exception e) {
                errorFlg = true;
                errMsg += "* "+ErrorMessages.ERROR_ITEM_PRICE;
            }
        }
        
        if(errorFlg){
            
            JOptionPane.showMessageDialog(this,errMsg ,ErrorMessages.TITLE_ERROR,JOptionPane.ERROR_MESSAGE);
        }
        
        return errorFlg;
        
        
    }
     
     private void success(){
          int answer = JOptionPane.showConfirmDialog(this,ErrorMessages.CONFIRM_ADDED_ITEM,ErrorMessages.TITLE_SUCCESS,JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
          if(answer==0){
             itemNameTextField.requestFocus();
             itemNameTextField.setText("");
             itemPriceTextField.setText("");
          }else{
             this.dispose();
         }
     }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddClientCancelButton;
    private javax.swing.JButton AddClientOkButton;
    private javax.swing.JTextField itemNameTextField;
    private javax.swing.JTextField itemPriceTextField;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel supplierNameLabel;
    // End of variables declaration//GEN-END:variables

    class ClientRenderer extends BasicComboBoxRenderer  
    {  
        public Component getListCellRendererComponent(  
            JList list, Object value, int index,  
            boolean isSelected, boolean cellHasFocus)  
        {  
            super.getListCellRendererComponent(list, value, index,  
                isSelected, cellHasFocus);  
  
            if (value != null)  
            {  
                Client item = (Client)value;  
                setText( item.getClientName());  
            }  
  
            if (index == -1)  
            {  
                Client item = (Client)value;  
                setText( "" + item.getClientName() );  
            }  
  
            return this;  
        }  
    }  
}
