/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClientMainUi.java
 *
 * Created on Jul 17, 2013, 7:34:27 AM
 */
package pos_project.UI;

import java.awt.Color;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import pos_project.Action.InvoiceAction;
import pos_project.Action.LocationAction;
import pos_project.Action.PreorderAction;
import pos_project.Action.ReturnAction;
import pos_project.classes.Client;
import pos_project.classes.ErrorMessages;
import pos_project.classes.Invoice;

/**
 *
 * @author Cif3r
 */
public class MainUiPanel extends javax.swing.JPanel {
TableRowSorter<DefaultTableModel> sorter;
TableRowSorter<DefaultTableModel> sorter2;
TableRowSorter<DefaultTableModel> sorter3;
TableRowSorter<DefaultTableModel> sorter4;
    /** Creates new form ClientMainUi */
    public MainUiPanel() {
        initComponents();
//        initializeTable();
        ArrayList<Client> loc = LocationAction.getLocationList();
        for(Client cl: loc){
//           column.add(cl.getClientName());
//       }
            
            jTabbedPane1.addTab("OrderList for "+cl.getClientName(), new OrderNotificationUi(cl.getClientId()));
//            jTabbedPane1.addTab("OrderList for "+cl.getClientName(), new OrderNotificationUi());
        }
    }
    
//     private void initializeTable(){
//         initializeInvoiceTab();
////        mainTable.getTableHeader().setReorderingAllowed(false);
////        DefaultTableModel mod = InvoiceAction.getMainTableData();
////        
////              txtSearch.addKeyListener(new KeyListener(){
////            public void keyReleased(java.awt.event.KeyEvent e){
////                String text = txtSearch.getText();
////                if (text.length() == 0) {
////                    sorter.setRowFilter(null);
////                } else {
////                    sorter.setRowFilter(RowFilter.regexFilter("(?i)"+text));
////                }
////            }
////
////            public void keyPressed(java.awt.event.KeyEvent e){
////            }
////
////            public void keyTyped(java.awt.event.KeyEvent e){
////                
////            }
////
////            });
////        sorter = new TableRowSorter<DefaultTableModel>(mod);
//////        mainTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
////        mainTable.setModel(mod);
////        mainTable.setRowSorter(sorter);
////        mainTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
////        mainTable.setShowGrid(true);
////        mainTable.setGridColor(Color.black);
////        mainTable.getColumnModel().removeColumn(mainTable.getColumnModel().getColumn(10));
////        mainTable.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
////        if(System.getProperty("userName") == null){
////            mainTable.setEnabled(false);
////        } else {
////            mainTable.setEnabled(true);
////        }
//        
//    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        returnsTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        returnsTxtSearch = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        poTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        poTxtSearch = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        debitMemoTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        debitMemoTxtSearch = new javax.swing.JTextField();

        setMinimumSize(new java.awt.Dimension(755, 325));
        setPreferredSize(new java.awt.Dimension(755, 325));

        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentShown(evt);
            }
        });
        jPanel1.setLayout(new java.awt.GridBagLayout());

        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Log Detail", "Date"
            }
        ));
        mainTable.setAutoscrolls(false);
        mainTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mainTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(mainTable);
        if (mainTable.getColumnModel().getColumnCount() > 0) {
            mainTable.getColumnModel().getColumn(1).setPreferredWidth(200);
            mainTable.getColumnModel().getColumn(1).setMaxWidth(200);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 709;
        gridBagConstraints.ipady = 213;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 6, 0, 6);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jPanel2.setMinimumSize(new java.awt.Dimension(230, 30));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Search:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 5, 0);
        jPanel2.add(txtSearch, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 7, 0, 0);
        jPanel1.add(jPanel2, gridBagConstraints);

        jButton1.setText("Search...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 0, 11, 0);
        jPanel1.add(jButton1, gridBagConstraints);

        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setText("* Use invoice number for search");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        jTabbedPane1.addTab("Invoice List", jPanel1);

        jPanel3.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel3ComponentShown(evt);
            }
        });

        returnsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Log Detail", "Date"
            }
        ));
        returnsTable.setAutoscrolls(false);
        returnsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                returnsTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(returnsTable);
        if (returnsTable.getColumnModel().getColumnCount() > 0) {
            returnsTable.getColumnModel().getColumn(1).setPreferredWidth(200);
            returnsTable.getColumnModel().getColumn(1).setMaxWidth(200);
        }

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Search:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 5, 0);
        jPanel4.add(returnsTxtSearch, gridBagConstraints);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 751, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(471, 471, 471)))
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 297, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jTabbedPane1.addTab("Returns List", jPanel3);

        jPanel5.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel5ComponentShown(evt);
            }
        });

        poTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Log Detail", "Date"
            }
        ));
        poTable.setAutoscrolls(false);
        poTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                poTableMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(poTable);
        if (poTable.getColumnModel().getColumnCount() > 0) {
            poTable.getColumnModel().getColumn(1).setPreferredWidth(200);
            poTable.getColumnModel().getColumn(1).setMaxWidth(200);
        }

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Search:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel6.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 5, 0);
        jPanel6.add(poTxtSearch, gridBagConstraints);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 751, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(471, 471, 471)))
                    .addContainerGap()))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 297, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jTabbedPane1.addTab("PO List", jPanel5);

        jPanel7.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel7ComponentShown(evt);
            }
        });

        debitMemoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Log Detail", "Date"
            }
        ));
        debitMemoTable.setAutoscrolls(false);
        debitMemoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                debitMemoTableMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(debitMemoTable);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabel4.setText("Search:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel8.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 5, 0);
        jPanel8.add(debitMemoTxtSearch, gridBagConstraints);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 751, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(471, 471, 471)))
                    .addContainerGap()))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 297, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jTabbedPane1.addTab("Debit Memo List", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mainTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainTableMouseReleased
        // TODO add your handling code here:
         InvoiceDetailsUi detailsPopUp = new InvoiceDetailsUi(new JFrame(),true, false, mainTable.getModel().getValueAt(mainTable.convertRowIndexToModel(mainTable.getSelectedRow()), 10).toString());

            detailsPopUp.setLocationRelativeTo(null);
            detailsPopUp.setVisible(true);
    }//GEN-LAST:event_mainTableMouseReleased

    private void returnsTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnsTableMouseReleased
        // TODO add your handling code here:
        ReturnsDetailsUi detailsPopUp = new ReturnsDetailsUi(new JFrame(),true, false, returnsTable.getModel().getValueAt(returnsTable.convertRowIndexToModel(returnsTable.getSelectedRow()), returnsTable.getColumnCount()).toString());

            detailsPopUp.setLocationRelativeTo(null);
            detailsPopUp.setVisible(true);
    }//GEN-LAST:event_returnsTableMouseReleased

    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
        // TODO add your handling code here:
        System.out.println("Invoice Tab shown");
        initializeInvoiceTab();
        
    }//GEN-LAST:event_jPanel1ComponentShown

    private void jPanel3ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel3ComponentShown
        // TODO add your handling code here:
        System.out.println("Returns Tab shown");
        initializeReturnsTab();
    }//GEN-LAST:event_jPanel3ComponentShown

    private void poTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_poTableMouseReleased
            PoDetailsUi detailsPopUp = new PoDetailsUi(new JFrame(),true, false, poTable.getModel().getValueAt(poTable.convertRowIndexToModel(poTable.getSelectedRow()), poTable.getColumnCount()).toString());

            detailsPopUp.setLocationRelativeTo(null);
            detailsPopUp.setVisible(true);
    }//GEN-LAST:event_poTableMouseReleased

    private void jPanel5ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel5ComponentShown
        // TODO add your handling code here:
        System.out.println("PO Tab shown");
        initializePoTab();
    }//GEN-LAST:event_jPanel5ComponentShown

    private void debitMemoTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_debitMemoTableMouseReleased
        // TODO add your handling code here:
                 DebitMemoDetailsUi detailsPopUp = new DebitMemoDetailsUi(new JFrame(),true, false, debitMemoTable.getModel().getValueAt(debitMemoTable.convertRowIndexToModel(debitMemoTable.getSelectedRow()), debitMemoTable.getColumnCount()).toString());

            detailsPopUp.setLocationRelativeTo(null);
            detailsPopUp.setVisible(true);
    }//GEN-LAST:event_debitMemoTableMouseReleased

    private void jPanel7ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel7ComponentShown
        // TODO add your handling code here:
        System.out.println("Debitmeno Tab shown");
        initializeDebitMemoTab();
    }//GEN-LAST:event_jPanel7ComponentShown

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if(checkInputSearch()){
            
            MainTableSearchUi detailsPopUp = new MainTableSearchUi(new JFrame(), true, txtSearch.getText());
            detailsPopUp.setLocationRelativeTo(null);
            detailsPopUp.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    private void initializeInvoiceTab(){
        mainTable.getTableHeader().setReorderingAllowed(false);
        DefaultTableModel mod = InvoiceAction.getMainTableData();
        
              txtSearch.addKeyListener(new KeyListener(){
            public void keyReleased(java.awt.event.KeyEvent e){
                String text = txtSearch.getText();
                if (text.length() == 0) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)"+text));
                }
            }

            public void keyPressed(java.awt.event.KeyEvent e){
            }

            public void keyTyped(java.awt.event.KeyEvent e){
                
            }

            });
        sorter = new TableRowSorter<DefaultTableModel>(mod);
//        mainTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        int rows = mod.getRowCount();
        System.out.println("Invoice Row count = "+rows);
//        DefaultTableModel limitModel = new DefaultTableModel();
//        if(rows > 1000){
//            for(int i =1; i<10; i++){
//            limitModel.addRow((Vector) mod.getDataVector().elementAt(i));
//            }
//            mainTable.setModel(limitModel);
//        }
//        else{
//            mainTable.setModel(mod);
//        }
        mainTable.setModel(mod);
        mainTable.setRowSorter(sorter);
        mainTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        mainTable.setShowGrid(true);
        mainTable.setGridColor(Color.black);
        mainTable.getColumnModel().removeColumn(mainTable.getColumnModel().getColumn(mainTable.getColumnModel().getColumnCount()-1));
        mainTable.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
    }
    
      private void initializeReturnsTab(){
        returnsTable.getTableHeader().setReorderingAllowed(false);
        DefaultTableModel mod = ReturnAction.getMainTableData();
        
              returnsTxtSearch.addKeyListener(new KeyListener(){
            public void keyReleased(java.awt.event.KeyEvent e){
                String text = returnsTxtSearch.getText();
                if (text.length() == 0) {
                    sorter2.setRowFilter(null);
                } else {
                    sorter2.setRowFilter(RowFilter.regexFilter("(?i)"+text));
                }
            }

            public void keyPressed(java.awt.event.KeyEvent e){
            }

            public void keyTyped(java.awt.event.KeyEvent e){
                
            }

            });
        sorter2 = new TableRowSorter<DefaultTableModel>(mod);
         int rows = mod.getRowCount();
        System.out.println("Return Row count = "+rows);
//        mainTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        returnsTable.setModel(mod);
        returnsTable.setRowSorter(sorter2);
        returnsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        returnsTable.setShowGrid(true);
        returnsTable.setGridColor(Color.black);
        returnsTable.getColumnModel().removeColumn(returnsTable.getColumnModel().getColumn(returnsTable.getColumnCount()-1));
        returnsTable.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
    }
      
      private void initializePoTab(){
        poTable.getTableHeader().setReorderingAllowed(false);
        DefaultTableModel mod = PreorderAction.getMainTableData();
        
              poTxtSearch.addKeyListener(new KeyListener(){
            public void keyReleased(java.awt.event.KeyEvent e){
                String text = poTxtSearch.getText();
                if (text.length() == 0) {
                    sorter3.setRowFilter(null);
                } else {
                    sorter3.setRowFilter(RowFilter.regexFilter("(?i)"+text));
                }
            }

            public void keyPressed(java.awt.event.KeyEvent e){
            }

            public void keyTyped(java.awt.event.KeyEvent e){
                
            }

            });
        sorter3 = new TableRowSorter<DefaultTableModel>(mod);
         int rows = mod.getRowCount();
        System.out.println("Po Row count = "+rows);
//        mainTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        poTable.setModel(mod);
        poTable.setRowSorter(sorter3);
        poTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        poTable.setShowGrid(true);
        poTable.setGridColor(Color.black);
        poTable.getColumnModel().removeColumn(poTable.getColumnModel().getColumn(poTable.getColumnCount()-1));
        poTable.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
    }
      
   private void initializeDebitMemoTab(){
        mainTable.getTableHeader().setReorderingAllowed(false);
        DefaultTableModel mod = InvoiceAction.getDebitMemoTableData();
        
              debitMemoTxtSearch.addKeyListener(new KeyListener(){
            public void keyReleased(java.awt.event.KeyEvent e){
                String text = debitMemoTxtSearch.getText();
                if (text.length() == 0) {
                    sorter4.setRowFilter(null);
                } else {
                    sorter4.setRowFilter(RowFilter.regexFilter("(?i)"+text));
                }
            }

            public void keyPressed(java.awt.event.KeyEvent e){
            }

            public void keyTyped(java.awt.event.KeyEvent e){
                
            }

            });
        sorter4 = new TableRowSorter<DefaultTableModel>(mod);
         int rows = mod.getRowCount();
        System.out.println("DebitMemo Row count = "+rows);
//        mainTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        debitMemoTable.setModel(mod);
        debitMemoTable.setRowSorter(sorter4);
        debitMemoTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        debitMemoTable.setShowGrid(true);
        debitMemoTable.setGridColor(Color.black);
        debitMemoTable.getColumnModel().removeColumn(debitMemoTable.getColumnModel().getColumn(10));
        debitMemoTable.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
    }
   
   
   private boolean checkInputSearch(){
       boolean isValid = false;
       if(txtSearch.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, ErrorMessages.ERROR_INVOICE_SEARCH_NOT_FOUND, ErrorMessages.TITLE_ERROR, JOptionPane.WARNING_MESSAGE);
            
         }else if(Invoice.getInvoiceCountWithNumber(txtSearch.getText()) <= 0){
            JOptionPane.showMessageDialog(this, ErrorMessages.ERROR_INVOICE_SEARCH, ErrorMessages.TITLE_ERROR, JOptionPane.WARNING_MESSAGE);
         }else{
             isValid = true;
         }
       return isValid;
   }
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable debitMemoTable;
    private javax.swing.JTextField debitMemoTxtSearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable mainTable;
    private javax.swing.JTable poTable;
    private javax.swing.JTextField poTxtSearch;
    private javax.swing.JTable returnsTable;
    private javax.swing.JTextField returnsTxtSearch;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
