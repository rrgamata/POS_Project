/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClientMainUi.java
 *
 * Created on Jul 17, 2013, 7:34:27 AM
 */
package pos_project.UI;

import java.awt.Desktop;
import java.io.File;
import java.util.GregorianCalendar;
import java.util.Locale;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableModel;
import pos_project.Action.CollectionAction;
import pos_project.Action.DateActions;
import pos_project.Action.ExcelAction;
import pos_project.Action.InvoiceAction;
import pos_project.Action.ItemAction;
import pos_project.Action.LocationAction;
import pos_project.Action.TransferAction;
import pos_project.classes.Client;
import pos_project.classes.ErrorMessages;
import pos_project.classes.Formats;
import pos_project.classes.Item;
import pos_project.classes.Location;

/**
 *
 * @author Cif3r
 */
public class ReportMainUi extends javax.swing.JPanel {

    private Client inventorySupplier;
    private Client receivableSummaryCustomer;
    private Client receivableLedgerCustomer;
    private Client receivableAgingCustomer;
    private Client payableSummaryCustomer;
    private Client payableLedgerCustomer;
    private Client detailedSalesCustomer;
    private Client detailedSalesSupplier;
    private Client postDatedCustomr;
    private Item item;
    private boolean isInit = true;
    /** Creates new form ClientMainUi */
    public ReportMainUi() {
        initComponents();
        initializeLedgerDates();
        isInit = false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel13 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        itemNameLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemLedgerTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        itemLedgerFromMonthComboBox = new javax.swing.JComboBox();
        itemLedgerFromDayComboBox = new javax.swing.JComboBox();
        itemLedgerFromYearComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        itemLedgerToMonthComboBox = new javax.swing.JComboBox();
        itemLedgerToDayComboBox = new javax.swing.JComboBox();
        itemLedgerToYearComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        ledgerLocationComboBox = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        inventorySupplierNameLabel = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        inventoryDatePanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox();
        jComboBox8 = new javax.swing.JComboBox();
        jComboBox9 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jComboBox10 = new javax.swing.JComboBox();
        jComboBox11 = new javax.swing.JComboBox();
        jComboBox12 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        inventoryTable = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        inventoryLocationComboBox = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        receivableLedgerNameLabel = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        inventoryDatePanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        receivableLedgerFromMonthComboBox = new javax.swing.JComboBox();
        receivableLedgerFromDayComboBox = new javax.swing.JComboBox();
        receivableLedgerFromYearComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        receivableLedgerToMonthComboBox = new javax.swing.JComboBox();
        receivableLedgerToDayComboBox = new javax.swing.JComboBox();
        receivableLedgerToYearComboBox = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        accountReceivableLedgerTable = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        receivableSummaryNameLabel = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        receivableSummaryDatePanel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox19 = new javax.swing.JComboBox();
        jComboBox20 = new javax.swing.JComboBox();
        jComboBox21 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jComboBox22 = new javax.swing.JComboBox();
        jComboBox23 = new javax.swing.JComboBox();
        jComboBox24 = new javax.swing.JComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        accountReceivableSummaryTable = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        payableLedgerNameLabel = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        payableLedgerDatePanel = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        payableLedgerFromMonthComboBox = new javax.swing.JComboBox();
        payableLedgerFromDayComboBox = new javax.swing.JComboBox();
        payableLedgerFromYearComboBox = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        payableLedgerToMonthComboBox = new javax.swing.JComboBox();
        payableLedgerToDayComboBox = new javax.swing.JComboBox();
        payableLedgerToYearComboBox = new javax.swing.JComboBox();
        jScrollPane7 = new javax.swing.JScrollPane();
        accountPayableLedgerTable = new javax.swing.JTable();
        jButton14 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        payableSummaryNameLabel = new javax.swing.JLabel();
        jButton15 = new javax.swing.JButton();
        payableSummaryDatePanel = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        payableSummaryFromMonthComboBox = new javax.swing.JComboBox();
        payableSummaryFromDayComboBox = new javax.swing.JComboBox();
        payableSummaryFromYearComboBox = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        payableSummaryToMonthComboBox = new javax.swing.JComboBox();
        payableSummaryToDayComboBox = new javax.swing.JComboBox();
        payableSummaryToYearComboBox = new javax.swing.JComboBox();
        jScrollPane8 = new javax.swing.JScrollPane();
        accountPayableSummaryTable = new javax.swing.JTable();
        jButton16 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        postDatedNameLabel = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        postDatedSummaryDatePanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jComboBox25 = new javax.swing.JComboBox();
        jComboBox26 = new javax.swing.JComboBox();
        jComboBox27 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jComboBox28 = new javax.swing.JComboBox();
        jComboBox29 = new javax.swing.JComboBox();
        jComboBox30 = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        postDatedSummaryTable = new javax.swing.JTable();
        jButton10 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        receivableSummaryDatePanel2 = new javax.swing.JPanel();
        dailySalesMonthComboBox = new javax.swing.JComboBox();
        dailySalesDayComboBox = new javax.swing.JComboBox();
        dailySalesYearComboBox = new javax.swing.JComboBox();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        dailySalesSummaryTable = new javax.swing.JTable();
        jButton12 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        receivableSummaryDatePanel4 = new javax.swing.JPanel();
        dailySalesMonthComboBox1 = new javax.swing.JComboBox();
        dailySalesDayComboBox1 = new javax.swing.JComboBox();
        dailySalesYearComboBox1 = new javax.swing.JComboBox();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        dailySalesSummaryTable1 = new javax.swing.JTable();
        jButton33 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        receivableSummaryDatePanel3 = new javax.swing.JPanel();
        detailedDailySalesMonthComboBox = new javax.swing.JComboBox();
        detailedDailySalesDayComboBox = new javax.swing.JComboBox();
        detailedDailySalesYearComboBox = new javax.swing.JComboBox();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        detailedDailySalesTable = new javax.swing.JTable();
        jButton28 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        detSalesCustomerNameLabel = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        detailedSalesCustomerDatePanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        detSalesCustFMonthComboBox = new javax.swing.JComboBox();
        detSalesCustFDayComboBox = new javax.swing.JComboBox();
        detSalesCustFYearComboBox = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        detSalesCustTMonthComboBox = new javax.swing.JComboBox();
        detSalesCustTDayComboBox = new javax.swing.JComboBox();
        detSalesCustTYearComboBox = new javax.swing.JComboBox();
        jScrollPane9 = new javax.swing.JScrollPane();
        detailedSalesCustomerTable = new javax.swing.JTable();
        jButton21 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        detSalesSupplierNameLabel = new javax.swing.JLabel();
        jButton22 = new javax.swing.JButton();
        detailedSalesSupplierDatePanel = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        detSalesSuppFMonthComboBox = new javax.swing.JComboBox();
        detSalesSuppFDayComboBox = new javax.swing.JComboBox();
        detSalesSuppFYearComboBox = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        detSalesSuppTMonthComboBox = new javax.swing.JComboBox();
        detSalesSuppTDayComboBox = new javax.swing.JComboBox();
        detSalesSuppTYearComboBox = new javax.swing.JComboBox();
        jScrollPane10 = new javax.swing.JScrollPane();
        detailedSalesSupplierTable = new javax.swing.JTable();
        jButton23 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        transferLabel = new javax.swing.JLabel();
        transferNameLabel = new javax.swing.JLabel();
        transferButton = new javax.swing.JButton();
        detailedSalesSupplierDatePanel1 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        transferFromMonthComboBox = new javax.swing.JComboBox();
        transferFromDayComboBox = new javax.swing.JComboBox();
        transferFromYearComboBox = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        transferToMonthComboBox = new javax.swing.JComboBox();
        transferToDayComboBox = new javax.swing.JComboBox();
        transferToYearComboBox = new javax.swing.JComboBox();
        jScrollPane13 = new javax.swing.JScrollPane();
        transferTable = new javax.swing.JTable();
        jButton35 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        receivableAgingNameLabel = new javax.swing.JLabel();
        jButton34 = new javax.swing.JButton();
        receivableSummaryDatePanel1 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jComboBox31 = new javax.swing.JComboBox();
        jComboBox32 = new javax.swing.JComboBox();
        jComboBox33 = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        jComboBox34 = new javax.swing.JComboBox();
        jComboBox35 = new javax.swing.JComboBox();
        jComboBox36 = new javax.swing.JComboBox();
        jScrollPane14 = new javax.swing.JScrollPane();
        accountReceivableAgingTable = new javax.swing.JTable();
        jButton36 = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        customerNamejLabel35 = new javax.swing.JLabel();
        receivableNameLabel1 = new javax.swing.JLabel();
        receivablejButton37 = new javax.swing.JButton();
        receivableSummaryDatePanel5 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jComboBox37 = new javax.swing.JComboBox();
        jComboBox38 = new javax.swing.JComboBox();
        jComboBox39 = new javax.swing.JComboBox();
        jLabel37 = new javax.swing.JLabel();
        jComboBox40 = new javax.swing.JComboBox();
        jComboBox41 = new javax.swing.JComboBox();
        jComboBox42 = new javax.swing.JComboBox();
        jScrollPane15 = new javax.swing.JScrollPane();
        accntReceivableTable = new javax.swing.JTable();
        jButton38 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setMinimumSize(new java.awt.Dimension(755, 325));

        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentShown(evt);
            }
        });
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Item Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel1, gridBagConstraints);

        itemNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel1.add(itemNameLabel, gridBagConstraints);

        jButton1.setText("Search...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel1.add(jButton1, gridBagConstraints);

        itemLedgerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Invoice No.", "Client Name", "IN/OUT", "Price", "Quantity as of"
            }
        ));
        jScrollPane1.setViewportView(itemLedgerTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jButton2.setText("Generate Report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jButton2, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        jPanel5.add(jLabel3, gridBagConstraints);

        itemLedgerFromMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        itemLedgerFromMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLedgerFromMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel5.add(itemLedgerFromMonthComboBox, gridBagConstraints);

        itemLedgerFromDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        itemLedgerFromDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLedgerFromDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(itemLedgerFromDayComboBox, gridBagConstraints);

        itemLedgerFromYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        itemLedgerFromYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLedgerFromYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(itemLedgerFromYearComboBox, gridBagConstraints);

        jLabel4.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        jPanel5.add(jLabel4, gridBagConstraints);

        itemLedgerToMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        itemLedgerToMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLedgerToMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(itemLedgerToMonthComboBox, gridBagConstraints);

        itemLedgerToDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        itemLedgerToDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLedgerToDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(itemLedgerToDayComboBox, gridBagConstraints);

        itemLedgerToYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        itemLedgerToYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLedgerToYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(itemLedgerToYearComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jPanel5, gridBagConstraints);

        jLabel2.setText("Location");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel2, gridBagConstraints);

        ledgerLocationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ledgerLocationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ledgerLocationComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(ledgerLocationComboBox, gridBagConstraints);

        jTabbedPane1.addTab("Item Ledger", jPanel1);

        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(jLabel5, gridBagConstraints);

        inventorySupplierNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel2.add(inventorySupplierNameLabel, gridBagConstraints);

        jButton3.setText("Search...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel2.add(jButton3, gridBagConstraints);

        inventoryDatePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        inventoryDatePanel.setLayout(new java.awt.GridBagLayout());

        jLabel7.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        inventoryDatePanel.add(jLabel7, gridBagConstraints);

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        inventoryDatePanel.add(jComboBox7, gridBagConstraints);

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel.add(jComboBox8, gridBagConstraints);

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel.add(jComboBox9, gridBagConstraints);

        jLabel8.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        inventoryDatePanel.add(jLabel8, gridBagConstraints);

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel.add(jComboBox10, gridBagConstraints);

        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel.add(jComboBox11, gridBagConstraints);

        jComboBox12.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel.add(jComboBox12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(inventoryDatePanel, gridBagConstraints);

        inventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane2.setViewportView(inventoryTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel2.add(jScrollPane2, gridBagConstraints);

        jButton4.setText("Generate Report");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel2.add(jButton4, gridBagConstraints);

        jLabel29.setText("Location");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(jLabel29, gridBagConstraints);

        inventoryLocationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        inventoryLocationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryLocationComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(inventoryLocationComboBox, gridBagConstraints);

        jTabbedPane1.addTab("Inventory", jPanel2);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("Customer Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel3.add(jLabel6, gridBagConstraints);

        receivableLedgerNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel3.add(receivableLedgerNameLabel, gridBagConstraints);

        jButton5.setText("Search...");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel3.add(jButton5, gridBagConstraints);

        inventoryDatePanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        inventoryDatePanel1.setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        inventoryDatePanel1.add(jLabel9, gridBagConstraints);

        receivableLedgerFromMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        receivableLedgerFromMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivableLedgerFromMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        inventoryDatePanel1.add(receivableLedgerFromMonthComboBox, gridBagConstraints);

        receivableLedgerFromDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        receivableLedgerFromDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivableLedgerFromDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel1.add(receivableLedgerFromDayComboBox, gridBagConstraints);

        receivableLedgerFromYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        receivableLedgerFromYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivableLedgerFromYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel1.add(receivableLedgerFromYearComboBox, gridBagConstraints);

        jLabel10.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        inventoryDatePanel1.add(jLabel10, gridBagConstraints);

        receivableLedgerToMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        receivableLedgerToMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivableLedgerToMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel1.add(receivableLedgerToMonthComboBox, gridBagConstraints);

        receivableLedgerToDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        receivableLedgerToDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivableLedgerToDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel1.add(receivableLedgerToDayComboBox, gridBagConstraints);

        receivableLedgerToYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        receivableLedgerToYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivableLedgerToYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        inventoryDatePanel1.add(receivableLedgerToYearComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel3.add(inventoryDatePanel1, gridBagConstraints);

        accountReceivableLedgerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane3.setViewportView(accountReceivableLedgerTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel3.add(jScrollPane3, gridBagConstraints);

        jButton6.setText("Generate Report");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel3.add(jButton6, gridBagConstraints);

        jTabbedPane1.addTab("Accounts Receivable Ledger", jPanel3);

        jPanel4.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel4ComponentShown(evt);
            }
        });
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel11.setText("Customer Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel11, gridBagConstraints);

        receivableSummaryNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel4.add(receivableSummaryNameLabel, gridBagConstraints);

        jButton7.setText("Search...");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel4.add(jButton7, gridBagConstraints);

        receivableSummaryDatePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        receivableSummaryDatePanel.setLayout(new java.awt.GridBagLayout());

        jLabel12.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        receivableSummaryDatePanel.add(jLabel12, gridBagConstraints);

        jComboBox19.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel.add(jComboBox19, gridBagConstraints);

        jComboBox20.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel.add(jComboBox20, gridBagConstraints);

        jComboBox21.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel.add(jComboBox21, gridBagConstraints);

        jLabel13.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        receivableSummaryDatePanel.add(jLabel13, gridBagConstraints);

        jComboBox22.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel.add(jComboBox22, gridBagConstraints);

        jComboBox23.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel.add(jComboBox23, gridBagConstraints);

        jComboBox24.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel.add(jComboBox24, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(receivableSummaryDatePanel, gridBagConstraints);

        accountReceivableSummaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane4.setViewportView(accountReceivableSummaryTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel4.add(jScrollPane4, gridBagConstraints);

        jButton8.setText("Generate Report");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel4.add(jButton8, gridBagConstraints);

        jTabbedPane1.addTab("Accounts Receivable Summary", jPanel4);

        jPanel8.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel8ComponentShown(evt);
            }
        });
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabel20.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel8.add(jLabel20, gridBagConstraints);

        payableLedgerNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel8.add(payableLedgerNameLabel, gridBagConstraints);

        jButton13.setText("Search...");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel8.add(jButton13, gridBagConstraints);

        payableLedgerDatePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        payableLedgerDatePanel.setLayout(new java.awt.GridBagLayout());

        jLabel21.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        payableLedgerDatePanel.add(jLabel21, gridBagConstraints);

        payableLedgerFromMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        payableLedgerFromMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payableLedgerFromMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        payableLedgerDatePanel.add(payableLedgerFromMonthComboBox, gridBagConstraints);

        payableLedgerFromDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        payableLedgerFromDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payableLedgerFromDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        payableLedgerDatePanel.add(payableLedgerFromDayComboBox, gridBagConstraints);

        payableLedgerFromYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        payableLedgerFromYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payableLedgerFromYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        payableLedgerDatePanel.add(payableLedgerFromYearComboBox, gridBagConstraints);

        jLabel22.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        payableLedgerDatePanel.add(jLabel22, gridBagConstraints);

        payableLedgerToMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        payableLedgerToMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payableLedgerToMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        payableLedgerDatePanel.add(payableLedgerToMonthComboBox, gridBagConstraints);

        payableLedgerToDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        payableLedgerToDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payableLedgerToDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        payableLedgerDatePanel.add(payableLedgerToDayComboBox, gridBagConstraints);

        payableLedgerToYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        payableLedgerToYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payableLedgerToYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        payableLedgerDatePanel.add(payableLedgerToYearComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel8.add(payableLedgerDatePanel, gridBagConstraints);

        accountPayableLedgerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane7.setViewportView(accountPayableLedgerTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel8.add(jScrollPane7, gridBagConstraints);

        jButton14.setText("Generate Report");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel8.add(jButton14, gridBagConstraints);

        jTabbedPane1.addTab("Accounts Payable", jPanel8);

        jPanel9.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel9ComponentShown(evt);
            }
        });
        jPanel9.setLayout(new java.awt.GridBagLayout());

        jLabel23.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel9.add(jLabel23, gridBagConstraints);

        payableSummaryNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel9.add(payableSummaryNameLabel, gridBagConstraints);

        jButton15.setText("Search...");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel9.add(jButton15, gridBagConstraints);

        payableSummaryDatePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        payableSummaryDatePanel.setLayout(new java.awt.GridBagLayout());

        jLabel24.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        payableSummaryDatePanel.add(jLabel24, gridBagConstraints);

        payableSummaryFromMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        payableSummaryDatePanel.add(payableSummaryFromMonthComboBox, gridBagConstraints);

        payableSummaryFromDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        payableSummaryDatePanel.add(payableSummaryFromDayComboBox, gridBagConstraints);

        payableSummaryFromYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        payableSummaryDatePanel.add(payableSummaryFromYearComboBox, gridBagConstraints);

        jLabel25.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        payableSummaryDatePanel.add(jLabel25, gridBagConstraints);

        payableSummaryToMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        payableSummaryDatePanel.add(payableSummaryToMonthComboBox, gridBagConstraints);

        payableSummaryToDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        payableSummaryToDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payableSummaryToDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        payableSummaryDatePanel.add(payableSummaryToDayComboBox, gridBagConstraints);

        payableSummaryToYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        payableSummaryDatePanel.add(payableSummaryToYearComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel9.add(payableSummaryDatePanel, gridBagConstraints);

        accountPayableSummaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane8.setViewportView(accountPayableSummaryTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel9.add(jScrollPane8, gridBagConstraints);

        jButton16.setText("Generate Report");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel9.add(jButton16, gridBagConstraints);

        jTabbedPane1.addTab("Accounts Payable Summary", jPanel9);

        jPanel6.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel6ComponentShown(evt);
            }
        });
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel14.setText("Customer Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel6.add(jLabel14, gridBagConstraints);

        postDatedNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel6.add(postDatedNameLabel, gridBagConstraints);

        jButton9.setText("Search...");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel6.add(jButton9, gridBagConstraints);

        postDatedSummaryDatePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        postDatedSummaryDatePanel.setLayout(new java.awt.GridBagLayout());

        jLabel15.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        postDatedSummaryDatePanel.add(jLabel15, gridBagConstraints);

        jComboBox25.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        postDatedSummaryDatePanel.add(jComboBox25, gridBagConstraints);

        jComboBox26.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel.add(jComboBox26, gridBagConstraints);

        jComboBox27.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel.add(jComboBox27, gridBagConstraints);

        jLabel16.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        postDatedSummaryDatePanel.add(jLabel16, gridBagConstraints);

        jComboBox28.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel.add(jComboBox28, gridBagConstraints);

        jComboBox29.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel.add(jComboBox29, gridBagConstraints);

        jComboBox30.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        postDatedSummaryDatePanel.add(jComboBox30, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel6.add(postDatedSummaryDatePanel, gridBagConstraints);

        postDatedSummaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane5.setViewportView(postDatedSummaryTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel6.add(jScrollPane5, gridBagConstraints);

        jButton10.setText("Generate Report");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel6.add(jButton10, gridBagConstraints);

        jTabbedPane1.addTab("Post Dated Checks Summary", jPanel6);

        jPanel7.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel7ComponentShown(evt);
            }
        });
        jPanel7.setLayout(new java.awt.GridBagLayout());

        receivableSummaryDatePanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        receivableSummaryDatePanel2.setLayout(new java.awt.GridBagLayout());

        dailySalesMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        dailySalesMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel2.add(dailySalesMonthComboBox, gridBagConstraints);

        dailySalesDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dailySalesDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel2.add(dailySalesDayComboBox, gridBagConstraints);

        dailySalesYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        dailySalesYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel2.add(dailySalesYearComboBox, gridBagConstraints);

        jButton17.setText("<<");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel2.add(jButton17, gridBagConstraints);

        jButton18.setText("<");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel2.add(jButton18, gridBagConstraints);

        jButton19.setText(">");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel2.add(jButton19, gridBagConstraints);

        jButton20.setText(">>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel2.add(jButton20, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel7.add(receivableSummaryDatePanel2, gridBagConstraints);

        dailySalesSummaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane6.setViewportView(dailySalesSummaryTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel7.add(jScrollPane6, gridBagConstraints);

        jButton12.setText("Generate Report");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel7.add(jButton12, gridBagConstraints);

        jTabbedPane1.addTab("Daily Sales Collection", jPanel7);

        jPanel15.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel15ComponentShown(evt);
            }
        });
        jPanel15.setLayout(new java.awt.GridBagLayout());

        receivableSummaryDatePanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        receivableSummaryDatePanel4.setLayout(new java.awt.GridBagLayout());

        dailySalesMonthComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        dailySalesMonthComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesMonthComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel4.add(dailySalesMonthComboBox1, gridBagConstraints);

        dailySalesDayComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dailySalesDayComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesDayComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel4.add(dailySalesDayComboBox1, gridBagConstraints);

        dailySalesYearComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        dailySalesYearComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailySalesYearComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel4.add(dailySalesYearComboBox1, gridBagConstraints);

        jButton29.setText("<<");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel4.add(jButton29, gridBagConstraints);

        jButton30.setText("<");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel4.add(jButton30, gridBagConstraints);

        jButton31.setText(">");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel4.add(jButton31, gridBagConstraints);

        jButton32.setText(">>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel4.add(jButton32, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel15.add(receivableSummaryDatePanel4, gridBagConstraints);

        dailySalesSummaryTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane12.setViewportView(dailySalesSummaryTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel15.add(jScrollPane12, gridBagConstraints);

        jButton33.setText("Generate Report");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel15.add(jButton33, gridBagConstraints);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 877, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel14Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 877, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel14Layout.createSequentialGroup()
                    .addGap(0, 3, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 3, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Daily Sales Payment", jPanel14);

        jPanel12.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel12ComponentShown(evt);
            }
        });
        jPanel12.setLayout(new java.awt.GridBagLayout());

        receivableSummaryDatePanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        receivableSummaryDatePanel3.setLayout(new java.awt.GridBagLayout());

        detailedDailySalesMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        detailedDailySalesMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedDailySalesMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel3.add(detailedDailySalesMonthComboBox, gridBagConstraints);

        detailedDailySalesDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        detailedDailySalesDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedDailySalesDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel3.add(detailedDailySalesDayComboBox, gridBagConstraints);

        detailedDailySalesYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        detailedDailySalesYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedDailySalesYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel3.add(detailedDailySalesYearComboBox, gridBagConstraints);

        jButton24.setText("<<");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel3.add(jButton24, gridBagConstraints);

        jButton25.setText("<");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel3.add(jButton25, gridBagConstraints);

        jButton26.setText(">");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel3.add(jButton26, gridBagConstraints);

        jButton27.setText(">>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel3.add(jButton27, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel12.add(receivableSummaryDatePanel3, gridBagConstraints);

        detailedDailySalesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane11.setViewportView(detailedDailySalesTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel12.add(jScrollPane11, gridBagConstraints);

        jButton28.setText("Generate Report");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel12.add(jButton28, gridBagConstraints);

        jTabbedPane1.addTab("Daily Sales Report", jPanel12);

        jPanel10.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel10ComponentShown(evt);
            }
        });
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jLabel17.setText("Customer Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel10.add(jLabel17, gridBagConstraints);

        detSalesCustomerNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel10.add(detSalesCustomerNameLabel, gridBagConstraints);

        jButton11.setText("Search...");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel10.add(jButton11, gridBagConstraints);

        detailedSalesCustomerDatePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        detailedSalesCustomerDatePanel.setLayout(new java.awt.GridBagLayout());

        jLabel18.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        detailedSalesCustomerDatePanel.add(jLabel18, gridBagConstraints);

        detSalesCustFMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        detSalesCustFMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesCustFMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        detailedSalesCustomerDatePanel.add(detSalesCustFMonthComboBox, gridBagConstraints);

        detSalesCustFDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        detSalesCustFDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesCustFDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel.add(detSalesCustFDayComboBox, gridBagConstraints);

        detSalesCustFYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        detSalesCustFYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesCustFYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel.add(detSalesCustFYearComboBox, gridBagConstraints);

        jLabel19.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        detailedSalesCustomerDatePanel.add(jLabel19, gridBagConstraints);

        detSalesCustTMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        detSalesCustTMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesCustTMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel.add(detSalesCustTMonthComboBox, gridBagConstraints);

        detSalesCustTDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        detSalesCustTDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesCustTDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel.add(detSalesCustTDayComboBox, gridBagConstraints);

        detSalesCustTYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        detSalesCustTYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesCustTYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesCustomerDatePanel.add(detSalesCustTYearComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel10.add(detailedSalesCustomerDatePanel, gridBagConstraints);

        detailedSalesCustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane9.setViewportView(detailedSalesCustomerTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel10.add(jScrollPane9, gridBagConstraints);

        jButton21.setText("Generate Report");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel10.add(jButton21, gridBagConstraints);

        jTabbedPane1.addTab("Detailed Sales Report (Customer)", jPanel10);

        jPanel11.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel11ComponentShown(evt);
            }
        });
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel26.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel11.add(jLabel26, gridBagConstraints);

        detSalesSupplierNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel11.add(detSalesSupplierNameLabel, gridBagConstraints);

        jButton22.setText("Search...");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel11.add(jButton22, gridBagConstraints);

        detailedSalesSupplierDatePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        detailedSalesSupplierDatePanel.setLayout(new java.awt.GridBagLayout());

        jLabel27.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        detailedSalesSupplierDatePanel.add(jLabel27, gridBagConstraints);

        detSalesSuppFMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        detSalesSuppFMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesSuppFMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        detailedSalesSupplierDatePanel.add(detSalesSuppFMonthComboBox, gridBagConstraints);

        detSalesSuppFDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        detSalesSuppFDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesSuppFDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel.add(detSalesSuppFDayComboBox, gridBagConstraints);

        detSalesSuppFYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        detSalesSuppFYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesSuppFYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel.add(detSalesSuppFYearComboBox, gridBagConstraints);

        jLabel28.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        detailedSalesSupplierDatePanel.add(jLabel28, gridBagConstraints);

        detSalesSuppTMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        detSalesSuppTMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesSuppTMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel.add(detSalesSuppTMonthComboBox, gridBagConstraints);

        detSalesSuppTDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        detSalesSuppTDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesSuppTDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel.add(detSalesSuppTDayComboBox, gridBagConstraints);

        detSalesSuppTYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        detSalesSuppTYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detSalesSuppTYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel.add(detSalesSuppTYearComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel11.add(detailedSalesSupplierDatePanel, gridBagConstraints);

        detailedSalesSupplierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane10.setViewportView(detailedSalesSupplierTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel11.add(jScrollPane10, gridBagConstraints);

        jButton23.setText("Generate Report");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel11.add(jButton23, gridBagConstraints);

        jTabbedPane1.addTab("Detailed Sales Report (Supplier)", jPanel11);

        jPanel18.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel18ComponentShown(evt);
            }
        });
        jPanel18.setLayout(new java.awt.GridBagLayout());

        transferLabel.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel18.add(transferLabel, gridBagConstraints);

        transferNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel18.add(transferNameLabel, gridBagConstraints);

        transferButton.setText("Search...");
        transferButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel18.add(transferButton, gridBagConstraints);

        detailedSalesSupplierDatePanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        detailedSalesSupplierDatePanel1.setLayout(new java.awt.GridBagLayout());

        jLabel31.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        detailedSalesSupplierDatePanel1.add(jLabel31, gridBagConstraints);

        transferFromMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        transferFromMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferFromMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        detailedSalesSupplierDatePanel1.add(transferFromMonthComboBox, gridBagConstraints);

        transferFromDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        transferFromDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferFromDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel1.add(transferFromDayComboBox, gridBagConstraints);

        transferFromYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        transferFromYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferFromYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel1.add(transferFromYearComboBox, gridBagConstraints);

        jLabel32.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        detailedSalesSupplierDatePanel1.add(jLabel32, gridBagConstraints);

        transferToMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        transferToMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferToMonthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel1.add(transferToMonthComboBox, gridBagConstraints);

        transferToDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        transferToDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferToDayComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel1.add(transferToDayComboBox, gridBagConstraints);

        transferToYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        transferToYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferToYearComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        detailedSalesSupplierDatePanel1.add(transferToYearComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel18.add(detailedSalesSupplierDatePanel1, gridBagConstraints);

        transferTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane13.setViewportView(transferTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel18.add(jScrollPane13, gridBagConstraints);

        jButton35.setText("Generate Report");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel18.add(jButton35, gridBagConstraints);

        jTabbedPane1.addTab("Detailed Transfer Report", jPanel18);

        jPanel17.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel17ComponentShown(evt);
            }
        });
        jPanel17.setLayout(new java.awt.GridBagLayout());

        jLabel30.setText("Customer Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel17.add(jLabel30, gridBagConstraints);

        receivableAgingNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel17.add(receivableAgingNameLabel, gridBagConstraints);

        jButton34.setText("Search...");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel17.add(jButton34, gridBagConstraints);

        receivableSummaryDatePanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        receivableSummaryDatePanel1.setLayout(new java.awt.GridBagLayout());

        jLabel33.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        receivableSummaryDatePanel1.add(jLabel33, gridBagConstraints);

        jComboBox31.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel1.add(jComboBox31, gridBagConstraints);

        jComboBox32.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel1.add(jComboBox32, gridBagConstraints);

        jComboBox33.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel1.add(jComboBox33, gridBagConstraints);

        jLabel34.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        receivableSummaryDatePanel1.add(jLabel34, gridBagConstraints);

        jComboBox34.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel1.add(jComboBox34, gridBagConstraints);

        jComboBox35.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel1.add(jComboBox35, gridBagConstraints);

        jComboBox36.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel1.add(jComboBox36, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel17.add(receivableSummaryDatePanel1, gridBagConstraints);

        accountReceivableAgingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane14.setViewportView(accountReceivableAgingTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel17.add(jScrollPane14, gridBagConstraints);

        jButton36.setText("Generate Report");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel17.add(jButton36, gridBagConstraints);

        jTabbedPane1.addTab("Accounts Receivable Aging", jPanel17);

        jPanel19.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel19ComponentShown(evt);
            }
        });
        jPanel19.setLayout(new java.awt.GridBagLayout());

        customerNamejLabel35.setText("Customer Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel19.add(customerNamejLabel35, gridBagConstraints);

        receivableNameLabel1.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel19.add(receivableNameLabel1, gridBagConstraints);

        receivablejButton37.setText("Search...");
        receivablejButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivablejButton37ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel19.add(receivablejButton37, gridBagConstraints);

        receivableSummaryDatePanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        receivableSummaryDatePanel5.setLayout(new java.awt.GridBagLayout());

        jLabel36.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        receivableSummaryDatePanel5.add(jLabel36, gridBagConstraints);

        jComboBox37.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        receivableSummaryDatePanel5.add(jComboBox37, gridBagConstraints);

        jComboBox38.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel5.add(jComboBox38, gridBagConstraints);

        jComboBox39.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel5.add(jComboBox39, gridBagConstraints);

        jLabel37.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        receivableSummaryDatePanel5.add(jLabel37, gridBagConstraints);

        jComboBox40.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel5.add(jComboBox40, gridBagConstraints);

        jComboBox41.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel5.add(jComboBox41, gridBagConstraints);

        jComboBox42.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        receivableSummaryDatePanel5.add(jComboBox42, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel19.add(receivableSummaryDatePanel5, gridBagConstraints);

        accntReceivableTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane15.setViewportView(accntReceivableTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel19.add(jScrollPane15, gridBagConstraints);

        jButton38.setText("Generate Report");
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel19.add(jButton38, gridBagConstraints);

        jTabbedPane1.addTab("Accounts Receivable", jPanel19);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 882, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
        // TODO add your handling code here:
        ledgerLocationComboBox.setModel(LocationAction.getLocationModel());
        
    }//GEN-LAST:event_jPanel1ComponentShown

    private void itemLedgerToDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLedgerToDayComboBoxActionPerformed
        // TODO add your handling code here:
        itemLedgerSearch();
//        if(!itemNameLabel.getText().equals("-")){
//                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(itemLedgerFromYearComboBox.getSelectedItem().toString()), itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromDayComboBox.getSelectedIndex()+1);
//                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(itemLedgerToYearComboBox.getSelectedItem().toString()), itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
//                    itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//         }
    }//GEN-LAST:event_itemLedgerToDayComboBoxActionPerformed

    private void itemLedgerFromMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLedgerFromMonthComboBoxActionPerformed
        // TODO add your handling code here:
        
//        int i = itemLedgerFromDayComboBox.getSelectedIndex()+1;
//        itemLedgerFromDayComboBox.setModel(DateActions.fixDay(itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromYearComboBox.getSelectedItem().toString()));
//        checkCurrentItemLedgerFromDay(i);
//        itemLedgerSearch();
//         if(!itemNameLabel.getText().equals("-")){
//                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(itemLedgerFromYearComboBox.getSelectedItem().toString()), itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromDayComboBox.getSelectedIndex()+1);
//                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(itemLedgerToYearComboBox.getSelectedItem().toString()), itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
//                    if(fromCal.compareTo(toCal)<=0){
//                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                    } else {
//                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
//                    }
//         }
        DateActions.comboBoxDateAction(itemLedgerFromYearComboBox, itemLedgerFromMonthComboBox, itemLedgerFromDayComboBox);
        itemLedgerSearch();
    }//GEN-LAST:event_itemLedgerFromMonthComboBoxActionPerformed

    private void itemLedgerFromYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLedgerFromYearComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(itemLedgerFromYearComboBox, itemLedgerFromMonthComboBox, itemLedgerFromDayComboBox);
        itemLedgerSearch();
        
    }//GEN-LAST:event_itemLedgerFromYearComboBoxActionPerformed

    private void itemLedgerToMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLedgerToMonthComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(itemLedgerToYearComboBox, itemLedgerToMonthComboBox, itemLedgerToDayComboBox);
        itemLedgerSearch();
    }//GEN-LAST:event_itemLedgerToMonthComboBoxActionPerformed

    private void itemLedgerToYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLedgerToYearComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(itemLedgerToYearComboBox, itemLedgerToMonthComboBox, itemLedgerToDayComboBox);
        itemLedgerSearch();
    }//GEN-LAST:event_itemLedgerToYearComboBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
              SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 4,false);
//        }
       
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getItem() != null){
                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(itemLedgerFromYearComboBox.getSelectedItem().toString()), itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromDayComboBox.getSelectedIndex()+1);
                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(itemLedgerToYearComboBox.getSelectedItem().toString()), itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
                    item = detailsPopUp.getItem();
                    itemNameLabel.setText(item.getItemName());
//                    itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
                    if(fromCal.compareTo(toCal)<=0){
//                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
                        Client loc = (Client) ledgerLocationComboBox.getSelectedItem();
                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), 
                                Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime()), loc.getClientId()));
                    } else {
                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
                    }
         }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 2,false);
//        }
        
                detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
                    inventorySupplier = detailsPopUp.getClient();
                    inventorySupplierNameLabel.setText(inventorySupplier.getClientName());
                    Client loc = (Client) inventoryLocationComboBox.getSelectedItem();
                    inventoryTable.setModel(ItemAction.getInventoryTableData(inventorySupplier.getClientId(),loc.getClientId()) );
         }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentShown
        inventoryDatePanel.setVisible(false);
        inventoryLocationComboBox.setModel(LocationAction.getLocationModel());
    }//GEN-LAST:event_jPanel2ComponentShown

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 1,false);
//        }
        
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(receivableLedgerFromYearComboBox.getSelectedItem().toString()), receivableLedgerFromMonthComboBox.getSelectedIndex(), receivableLedgerFromDayComboBox.getSelectedIndex()+1);
                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(receivableLedgerToYearComboBox.getSelectedItem().toString()), receivableLedgerToMonthComboBox.getSelectedIndex(), receivableLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
                    receivableLedgerCustomer = detailsPopUp.getClient();
                    receivableLedgerNameLabel.setText(receivableLedgerCustomer.getClientName());
                    
                    if(fromCal.compareTo(toCal)<=0){
                        accountReceivableLedgerTable.setModel(CollectionAction.getAccountsLedgerTableData(receivableLedgerCustomer.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                        accountReceivableLedgerTable.setModel(CollectionAction.getReceivableLedgerTableData(receivableLedgerCustomer.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
                    } else {
                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
                    }
         }
           
  
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 1,false);
//        }
        
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
                    receivableSummaryCustomer = detailsPopUp.getClient();
                    receivableSummaryNameLabel.setText(receivableSummaryCustomer.getClientName());
                    accountReceivableSummaryTable.setModel(InvoiceAction.getReceivableSummaryTableData(receivableSummaryCustomer.getClientId()));
         }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void itemLedgerFromDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLedgerFromDayComboBoxActionPerformed
        // TODO add your handling code here:
        itemLedgerSearch();
//        if(!itemNameLabel.getText().equals("-")){
//                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(itemLedgerFromYearComboBox.getSelectedItem().toString()), itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromDayComboBox.getSelectedIndex()+1);
//                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(itemLedgerToYearComboBox.getSelectedItem().toString()), itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
//                    itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//         }
    }//GEN-LAST:event_itemLedgerFromDayComboBoxActionPerformed

    private void jPanel4ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel4ComponentShown
        // TODO add your handling code here:
        receivableSummaryDatePanel.setVisible(false);
    }//GEN-LAST:event_jPanel4ComponentShown

    private void receivableLedgerFromMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivableLedgerFromMonthComboBoxActionPerformed
        // TODO add your handling code here:
//         int i = receivableLedgerFromDayComboBox.getSelectedIndex()+1;
//        receivableLedgerFromDayComboBox.setModel(DateActions.fixDay(receivableLedgerFromMonthComboBox.getSelectedIndex(), receivableLedgerFromYearComboBox.getSelectedItem().toString()));
//        checkCurrentReceivableLedgerFromDay(i);
//        receivableLedgerSearch();
        DateActions.comboBoxDateAction(receivableLedgerFromYearComboBox, receivableLedgerFromMonthComboBox, receivableLedgerFromDayComboBox);
        receivableLedgerSearch();
    }//GEN-LAST:event_receivableLedgerFromMonthComboBoxActionPerformed

    private void receivableLedgerFromDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivableLedgerFromDayComboBoxActionPerformed
        // TODO add your handling code here:
//        int i = receivableLedgerToDayComboBox.getSelectedIndex()+1;
//        receivableLedgerToDayComboBox.setModel(DateActions.fixDay(receivableLedgerToMonthComboBox.getSelectedIndex(), receivableLedgerToYearComboBox.getSelectedItem().toString()));
//        checkCurrentReceivableLedgerToDay(i);
        receivableLedgerSearch();
    }//GEN-LAST:event_receivableLedgerFromDayComboBoxActionPerformed

    private void receivableLedgerFromYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivableLedgerFromYearComboBoxActionPerformed
        // TODO add your handling code here:
       DateActions.comboBoxDateAction(receivableLedgerFromYearComboBox, receivableLedgerFromMonthComboBox, receivableLedgerFromDayComboBox);
       receivableLedgerSearch();
    }//GEN-LAST:event_receivableLedgerFromYearComboBoxActionPerformed

    private void receivableLedgerToMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivableLedgerToMonthComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(receivableLedgerToYearComboBox, receivableLedgerToMonthComboBox, receivableLedgerToDayComboBox);
        receivableLedgerSearch();
    }//GEN-LAST:event_receivableLedgerToMonthComboBoxActionPerformed

    private void receivableLedgerToDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivableLedgerToDayComboBoxActionPerformed
        // TODO add your handling code here:
//         int i = receivableLedgerToDayComboBox.getSelectedIndex()+1;
//        receivableLedgerToDayComboBox.setModel(DateActions.fixDay(receivableLedgerToMonthComboBox.getSelectedIndex(), receivableLedgerToYearComboBox.getSelectedItem().toString()));
//        checkCurrentReceivableLedgerToDay(i);
        receivableLedgerSearch();
    }//GEN-LAST:event_receivableLedgerToDayComboBoxActionPerformed

    private void receivableLedgerToYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivableLedgerToYearComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(receivableLedgerToYearComboBox, receivableLedgerToMonthComboBox, receivableLedgerToDayComboBox);
        receivableLedgerSearch();
    }//GEN-LAST:event_receivableLedgerToYearComboBoxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        generateExcel(itemLedgerTable.getModel(), "Item Ledger", 0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        generateExcel(inventoryTable.getModel(), "Inventory Report", 1);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        generateExcel(accountReceivableLedgerTable.getModel(), "Accounts Receivable Ledger", 2);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        generateExcel(accountReceivableSummaryTable.getModel(), "Accounts Receivable Summary", 3);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
              SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 2,false);
//        }
        
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(payableLedgerFromYearComboBox.getSelectedItem().toString()), payableLedgerFromMonthComboBox.getSelectedIndex(), payableLedgerFromDayComboBox.getSelectedIndex()+1);
                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(payableLedgerToYearComboBox.getSelectedItem().toString()), payableLedgerToMonthComboBox.getSelectedIndex(), payableLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
                    payableLedgerCustomer = detailsPopUp.getClient();
                    payableLedgerNameLabel.setText(payableLedgerCustomer.getClientName());
                    
                    if(fromCal.compareTo(toCal)<=0){
                        accountPayableLedgerTable.setModel(CollectionAction.getAccountsLedgerTableData(payableLedgerCustomer.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
                    } else {
                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
                    }
         } 
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        generateExcel(accountPayableLedgerTable.getModel(), "Accounts Payable", 4);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jPanel8ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel8ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel8ComponentShown

    private void payableLedgerFromMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payableLedgerFromMonthComboBoxActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here
//         int i = payableLedgerFromDayComboBox.getSelectedIndex()+1;
//        payableLedgerFromDayComboBox.setModel(DateActions.fixDay(payableLedgerFromMonthComboBox.getSelectedIndex(), payableLedgerFromYearComboBox.getSelectedItem().toString()));
//        checkCurrentPayableLedgerFromDay(i);
//        payableLedgerSearch();
        DateActions.comboBoxDateAction(payableLedgerFromYearComboBox, payableLedgerFromMonthComboBox, payableLedgerFromDayComboBox);
                payableLedgerSearch();
    }//GEN-LAST:event_payableLedgerFromMonthComboBoxActionPerformed

    private void payableLedgerFromYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payableLedgerFromYearComboBoxActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
       DateActions.comboBoxDateAction(payableLedgerFromYearComboBox, payableLedgerFromMonthComboBox, payableLedgerFromDayComboBox);
               payableLedgerSearch();
        
    }//GEN-LAST:event_payableLedgerFromYearComboBoxActionPerformed

    private void payableLedgerToMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payableLedgerToMonthComboBoxActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
    DateActions.comboBoxDateAction(payableLedgerToYearComboBox, payableLedgerToMonthComboBox, payableLedgerToDayComboBox);
    payableLedgerSearch();
    }//GEN-LAST:event_payableLedgerToMonthComboBoxActionPerformed

    private void payableLedgerToDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payableLedgerToDayComboBoxActionPerformed
                // TODO add your handling code here:
        payableLedgerSearch();
    }//GEN-LAST:event_payableLedgerToDayComboBoxActionPerformed

    private void payableLedgerToYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payableLedgerToYearComboBoxActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        DateActions.comboBoxDateAction(payableLedgerToYearComboBox, payableLedgerToMonthComboBox, payableLedgerToDayComboBox);
        payableLedgerSearch();
    }//GEN-LAST:event_payableLedgerToYearComboBoxActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
               SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 2,false);
//        }
        
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
                    payableSummaryCustomer = detailsPopUp.getClient();
                    payableSummaryNameLabel.setText(payableSummaryCustomer.getClientName());
                    accountPayableSummaryTable.setModel(InvoiceAction.getPayableSummaryTableData(payableSummaryCustomer.getClientId()));
         }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void payableSummaryToDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payableSummaryToDayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payableSummaryToDayComboBoxActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        generateExcel(accountPayableSummaryTable.getModel(), "Accounts Payable Summary", 5);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jPanel9ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel9ComponentShown
        // TODO add your handling code here:
         payableSummaryDatePanel.setVisible(false);
    }//GEN-LAST:event_jPanel9ComponentShown

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 1,false);
//        }
        
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
                    postDatedCustomr = detailsPopUp.getClient();
                    postDatedNameLabel.setText(postDatedCustomr.getClientName());
                    postDatedSummaryTable.setModel(CollectionAction.getCollectionPostDatedTableData(postDatedCustomr.getClientId()));
         }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        generateExcel(postDatedSummaryTable.getModel(), "Post-Dated Summary", 6);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jPanel6ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel6ComponentShown
        // TODO add your handling code here:
        postDatedSummaryDatePanel.setVisible(false);
    }//GEN-LAST:event_jPanel6ComponentShown

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        generateExcel(dailySalesSummaryTable.getModel(), "Daily Sales Collection", 7);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jPanel7ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel7ComponentShown
        // TODO add your handling code here:
        initializeDailySalesTable();
    }//GEN-LAST:event_jPanel7ComponentShown

    private void dailySalesMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesMonthComboBoxActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
//         int i = dailySalesDayComboBox.getSelectedIndex()+1;
//        dailySalesDayComboBox.setModel(DateActions.fixDay(dailySalesMonthComboBox.getSelectedIndex(), dailySalesYearComboBox.getSelectedItem().toString()));
//        checkCurrentDailySalesDay(i);
        DateActions.comboBoxDateAction(dailySalesYearComboBox, dailySalesMonthComboBox, dailySalesDayComboBox);
        initializeDailySalesTable();
    }//GEN-LAST:event_dailySalesMonthComboBoxActionPerformed

    private void dailySalesDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesDayComboBoxActionPerformed
        // TODO add your handling code here:
//          int i = dailySalesDayComboBox.getSelectedIndex()+1;
//        dailySalesDayComboBox.setModel(DateActions.fixDay(dailySalesMonthComboBox.getSelectedIndex(), dailySalesYearComboBox.getSelectedItem().toString()));
//        checkCurrentDailySalesDay(i);
        initializeDailySalesTable();
    }//GEN-LAST:event_dailySalesDayComboBoxActionPerformed

    private void dailySalesYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesYearComboBoxActionPerformed
        // TODO add your handling code here:
//          int i = dailySalesDayComboBox.getSelectedIndex()+1;
//        dailySalesDayComboBox.setModel(DateActions.fixDay(dailySalesMonthComboBox.getSelectedIndex(), dailySalesYearComboBox.getSelectedItem().toString()));
//        checkCurrentDailySalesDay(i);
        DateActions.comboBoxDateAction(dailySalesYearComboBox, dailySalesMonthComboBox, dailySalesDayComboBox);
        initializeDailySalesTable();
    }//GEN-LAST:event_dailySalesYearComboBoxActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 1,false);
//        }
        
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
//                    accountReceivableLedgerTable.setModel(CollectionAction.getReceivableLedgerTableData(receivableLedgerCustomer.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                   detailedSalesCustomerTable.setModel(InvoiceAction.getInvoiceDetailedSalesData(detailsPopUp.getClient().getClientId()));
                    detailedSalesCustomer = detailsPopUp.getClient();
                    detSalesCustomerNameLabel.setText(detailsPopUp.getClient().getClientName());
                    detailedSalesReportCustomerSearch();
         }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        generateExcel(detailedSalesCustomerTable.getModel(), "Detailed Sales (Customer)", 9);
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jPanel10ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel10ComponentShown
        // TODO add your handling code here:
//        detailedSalesCustomerDatePanel.setVisible(false);
    }//GEN-LAST:event_jPanel10ComponentShown

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
         SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 2,false);
//        }
        
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
//                   detailedSalesSupplierTable.setModel(InvoiceAction.getInvoiceDetailedSalesData(detailsPopUp.getClient().getClientId()));
                    detailedSalesSupplier = detailsPopUp.getClient();
                    detSalesSupplierNameLabel.setText(detailsPopUp.getClient().getClientName());
                    detailedSalesReportSupplierSearch();
         } 
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        generateExcel(detailedSalesSupplierTable.getModel(), "Detailed Sales (Supplier)", 10);
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jPanel11ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel11ComponentShown
        // TODO add your handling code here:
//        detailedSalesSupplierDatePanel.setVisible(false);
    }//GEN-LAST:event_jPanel11ComponentShown

    private void detailedDailySalesMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedDailySalesMonthComboBoxActionPerformed
        // TODO add your handling code here:
//          int i = detailedDailySalesDayComboBox.getSelectedIndex()+1;
//        detailedDailySalesDayComboBox.setModel(DateActions.fixDay(detailedDailySalesMonthComboBox.getSelectedIndex(), detailedDailySalesYearComboBox.getSelectedItem().toString()));
//        checkCurrentDetailedDailySalesDay(i);
        DateActions.comboBoxDateAction(detailedDailySalesYearComboBox, detailedDailySalesMonthComboBox, detailedDailySalesDayComboBox);
        initializeDetailedDailySalesTable();
    }//GEN-LAST:event_detailedDailySalesMonthComboBoxActionPerformed

    private void detailedDailySalesDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedDailySalesDayComboBoxActionPerformed
        // TODO add your handling code here:
          
        initializeDetailedDailySalesTable();
    }//GEN-LAST:event_detailedDailySalesDayComboBoxActionPerformed

    private void detailedDailySalesYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedDailySalesYearComboBoxActionPerformed
        // TODO add your handling code here:
//            int i = detailedDailySalesDayComboBox.getSelectedIndex()+1;
//        detailedDailySalesDayComboBox.setModel(DateActions.fixDay(detailedDailySalesMonthComboBox.getSelectedIndex(), detailedDailySalesYearComboBox.getSelectedItem().toString()));
//        checkCurrentDetailedDailySalesDay(i);
        DateActions.comboBoxDateAction(detailedDailySalesYearComboBox, detailedDailySalesMonthComboBox, detailedDailySalesDayComboBox);
        initializeDetailedDailySalesTable();
    }//GEN-LAST:event_detailedDailySalesYearComboBoxActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
        generateExcel(detailedDailySalesTable.getModel(), "Detailed Daily Sales", 8);
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jPanel12ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel12ComponentShown
        // TODO add your handling code here:
        initializeDetailedDailySalesTable();
    }//GEN-LAST:event_jPanel12ComponentShown

    private void detSalesCustFMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesCustFMonthComboBoxActionPerformed
        // TODO add your handling code here:
//                int i = detSalesCustFDayComboBox.getSelectedIndex()+1;
//        detSalesCustFDayComboBox.setModel(DateActions.fixDay(detSalesCustFMonthComboBox.getSelectedIndex(), detSalesCustFYearComboBox.getSelectedItem().toString()));
//        checkCurrentComboBoxDay(detSalesCustFYearComboBox, detSalesCustFMonthComboBox, detSalesCustFDayComboBox, i);
//        payableLedgerSearch();
        DateActions.comboBoxDateAction(detSalesCustFYearComboBox, detSalesCustFMonthComboBox, detSalesCustFDayComboBox);
        detailedSalesReportCustomerSearch();
    }//GEN-LAST:event_detSalesCustFMonthComboBoxActionPerformed

    private void detSalesCustFYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesCustFYearComboBoxActionPerformed
        // TODO add your handling code here:
//            int i = detSalesCustFDayComboBox.getSelectedIndex()+1;
//        detSalesCustFDayComboBox.setModel(DateActions.fixDay(detSalesCustFMonthComboBox.getSelectedIndex(), detSalesCustFYearComboBox.getSelectedItem().toString()));
//        checkCurrentComboBoxDay(detSalesCustFYearComboBox, detSalesCustFMonthComboBox, detSalesCustFDayComboBox, i);
//        payableLedgerSearch();
        DateActions.comboBoxDateAction(detSalesCustFYearComboBox, detSalesCustFMonthComboBox, detSalesCustFDayComboBox);
        detailedSalesReportCustomerSearch();
    }//GEN-LAST:event_detSalesCustFYearComboBoxActionPerformed

    private void detSalesCustTMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesCustTMonthComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(detSalesCustTYearComboBox, detSalesCustTMonthComboBox, detSalesCustTDayComboBox);
        detailedSalesReportCustomerSearch();
    }//GEN-LAST:event_detSalesCustTMonthComboBoxActionPerformed

    private void detSalesCustTYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesCustTYearComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(detSalesCustTYearComboBox, detSalesCustTMonthComboBox, detSalesCustTDayComboBox);
        detailedSalesReportCustomerSearch();
    }//GEN-LAST:event_detSalesCustTYearComboBoxActionPerformed

    private void payableLedgerFromDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payableLedgerFromDayComboBoxActionPerformed
                payableLedgerSearch();
    }//GEN-LAST:event_payableLedgerFromDayComboBoxActionPerformed

    private void detSalesSuppFMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesSuppFMonthComboBoxActionPerformed
        DateActions.comboBoxDateAction(detSalesSuppFYearComboBox, detSalesSuppFMonthComboBox, detSalesSuppFDayComboBox);        // TODO add your handling code here:
        detailedSalesReportSupplierSearch();
    }//GEN-LAST:event_detSalesSuppFMonthComboBoxActionPerformed

    private void detSalesSuppFYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesSuppFYearComboBoxActionPerformed
            // TODO add your handling code here:
        DateActions.comboBoxDateAction(detSalesSuppFYearComboBox, detSalesSuppFMonthComboBox, detSalesSuppFDayComboBox);
        detailedSalesReportSupplierSearch();
    }//GEN-LAST:event_detSalesSuppFYearComboBoxActionPerformed

    private void detSalesSuppTMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesSuppTMonthComboBoxActionPerformed
        DateActions.comboBoxDateAction(detSalesSuppTYearComboBox, detSalesSuppTMonthComboBox, detSalesSuppTDayComboBox);
        detailedSalesReportSupplierSearch();
    }//GEN-LAST:event_detSalesSuppTMonthComboBoxActionPerformed

    private void detSalesSuppTYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesSuppTYearComboBoxActionPerformed
        DateActions.comboBoxDateAction(detSalesSuppTYearComboBox, detSalesSuppTMonthComboBox, detSalesSuppTDayComboBox);
        detailedSalesReportSupplierSearch();
        
    }//GEN-LAST:event_detSalesSuppTYearComboBoxActionPerformed

    private void detSalesCustFDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesCustFDayComboBoxActionPerformed
        detailedSalesReportCustomerSearch();
    }//GEN-LAST:event_detSalesCustFDayComboBoxActionPerformed

    private void detSalesCustTDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesCustTDayComboBoxActionPerformed
        detailedSalesReportCustomerSearch();
    }//GEN-LAST:event_detSalesCustTDayComboBoxActionPerformed

    private void detSalesSuppFDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesSuppFDayComboBoxActionPerformed
       detailedSalesReportSupplierSearch();
    }//GEN-LAST:event_detSalesSuppFDayComboBoxActionPerformed

    private void detSalesSuppTDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detSalesSuppTDayComboBoxActionPerformed
       detailedSalesReportSupplierSearch();
    }//GEN-LAST:event_detSalesSuppTDayComboBoxActionPerformed

    private void dailySalesMonthComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesMonthComboBox1ActionPerformed
        // TODO add your handling code here:
       DateActions.comboBoxDateAction(dailySalesYearComboBox1, dailySalesMonthComboBox1, dailySalesDayComboBox1);
        initializeDailySalesPayableTable();
    }//GEN-LAST:event_dailySalesMonthComboBox1ActionPerformed

    private void dailySalesDayComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesDayComboBox1ActionPerformed
        // TODO add your handling code here:
        initializeDailySalesPayableTable();
    }//GEN-LAST:event_dailySalesDayComboBox1ActionPerformed

    private void dailySalesYearComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailySalesYearComboBox1ActionPerformed
        // TODO add your handling code here:
       DateActions.comboBoxDateAction(dailySalesYearComboBox1, dailySalesMonthComboBox1, dailySalesDayComboBox1);
        initializeDailySalesPayableTable(); 
    }//GEN-LAST:event_dailySalesYearComboBox1ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jPanel15ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel15ComponentShown
        // TODO add your handling code here:
                // TODO add your handling code here:
        initializeDailySalesPayableTable();
    }//GEN-LAST:event_jPanel15ComponentShown

    private void ledgerLocationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ledgerLocationComboBoxActionPerformed
        // TODO add your handling code here:
        
            itemLedgerSearch();
        
    }//GEN-LAST:event_ledgerLocationComboBoxActionPerformed

    private void inventoryLocationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryLocationComboBoxActionPerformed
        // TODO add your handling code here:
        
        if(!inventorySupplierNameLabel.getText().equals("-")){
                    Client loc = (Client) inventoryLocationComboBox.getSelectedItem();
                    inventoryTable.setModel(ItemAction.getInventoryTableData(inventorySupplier.getClientId(),loc.getClientId()) );
        }
    }//GEN-LAST:event_inventoryLocationComboBoxActionPerformed

    private void transferFromMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferFromMonthComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(transferFromYearComboBox, transferFromMonthComboBox, transferFromDayComboBox);
        initializeDetailedTransferTable();
    }//GEN-LAST:event_transferFromMonthComboBoxActionPerformed

    private void transferFromDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferFromDayComboBoxActionPerformed
        // TODO add your handling code here:
        initializeDetailedTransferTable();
    }//GEN-LAST:event_transferFromDayComboBoxActionPerformed

    private void transferFromYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferFromYearComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(transferFromYearComboBox, transferFromMonthComboBox, transferFromDayComboBox);
        initializeDetailedTransferTable();
    }//GEN-LAST:event_transferFromYearComboBoxActionPerformed

    private void transferToMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferToMonthComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(transferToYearComboBox, transferToMonthComboBox, transferToDayComboBox);
        initializeDetailedTransferTable();
    }//GEN-LAST:event_transferToMonthComboBoxActionPerformed

    private void transferToDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferToDayComboBoxActionPerformed
        // TODO add your handling code here:
//        DateActions.comboBoxDateAction(transferToYearComboBox, transferToMonthComboBox, transferToDayComboBox);
        initializeDetailedTransferTable();
    }//GEN-LAST:event_transferToDayComboBoxActionPerformed

    private void transferToYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferToYearComboBoxActionPerformed
        // TODO add your handling code here:
        DateActions.comboBoxDateAction(transferToYearComboBox, transferToMonthComboBox, transferToDayComboBox);
        initializeDetailedTransferTable();
    }//GEN-LAST:event_transferToYearComboBoxActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        // TODO add your handling code here:
         generateExcel(transferTable.getModel(), "Transfer Report", 11);
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jPanel18ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel18ComponentShown
        // TODO add your handling code here:
       initializeDetailedTransferTable();
    }//GEN-LAST:event_jPanel18ComponentShown

    private void transferButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transferButtonActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        // TODO add your handling code here:
        SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 1,false);
//        }
        
               detailsPopUp.setLocationRelativeTo(null);
                detailsPopUp.pack();
                detailsPopUp.setVisible(true);
                if(detailsPopUp.getClient() != null){
                    receivableAgingCustomer = detailsPopUp.getClient();
                    receivableAgingNameLabel.setText(receivableAgingCustomer.getClientName());
                    accountReceivableAgingTable.setModel(InvoiceAction.getReceivableAgingTableData(receivableAgingCustomer.getClientId()));
         }
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jPanel17ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel17ComponentShown
        // TODO add your handling code here:
        
        receivableSummaryDatePanel1.setVisible(false);
    }//GEN-LAST:event_jPanel17ComponentShown

    private void receivablejButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivablejButton37ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_receivablejButton37ActionPerformed

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jPanel19ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel19ComponentShown
        // TODO add your handling code here:
        customerNamejLabel35.setVisible(false);
        receivableNameLabel1.setVisible(false);
        receivablejButton37.setVisible(false);
        receivableSummaryDatePanel5.setVisible(false);
        initializeAccountsReceivableTable();
    }//GEN-LAST:event_jPanel19ComponentShown

    private void initializeLedgerDates(){
        
        int month = (new GregorianCalendar().get(GregorianCalendar.MONTH));
        int day = new GregorianCalendar().get(GregorianCalendar.DATE)-1;
        GregorianCalendar cal = new GregorianCalendar();
        cal.add(GregorianCalendar.MONTH, -1);
        if (day > cal.getActualMaximum(GregorianCalendar.DATE)){
            day = cal.getActualMaximum(GregorianCalendar.DATE);
        }
        
        //Item Ledget To Date set Today
        itemLedgerToYearComboBox.setModel(DateActions.getYearModel());
        itemLedgerToYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        itemLedgerToMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        itemLedgerToDayComboBox.setModel(DateActions.fixDay(itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToYearComboBox.getSelectedItem().toString()));
        itemLedgerToDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        //Item Ledget To Date set 1 Month Ago
        itemLedgerFromYearComboBox.setModel(DateActions.getYearModel());
        itemLedgerFromYearComboBox.setSelectedItem(cal.get(GregorianCalendar.YEAR));
        itemLedgerFromMonthComboBox.setSelectedIndex(cal.get(GregorianCalendar.MONTH));
        itemLedgerFromDayComboBox.setModel(DateActions.fixDay(itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromYearComboBox.getSelectedItem().toString()));
        itemLedgerFromDayComboBox.setSelectedIndex(day);
        
        //receivable Ledger To Day set today
        receivableLedgerToYearComboBox.setModel(DateActions.getYearModel());
        receivableLedgerToYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        receivableLedgerToMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        receivableLedgerToDayComboBox.setModel(DateActions.fixDay(receivableLedgerToMonthComboBox.getSelectedIndex(), receivableLedgerToYearComboBox.getSelectedItem().toString()));
        receivableLedgerToDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        receivableLedgerFromYearComboBox.setModel(DateActions.getYearModel());
        receivableLedgerFromYearComboBox.setSelectedItem(cal.get(GregorianCalendar.YEAR));
        receivableLedgerFromMonthComboBox.setSelectedIndex(cal.get(GregorianCalendar.MONTH));
        receivableLedgerFromDayComboBox.setModel(DateActions.fixDay(receivableLedgerFromMonthComboBox.getSelectedIndex(), receivableLedgerFromYearComboBox.getSelectedItem().toString()));
        receivableLedgerFromDayComboBox.setSelectedIndex(day);
        
        //payab;le ledger day set
        payableLedgerToYearComboBox.setModel(DateActions.getYearModel());
        payableLedgerToYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        payableLedgerToMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        payableLedgerToDayComboBox.setModel(DateActions.fixDay(payableLedgerToMonthComboBox.getSelectedIndex(), payableLedgerToYearComboBox.getSelectedItem().toString()));
        payableLedgerToDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        payableLedgerFromYearComboBox.setModel(DateActions.getYearModel());
        payableLedgerFromYearComboBox.setSelectedItem(cal.get(GregorianCalendar.YEAR));
        payableLedgerFromMonthComboBox.setSelectedIndex(cal.get(GregorianCalendar.MONTH));
        payableLedgerFromDayComboBox.setModel(DateActions.fixDay(payableLedgerFromMonthComboBox.getSelectedIndex(), payableLedgerFromYearComboBox.getSelectedItem().toString()));
        payableLedgerFromDayComboBox.setSelectedIndex(day);
        
        //setDaily Sales Collection to current day
         dailySalesYearComboBox.setModel(DateActions.getYearModel());
        dailySalesYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        dailySalesMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        dailySalesDayComboBox.setModel(DateActions.fixDay(dailySalesMonthComboBox.getSelectedIndex(), dailySalesYearComboBox.getSelectedItem().toString()));
        dailySalesDayComboBox.setSelectedIndex(day);
        
        
        //set Detailed Daily Sales Collection to current day
         detailedDailySalesYearComboBox.setModel(DateActions.getYearModel());
        detailedDailySalesYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        detailedDailySalesMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        detailedDailySalesDayComboBox.setModel(DateActions.fixDay(detailedDailySalesMonthComboBox.getSelectedIndex(), detailedDailySalesYearComboBox.getSelectedItem().toString()));
        detailedDailySalesDayComboBox.setSelectedIndex(day);
        
        //set Daily Sales Payable to current day
        dailySalesYearComboBox1.setModel(DateActions.getYearModel());
        dailySalesYearComboBox1.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        dailySalesMonthComboBox1.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        dailySalesDayComboBox1.setModel(DateActions.fixDay(dailySalesMonthComboBox1.getSelectedIndex(), dailySalesYearComboBox1.getSelectedItem().toString()));
        dailySalesDayComboBox1.setSelectedIndex(day);
        
        //detailed Sales Customer ledger day set
        detSalesCustTYearComboBox.setModel(DateActions.getYearModel());
        detSalesCustTYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        detSalesCustTMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        detSalesCustTDayComboBox.setModel(DateActions.fixDay(detSalesCustTMonthComboBox.getSelectedIndex(), detSalesCustTYearComboBox.getSelectedItem().toString()));
        detSalesCustTDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        detSalesCustFYearComboBox.setModel(DateActions.getYearModel());
        detSalesCustFYearComboBox.setSelectedItem(cal.get(GregorianCalendar.YEAR));
        detSalesCustFMonthComboBox.setSelectedIndex(cal.get(GregorianCalendar.MONTH));
        detSalesCustFDayComboBox.setModel(DateActions.fixDay(detSalesCustFMonthComboBox.getSelectedIndex(), detSalesCustFYearComboBox.getSelectedItem().toString()));
        detSalesCustFDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        //detailed Sales Supplier ledger day set
        detSalesSuppTYearComboBox.setModel(DateActions.getYearModel());
        detSalesSuppTYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        detSalesSuppTMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        detSalesSuppTDayComboBox.setModel(DateActions.fixDay(detSalesSuppTMonthComboBox.getSelectedIndex(), detSalesSuppTYearComboBox.getSelectedItem().toString()));
        detSalesSuppTDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        detSalesSuppFYearComboBox.setModel(DateActions.getYearModel());
        detSalesSuppFYearComboBox.setSelectedItem(cal.get(GregorianCalendar.YEAR));
        detSalesSuppFMonthComboBox.setSelectedIndex(cal.get(GregorianCalendar.MONTH));
        detSalesSuppFDayComboBox.setModel(DateActions.fixDay(detSalesSuppFMonthComboBox.getSelectedIndex(), detSalesSuppFYearComboBox.getSelectedItem().toString()));
        detSalesSuppFDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        
        //transfer day set
        transferToYearComboBox.setModel(DateActions.getYearModel());
        transferToYearComboBox.setSelectedItem(new GregorianCalendar().get(GregorianCalendar.YEAR));
        transferToMonthComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.MONTH));
        transferToDayComboBox.setModel(DateActions.fixDay(detSalesSuppTMonthComboBox.getSelectedIndex(), detSalesSuppTYearComboBox.getSelectedItem().toString()));
        transferToDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        transferFromYearComboBox.setModel(DateActions.getYearModel());
        transferFromYearComboBox.setSelectedItem(cal.get(GregorianCalendar.YEAR));
        transferFromMonthComboBox.setSelectedIndex(cal.get(GregorianCalendar.MONTH));
        transferFromDayComboBox.setModel(DateActions.fixDay(detSalesSuppFMonthComboBox.getSelectedIndex(), detSalesSuppFYearComboBox.getSelectedItem().toString()));
        transferFromDayComboBox.setSelectedIndex(new GregorianCalendar().get(GregorianCalendar.DATE)-1);
        
        
        transferButton.setVisible(false);
        transferNameLabel.setVisible(false);
        transferLabel.setVisible(false);
//        jTabbedPane1.remove(8);
        
        itemLedgerTable.getTableHeader().setReorderingAllowed(false);
        inventoryTable.getTableHeader().setReorderingAllowed(false);
        accountReceivableLedgerTable.getTableHeader().setReorderingAllowed(false);
        accountReceivableSummaryTable.getTableHeader().setReorderingAllowed(false);
        accountPayableLedgerTable.getTableHeader().setReorderingAllowed(false);
        accountPayableSummaryTable.getTableHeader().setReorderingAllowed(false);
        postDatedSummaryTable.getTableHeader().setReorderingAllowed(false);
        dailySalesSummaryTable.getTableHeader().setReorderingAllowed(false);
        dailySalesSummaryTable1.getTableHeader().setReorderingAllowed(false);
        detailedDailySalesTable.getTableHeader().setReorderingAllowed(false);
        detailedSalesCustomerTable.getTableHeader().setReorderingAllowed(false);
        detailedSalesSupplierTable.getTableHeader().setReorderingAllowed(false);
        transferTable.getTableHeader().setReorderingAllowed(false);
    }
    
    private void itemLedgerSearch(){
          if(!itemNameLabel.getText().equals("-") && !isInit){
                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(itemLedgerFromYearComboBox.getSelectedItem().toString()), itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromDayComboBox.getSelectedIndex()+1);
                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(itemLedgerToYearComboBox.getSelectedItem().toString()), itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
                      Client loc = (Client) ledgerLocationComboBox.getSelectedItem();
                    if(fromCal.compareTo(toCal)<=0){
                        itemLedgerTable.setModel(InvoiceAction.getItemLedgerTableData(item.getItemId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime()), loc.getClientId()));
                    } else {
                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
                    }
         }
    }
    
    
    
    
//    private void checkCurrentItemLedgerFromDay(int i){
//        GregorianCalendar cal = new GregorianCalendar(Integer.parseInt(itemLedgerFromYearComboBox.getSelectedItem().toString()),itemLedgerFromMonthComboBox.getSelectedIndex(), 1);
//        if(i <=  cal.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)){
//            itemLedgerFromDayComboBox.setSelectedIndex(i-1);
//        }        
//    }
//    
//    private void checkCurrentItemLedgerToDay(int i){
//        GregorianCalendar cal = new GregorianCalendar(Integer.parseInt(itemLedgerToYearComboBox.getSelectedItem().toString()),itemLedgerToMonthComboBox.getSelectedIndex(), 1);
//        if(i <=  cal.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)){
//            itemLedgerToDayComboBox.setSelectedIndex(i-1);
//        }        
//    }
    
    
    private void receivableLedgerSearch(){
          if(!receivableLedgerNameLabel.getText().equals("-") && !isInit){
                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(receivableLedgerFromYearComboBox.getSelectedItem().toString()), receivableLedgerFromMonthComboBox.getSelectedIndex(), receivableLedgerFromDayComboBox.getSelectedIndex()+1);
                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(receivableLedgerToYearComboBox.getSelectedItem().toString()), receivableLedgerToMonthComboBox.getSelectedIndex(), receivableLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
                    if(fromCal.compareTo(toCal)<=0){
                        accountReceivableLedgerTable.setModel(CollectionAction.getAccountsLedgerTableData(receivableLedgerCustomer.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
                    } else {
                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
                    }
         }
    }
    
    
         
     
//    private void checkCurrentReceivableLedgerFromDay(int i){
//        GregorianCalendar cal = new GregorianCalendar(Integer.parseInt(receivableLedgerFromYearComboBox.getSelectedItem().toString()),receivableLedgerFromMonthComboBox.getSelectedIndex(), 1);
//        if(i <=  cal.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)){
//            receivableLedgerFromDayComboBox.setSelectedIndex(i-1);
//        }        
//    }
//    
//    private void checkCurrentReceivableLedgerToDay(int i){
//        GregorianCalendar cal = new GregorianCalendar(Integer.parseInt(receivableLedgerToYearComboBox.getSelectedItem().toString()),receivableLedgerToMonthComboBox.getSelectedIndex(), 1);
//        if(i <=  cal.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)){
//            receivableLedgerToDayComboBox.setSelectedIndex(i-1);
//        }        
//    }  
     private void payableLedgerSearch(){
          if(!payableLedgerNameLabel.getText().equals("-") && !isInit){
                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(payableLedgerFromYearComboBox.getSelectedItem().toString()), payableLedgerFromMonthComboBox.getSelectedIndex(), payableLedgerFromDayComboBox.getSelectedIndex()+1);
                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(payableLedgerToYearComboBox.getSelectedItem().toString()), payableLedgerToMonthComboBox.getSelectedIndex(), payableLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
                    if(fromCal.compareTo(toCal)<=0){
                        accountPayableLedgerTable.setModel(CollectionAction.getAccountsLedgerTableData(payableLedgerCustomer.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
//                        accountPayableLedgerTable.setModel(CollectionAction.getPayableLedgerTableData(payableLedgerCustomer.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
                    } else {
                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
                    }
         }
    }
     
   private void detailedSalesReportCustomerSearch(){
          if(!detSalesCustomerNameLabel.getText().equals("-") && !isInit){
                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(detSalesCustFYearComboBox.getSelectedItem().toString()), detSalesCustFMonthComboBox.getSelectedIndex(), detSalesCustFDayComboBox.getSelectedIndex()+1);
                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(detSalesCustTYearComboBox.getSelectedItem().toString()), detSalesCustTMonthComboBox.getSelectedIndex(), detSalesCustTDayComboBox.getSelectedIndex()+1, 23, 59);
                    if(fromCal.compareTo(toCal)<=0){
                        detailedSalesCustomerTable.setModel(InvoiceAction.getInvoiceDetailedSalesData(detailedSalesCustomer.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
                    } else {
                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
                    }
         }
    }
    
   private void detailedSalesReportSupplierSearch(){
          if(!detSalesSupplierNameLabel.getText().equals("-") && !isInit){
                    GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(detSalesSuppFYearComboBox.getSelectedItem().toString()), detSalesSuppFMonthComboBox.getSelectedIndex(), detSalesSuppFDayComboBox.getSelectedIndex()+1);
                    GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(detSalesSuppTYearComboBox.getSelectedItem().toString()), detSalesSuppTMonthComboBox.getSelectedIndex(), detSalesSuppTDayComboBox.getSelectedIndex()+1, 23, 59);
                    if(fromCal.compareTo(toCal)<=0){
                        detailedSalesSupplierTable.setModel(InvoiceAction.getInvoiceDetailedSalesData(detailedSalesSupplier.getClientId(), Formats.dateFormatDays.format(fromCal.getTime()), Formats.dateFormatMinutes.format(toCal.getTime())));
                    } else {
                        JOptionPane.showMessageDialog(this,ErrorMessages.ERROR_TIME_PARAMETERS_ ,ErrorMessages.TITLE_ERROR,JOptionPane.WARNING_MESSAGE);
                    }
         }
    }
     
//     private void dailySalesAction(boolean isFrom){
//        //true From date false To date
//        
//             int i = dailySalesDayComboBox.getSelectedIndex()+1;
//             dailySalesDayComboBox.setModel(DateActions.fixDay(dailySalesMonthComboBox.getSelectedIndex(), dailySalesYearComboBox.getSelectedItem().toString()));
//            checkCurrentComboBoxDay(dailySalesYearComboBox, dailySalesMonthComboBox, dailySalesDayComboBox, i);
//            initializeDailySalesTable();
//    }
//    private void checkCurrentPayableLedgerFromDay(int i){
//        GregorianCalendar cal = new GregorianCalendar(Integer.parseInt(payableLedgerFromYearComboBox.getSelectedItem().toString()),payableLedgerFromMonthComboBox.getSelectedIndex(), 1);
//        if(i <=  cal.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)){
//            payableLedgerFromDayComboBox.setSelectedIndex(i-1);
//        }        
//    }
    
//    private void checkCurrentPayableLedgerToDay(int i){
//        GregorianCalendar cal = new GregorianCalendar(Integer.parseInt(payableLedgerToYearComboBox.getSelectedItem().toString()),payableLedgerToMonthComboBox.getSelectedIndex(), 1);
//        if(i <=  cal.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)){
//            payableLedgerToDayComboBox.setSelectedIndex(i-1);
//        }        
//        
//    }
//    
//    private void checkCurrentDailySalesDay(int i){
//        GregorianCalendar cal = new GregorianCalendar(Integer.parseInt(dailySalesYearComboBox.getSelectedItem().toString()),dailySalesMonthComboBox.getSelectedIndex(), 1);
//        if(i <=  cal.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)){
//            dailySalesDayComboBox.setSelectedIndex(i-1);
//        }        
//    }
    
//    private void checkCurrentDetailedDailySalesDay(int i){
//        GregorianCalendar cal = new GregorianCalendar(Integer.parseInt(detailedDailySalesYearComboBox.getSelectedItem().toString()),detailedDailySalesMonthComboBox.getSelectedIndex(), 1);
//        if(i <=  cal.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)){
//            detailedDailySalesDayComboBox.setSelectedIndex(i-1);
//        }        
//    }
    
       private void generateExcel(TableModel mod, String title, int reportType){
            
        try{
            JFileChooser.setDefaultLocale(Locale.ENGLISH);
            JFileChooser chooser = new JFileChooser();
              chooser.setDialogTitle("Save File");
            chooser.removeChoosableFileFilter(chooser.getFileFilter() );
            chooser.setFileFilter(new FileNameExtensionFilter("2003 Excel file *.xls", "xls")) ;

             int actionDialog = chooser.showSaveDialog(this);

              if ( actionDialog == JFileChooser.APPROVE_OPTION ){
                File file = chooser.getSelectedFile();
                        String fileName = new String();

                if(file.exists()){
//                    JOptionPane.showMessageDialog(this, "Please input another filename replace function not implemented yet", "Write Error", JOptionPane.ERROR_MESSAGE);
//                    file.delete();
//                         saveBrowse(chooser,isMonth,Type);
                      int confirmDialog = JOptionPane.showConfirmDialog(this, "Replace exisitng file?", "Save", JOptionPane.YES_NO_OPTION);
//
                    if(confirmDialog == JOptionPane.YES_OPTION){
                      file.delete();
                       }
//
//                    }else{
//                       saveBrowse(chooser,isMonth);
//                    }
                }
                fileName = file.toString();
                if( fileName.contains(".xls")){
                    fileName = fileName.substring(0,fileName.length()-4);
                }
                switch(reportType){
                    case 1:
                        Client loc = (Client) inventoryLocationComboBox.getSelectedItem();
                        ExcelAction.createInventoryXL(fileName+".xls", mod, title, inventorySupplierNameLabel.getText(),loc.getClientName());
                        break;
                    case 2:
                        GregorianCalendar fromCal = new GregorianCalendar(Integer.parseInt(receivableLedgerFromYearComboBox.getSelectedItem().toString()), receivableLedgerFromMonthComboBox.getSelectedIndex(), receivableLedgerFromDayComboBox.getSelectedIndex()+1);
                        GregorianCalendar toCal = new GregorianCalendar(Integer.parseInt(receivableLedgerToYearComboBox.getSelectedItem().toString()), receivableLedgerToMonthComboBox.getSelectedIndex(), receivableLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
//                         ExcelAction.createWXL(fileName+".xls", mod, title, receivableLedgerNameLabel.getText(), Formats.dateFormatDays2.format(fromCal.getTime()), Formats.dateFormatDays2.format(toCal.getTime()));
                        break;
                        
                    case 3:
                         ExcelAction.createPostDatedChecksReportWXL(fileName+".xls", mod, title, receivableSummaryNameLabel.getText());
                        break;
                     case 4:
                         GregorianCalendar pFromCal = new GregorianCalendar(Integer.parseInt(payableLedgerFromYearComboBox.getSelectedItem().toString()), payableLedgerFromMonthComboBox.getSelectedIndex(), payableLedgerFromDayComboBox.getSelectedIndex()+1);
                        GregorianCalendar pToCal = new GregorianCalendar(Integer.parseInt(payableLedgerToYearComboBox.getSelectedItem().toString()), payableLedgerToMonthComboBox.getSelectedIndex(), payableLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
//                        ExcelAction.createWXL(fileName+".xls", mod, title, payableLedgerNameLabel.getText(), Formats.dateFormatDays2.format(pFromCal.getTime()), Formats.dateFormatDays2.format(pToCal.getTime()));
                    case 5:
                        ExcelAction.createPostDatedChecksReportWXL(fileName+".xls", mod, title, payableSummaryNameLabel.getText());
                      break;
                    case 6:
                        ExcelAction.createPostDatedChecksReportWXL(fileName+".xls", mod, title, postDatedNameLabel.getText());
                      break;
                    case 7:
                        GregorianCalendar dailySalesCal = new GregorianCalendar(Integer.parseInt(dailySalesYearComboBox.getSelectedItem().toString()), dailySalesMonthComboBox.getSelectedIndex(), dailySalesDayComboBox.getSelectedIndex()+1);
//                        ExcelAction.createWXL(fileName+".xls", mod, title, "-", Formats.dateFormatDays2.format(dailySalesCal.getTime()));
                      break;
                    case 8:
                        GregorianCalendar detDailySalesCal = new GregorianCalendar(Integer.parseInt(detailedDailySalesYearComboBox.getSelectedItem().toString())
                                , detailedDailySalesMonthComboBox.getSelectedIndex(), detailedDailySalesDayComboBox.getSelectedIndex()+1);
//                        ExcelAction.createWXL(fileName+".xls", mod, title, "-", Formats.dateFormatDays2.format(detDailySalesCal.getTime()));
                      break;  
                    case 9:
                        GregorianCalendar detSalesCustFromCal = new GregorianCalendar(Integer.parseInt(detSalesCustFYearComboBox.getSelectedItem().toString()), detSalesCustFMonthComboBox.getSelectedIndex(), detSalesCustFDayComboBox.getSelectedIndex()+1);
                        GregorianCalendar detSalesCustToCal = new GregorianCalendar(Integer.parseInt(detSalesCustTYearComboBox.getSelectedItem().toString()), detSalesCustTMonthComboBox.getSelectedIndex(), detSalesCustTDayComboBox.getSelectedIndex()+1, 23, 59);  
                        ExcelAction.createDetailedWXL(fileName+".xls", mod, title, detSalesCustomerNameLabel.getText(), Formats.dateFormatDays2.format(detSalesCustFromCal.getTime()),
                                Formats.dateFormatDays2.format(detSalesCustToCal.getTime()));
                      break;  
                    case 10:
                        GregorianCalendar detSalesSupFromCal = new GregorianCalendar(Integer.parseInt(detSalesSuppFYearComboBox.getSelectedItem().toString()), detSalesSuppFMonthComboBox.getSelectedIndex(), detSalesSuppFDayComboBox.getSelectedIndex()+1);
                        GregorianCalendar detSalesSupToCal = new GregorianCalendar(Integer.parseInt(detSalesSuppTYearComboBox.getSelectedItem().toString()), detSalesSuppTMonthComboBox.getSelectedIndex(), detSalesSuppTDayComboBox.getSelectedIndex()+1, 23, 59);  
                        
                        ExcelAction.createDetailedWXL(fileName+".xls", mod, title, detSalesSupplierNameLabel.getText(), Formats.dateFormatDays2.format(detSalesSupFromCal.getTime()),
                                Formats.dateFormatDays2.format(detSalesSupToCal.getTime()));
                        break;
                       case 11:
                        GregorianCalendar transferFromCal = new GregorianCalendar(Integer.parseInt(transferFromYearComboBox.getSelectedItem().toString()), transferFromMonthComboBox.getSelectedIndex(), transferFromDayComboBox.getSelectedIndex()+1);
                        GregorianCalendar transferToCal = new GregorianCalendar(Integer.parseInt(transferToYearComboBox.getSelectedItem().toString()), transferToMonthComboBox.getSelectedIndex(), transferToDayComboBox.getSelectedIndex()+1, 23, 59);  
                        
                        ExcelAction.createTransferWXL(fileName+".xls", mod, title, Formats.dateFormatDays2.format(transferFromCal.getTime()),
                                Formats.dateFormatDays2.format(transferToCal.getTime()));
                        break;
                      
                     
                    default:
                         GregorianCalendar fromCalItem = new GregorianCalendar(Integer.parseInt(itemLedgerFromYearComboBox.getSelectedItem().toString()), itemLedgerFromMonthComboBox.getSelectedIndex(), itemLedgerFromDayComboBox.getSelectedIndex()+1);
                         GregorianCalendar toCalItem = new GregorianCalendar(Integer.parseInt(itemLedgerToYearComboBox.getSelectedItem().toString()), itemLedgerToMonthComboBox.getSelectedIndex(), itemLedgerToDayComboBox.getSelectedIndex()+1, 23, 59);
                         Client loc2 = (Client) ledgerLocationComboBox.getSelectedItem(); 
                          ExcelAction.createItemLedgerXL(fileName+".xls", mod, title, itemNameLabel.getText(), Formats.dateFormatDays2.format(fromCalItem.getTime()), Formats.dateFormatDays2.format(toCalItem.getTime()), loc2.getClientName());
                        
                }
                //generate excel code
                
                 Desktop dt = Desktop.getDesktop();
                                dt.open(new File(fileName+".xls"));

              }

            }catch (Exception e){
                             e.printStackTrace();
                             System.out.println(e);
         }
}
       
       private void initializeDailySalesTable(){
           if(!isInit){
            int dailyYear = Integer.parseInt(dailySalesYearComboBox.getSelectedItem().toString());
            int dailyMonth = dailySalesMonthComboBox.getSelectedIndex();
            int dailyDay = dailySalesDayComboBox.getSelectedIndex()+1;
            dailySalesSummaryTable.setModel(CollectionAction.getCollectionDailyTableData(dailyYear, dailyDay, dailyMonth));
           }
       }
       
       private void initializeDailySalesPayableTable(){
           if(!isInit){
           int dailyYear = Integer.parseInt(dailySalesYearComboBox1.getSelectedItem().toString());
        int dailyMonth = dailySalesMonthComboBox1.getSelectedIndex();
        int dailyDay = dailySalesDayComboBox1.getSelectedIndex()+1;
        dailySalesSummaryTable1.setModel(CollectionAction.getPaymentDailyTableData(dailyYear, dailyDay, dailyMonth));
           }
       }
       
         private void initializeAccountsReceivableTable(){
           if(!isInit){
              accntReceivableTable.setModel(InvoiceAction.getReceivableBalance(0));
           }
       }
       
       
       private void initializeDetailedDailySalesTable(){
           if(!isInit) {
        int dailyYear = Integer.parseInt(detailedDailySalesYearComboBox.getSelectedItem().toString());
        int dailyMonth = detailedDailySalesMonthComboBox.getSelectedIndex();
        int dailyDay = detailedDailySalesDayComboBox.getSelectedIndex()+1;
//        dailySalesSummaryTable.setModel(CollectionAction.getCollectionDailyTableData(dailyYear, dailyDay, dailyMonth));
        detailedDailySalesTable.setModel(InvoiceAction.getDailySalesReportData(dailyYear, dailyMonth, dailyDay,0));
           }
       }
       
       private void initializeDetailedTransferTable(){
           if(!isInit){
        int fromYear = Integer.parseInt(transferFromYearComboBox.getSelectedItem().toString());
        int fromMonth = transferFromMonthComboBox.getSelectedIndex();
        int fromDay = transferFromDayComboBox.getSelectedIndex()+1;
        
        int toYear = Integer.parseInt(transferToYearComboBox.getSelectedItem().toString());
        int toMonth = transferToMonthComboBox.getSelectedIndex();
        int toDay = transferToDayComboBox.getSelectedIndex()+1;
        
           GregorianCalendar fromCal =  new GregorianCalendar(fromYear, fromMonth, fromDay);
           GregorianCalendar toCal =  new GregorianCalendar(toYear, toMonth, toDay,23,59);
//        dailySalesSummaryTable.setModel(CollectionAction.getCollectionDailyTableData(dailyYear, dailyDay, dailyMonth));
        transferTable.setModel(TransferAction.getTransferData(Formats.dateFormatSeconds.format(fromCal.getTime()),Formats.dateFormatSeconds.format(toCal.getTime())));
       }
      }
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable accntReceivableTable;
    private javax.swing.JTable accountPayableLedgerTable;
    private javax.swing.JTable accountPayableSummaryTable;
    private javax.swing.JTable accountReceivableAgingTable;
    private javax.swing.JTable accountReceivableLedgerTable;
    private javax.swing.JTable accountReceivableSummaryTable;
    private javax.swing.JLabel customerNamejLabel35;
    private javax.swing.JComboBox dailySalesDayComboBox;
    private javax.swing.JComboBox dailySalesDayComboBox1;
    private javax.swing.JComboBox dailySalesMonthComboBox;
    private javax.swing.JComboBox dailySalesMonthComboBox1;
    private javax.swing.JTable dailySalesSummaryTable;
    private javax.swing.JTable dailySalesSummaryTable1;
    private javax.swing.JComboBox dailySalesYearComboBox;
    private javax.swing.JComboBox dailySalesYearComboBox1;
    private javax.swing.JComboBox detSalesCustFDayComboBox;
    private javax.swing.JComboBox detSalesCustFMonthComboBox;
    private javax.swing.JComboBox detSalesCustFYearComboBox;
    private javax.swing.JComboBox detSalesCustTDayComboBox;
    private javax.swing.JComboBox detSalesCustTMonthComboBox;
    private javax.swing.JComboBox detSalesCustTYearComboBox;
    private javax.swing.JLabel detSalesCustomerNameLabel;
    private javax.swing.JComboBox detSalesSuppFDayComboBox;
    private javax.swing.JComboBox detSalesSuppFMonthComboBox;
    private javax.swing.JComboBox detSalesSuppFYearComboBox;
    private javax.swing.JComboBox detSalesSuppTDayComboBox;
    private javax.swing.JComboBox detSalesSuppTMonthComboBox;
    private javax.swing.JComboBox detSalesSuppTYearComboBox;
    private javax.swing.JLabel detSalesSupplierNameLabel;
    private javax.swing.JComboBox detailedDailySalesDayComboBox;
    private javax.swing.JComboBox detailedDailySalesMonthComboBox;
    private javax.swing.JTable detailedDailySalesTable;
    private javax.swing.JComboBox detailedDailySalesYearComboBox;
    private javax.swing.JPanel detailedSalesCustomerDatePanel;
    private javax.swing.JTable detailedSalesCustomerTable;
    private javax.swing.JPanel detailedSalesSupplierDatePanel;
    private javax.swing.JPanel detailedSalesSupplierDatePanel1;
    private javax.swing.JTable detailedSalesSupplierTable;
    private javax.swing.JPanel inventoryDatePanel;
    private javax.swing.JPanel inventoryDatePanel1;
    private javax.swing.JComboBox inventoryLocationComboBox;
    private javax.swing.JLabel inventorySupplierNameLabel;
    private javax.swing.JTable inventoryTable;
    private javax.swing.JComboBox itemLedgerFromDayComboBox;
    private javax.swing.JComboBox itemLedgerFromMonthComboBox;
    private javax.swing.JComboBox itemLedgerFromYearComboBox;
    private javax.swing.JTable itemLedgerTable;
    private javax.swing.JComboBox itemLedgerToDayComboBox;
    private javax.swing.JComboBox itemLedgerToMonthComboBox;
    private javax.swing.JComboBox itemLedgerToYearComboBox;
    private javax.swing.JLabel itemNameLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox10;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JComboBox jComboBox19;
    private javax.swing.JComboBox jComboBox20;
    private javax.swing.JComboBox jComboBox21;
    private javax.swing.JComboBox jComboBox22;
    private javax.swing.JComboBox jComboBox23;
    private javax.swing.JComboBox jComboBox24;
    private javax.swing.JComboBox jComboBox25;
    private javax.swing.JComboBox jComboBox26;
    private javax.swing.JComboBox jComboBox27;
    private javax.swing.JComboBox jComboBox28;
    private javax.swing.JComboBox jComboBox29;
    private javax.swing.JComboBox jComboBox30;
    private javax.swing.JComboBox jComboBox31;
    private javax.swing.JComboBox jComboBox32;
    private javax.swing.JComboBox jComboBox33;
    private javax.swing.JComboBox jComboBox34;
    private javax.swing.JComboBox jComboBox35;
    private javax.swing.JComboBox jComboBox36;
    private javax.swing.JComboBox jComboBox37;
    private javax.swing.JComboBox jComboBox38;
    private javax.swing.JComboBox jComboBox39;
    private javax.swing.JComboBox jComboBox40;
    private javax.swing.JComboBox jComboBox41;
    private javax.swing.JComboBox jComboBox42;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JComboBox jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox ledgerLocationComboBox;
    private javax.swing.JPanel payableLedgerDatePanel;
    private javax.swing.JComboBox payableLedgerFromDayComboBox;
    private javax.swing.JComboBox payableLedgerFromMonthComboBox;
    private javax.swing.JComboBox payableLedgerFromYearComboBox;
    private javax.swing.JLabel payableLedgerNameLabel;
    private javax.swing.JComboBox payableLedgerToDayComboBox;
    private javax.swing.JComboBox payableLedgerToMonthComboBox;
    private javax.swing.JComboBox payableLedgerToYearComboBox;
    private javax.swing.JPanel payableSummaryDatePanel;
    private javax.swing.JComboBox payableSummaryFromDayComboBox;
    private javax.swing.JComboBox payableSummaryFromMonthComboBox;
    private javax.swing.JComboBox payableSummaryFromYearComboBox;
    private javax.swing.JLabel payableSummaryNameLabel;
    private javax.swing.JComboBox payableSummaryToDayComboBox;
    private javax.swing.JComboBox payableSummaryToMonthComboBox;
    private javax.swing.JComboBox payableSummaryToYearComboBox;
    private javax.swing.JLabel postDatedNameLabel;
    private javax.swing.JPanel postDatedSummaryDatePanel;
    private javax.swing.JTable postDatedSummaryTable;
    private javax.swing.JLabel receivableAgingNameLabel;
    private javax.swing.JComboBox receivableLedgerFromDayComboBox;
    private javax.swing.JComboBox receivableLedgerFromMonthComboBox;
    private javax.swing.JComboBox receivableLedgerFromYearComboBox;
    private javax.swing.JLabel receivableLedgerNameLabel;
    private javax.swing.JComboBox receivableLedgerToDayComboBox;
    private javax.swing.JComboBox receivableLedgerToMonthComboBox;
    private javax.swing.JComboBox receivableLedgerToYearComboBox;
    private javax.swing.JLabel receivableNameLabel1;
    private javax.swing.JPanel receivableSummaryDatePanel;
    private javax.swing.JPanel receivableSummaryDatePanel1;
    private javax.swing.JPanel receivableSummaryDatePanel2;
    private javax.swing.JPanel receivableSummaryDatePanel3;
    private javax.swing.JPanel receivableSummaryDatePanel4;
    private javax.swing.JPanel receivableSummaryDatePanel5;
    private javax.swing.JLabel receivableSummaryNameLabel;
    private javax.swing.JButton receivablejButton37;
    private javax.swing.JButton transferButton;
    private javax.swing.JComboBox transferFromDayComboBox;
    private javax.swing.JComboBox transferFromMonthComboBox;
    private javax.swing.JComboBox transferFromYearComboBox;
    private javax.swing.JLabel transferLabel;
    private javax.swing.JLabel transferNameLabel;
    private javax.swing.JTable transferTable;
    private javax.swing.JComboBox transferToDayComboBox;
    private javax.swing.JComboBox transferToMonthComboBox;
    private javax.swing.JComboBox transferToYearComboBox;
    // End of variables declaration//GEN-END:variables
}

