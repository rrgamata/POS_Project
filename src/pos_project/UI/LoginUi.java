/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * logIn.java
 *
 * Created on Sep 30, 2010, 9:39:02 AM
 */

package pos_project.UI;

//import Common.*;
import java.net.NetworkInterface;
import java.util.Enumeration;
import java.util.Locale;
import java.util.Properties;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import pos_project.classes.RegisteredMachine;
import pos_project.classes.User;

/**
 *
 * @author DEVELOPER
 */
public class LoginUi extends javax.swing.JDialog {
    JFrame parentFrame;
    private User user;
    boolean isVerify = false;
    boolean successFlg = false;
    boolean isMainLogin = false;
    
    /** Creates new form logIn */
    public LoginUi(JFrame parent, boolean modal) {
        super(parent, modal);
        parentFrame = parent;
        initComponents();
        this.getRootPane().setDefaultButton(btnLogin);
    }
    
      public LoginUi(JFrame parent, boolean modal, boolean isMain) {
        super(parent, modal);
        parentFrame = parent;
        isMainLogin = true;
        initComponents();
        this.getRootPane().setDefaultButton(btnLogin);
    }

    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Log-In");
        setIconImage(null);
        setResizable(false);

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        btnLogin.setMnemonic('l');
        btnLogin.setText("Log-In");
        btnLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnLogin.setNextFocusableComponent(jButton2);
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        password.setNextFocusableComponent(btnLogin);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                            .addComponent(userName, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        //loginUser();
        try{
            String machineName = java.net.InetAddress.getLocalHost().toString();
            Enumeration <NetworkInterface> nic = NetworkInterface.getNetworkInterfaces ();

 for (; nic.hasMoreElements ();) {
      NetworkInterface n = nic.nextElement ();

      System.out.println (n.getName () + ":" + java.util.Arrays.toString (n.getHardwareAddress ()));
 }
            int machineHashCode = machineName.hashCode();
            int machineCount =RegisteredMachine.getMachineCount();
            System.out.println(machineCount+"machineCountnewtable");
            System.out.println(RegisteredMachine.getNumberOfRegisteredMachines()+"num of registered");
            if(machineCount==0){
                //error
                JOptionPane.showMessageDialog(this,"Unauthorized Access.", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                //ArrayList<Integer> registeredHashCode = RegisteredMachine.getMachineHashCode2();
                if(RegisteredMachine.isMachineRegistered(machineHashCode) || true){
                    //LOGIN
                    loginUser();
                    System.out.println("login lang");
                }else if(RegisteredMachine.getNumberOfRegisteredMachines() < machineCount){
                    //add machine hash code
                    System.out.println("add + login");
                    RegisteredMachine rm = new RegisteredMachine();
                    rm.setMachineNameHashCode(machineHashCode);
                    rm.addMachine();
                    //LOGIN
                    loginUser();
                }else{
                    //error
                    JOptionPane.showMessageDialog(this,"Unauthorized Access.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
        if(successFlg)
            this.dispose();
//        try{
//            String machineName = java.net.InetAddress.getLocalHost().toString();
//            int machineHashCode = machineName.hashCode();
//            if(RegisteredMachine.getMachineCount()==RegisteredMachine.getMachineCount()){
//                //error
//                JOptionPane.showMessageDialog(this,"Unauthorized Access.", "Error", JOptionPane.ERROR_MESSAGE);
//            }else{
//                int registeredHashCode = RegisteredMachine.getMachineHashCode();
//                if(registeredHashCode==0){
//                    //update machine hash code
//                    RegisteredMachine rm = new RegisteredMachine();
//                    rm.setMachineNameHashCode(machineHashCode);
//                    rm.updateMachineHashCode();
//
//                    //LOGIN
//                    loginUser();
//                }else if(registeredHashCode == machineHashCode){
//                    //LOGIN
//                    loginUser();
//                }else{
//                    //error
//                    JOptionPane.showMessageDialog(this,"Unauthorized Access.", "Error", JOptionPane.ERROR_MESSAGE);
//                }
//            }
//        }catch(Exception e){
//            System.out.println(e.getMessage());
//        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void loginUser(){
        char[] pass = password.getPassword();
        String str = String.valueOf(pass);
        boolean isExisting = false;
//        isExisting = checkUsername(userName.getText());
        int userId = User.checkUserName(userName.getText());
//        User loggingUser = checkBoth(userName.getText(),str);
        User loggingUser = User.checkBoth(userName.getText(),str);

//        if(isExisting && loggingUser.getPassword().equals("")){
        if(userId > 0 && loggingUser.getUserPassword() == null){
            JOptionPane.setDefaultLocale(Locale.ENGLISH);
            JOptionPane.showMessageDialog(this,"Invalid Password", "Error", JOptionPane.ERROR_MESSAGE);
            password.setText(null);
            password.requestFocus();
//        }else if(!isExisting){
         }else if(userId == 0){
            JOptionPane.setDefaultLocale(Locale.ENGLISH);
            JOptionPane.showMessageDialog(this,"Invalid Username or Password", "Error", JOptionPane.ERROR_MESSAGE);
            userName.setText(null);
            password.setText(null);
            userName.requestFocus();
        } else {
             user = loggingUser;
           Properties userNane = new Properties();
           if(isMainLogin){
             System.setProperty("userName", loggingUser.getUserFirstName()+" "+loggingUser.getUserLastName());
//             System.setProperties(userNane);
           }
             successFlg = true;
              if(user.getUserType() == 0){
                isVerify = true;
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField userName;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the user
     */
    public User getUser() {
        return user;
    }

    /**
     * @param user the user to set
     */
    public void setUser(User user) {
        this.user = user;
    }
    
    public boolean getVerification(){
        return isVerify;
    }

}
