/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddClient.java
 *
 * Created on Jul 17, 2013, 2:38:44 PM
 */
package pos_project.UI;

import java.util.Locale;
import javax.swing.JOptionPane;
import pos_project.Action.ClientAction;
import pos_project.Action.FractionAction;
import pos_project.Action.ItemAction;
import pos_project.classes.ErrorMessages;
import pos_project.classes.Item;

/**
 *
 * @author Cif3r
 */
public class OutItemUi extends javax.swing.JDialog {
 private boolean editFlg = false;
    private String itemNumber;
    /** Creates new form AddClient */
    public OutItemUi(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public OutItemUi(java.awt.Frame parent, Boolean modal, boolean editflg) {
       initialize(parent, modal, editflg);
    }
    
    public OutItemUi(java.awt.Frame parent, Boolean modal, boolean editflg, String clientNumber) {
        initialize(parent, modal, editflg);
        Item c = Item.getItem(clientNumber);
//        itemNameTextField.setText(c.getItemName());
//        itemManuTextField.setText(c.getItemManufacturer());
//        transactionQuantityTextField.setText(c.getItemQuantity().toString());
        transactionPriceTextField.setText(c.getItemPrice().toString());
        this.itemNumber = clientNumber;
    }
    
    private void initialize(java.awt.Frame parent, boolean modal, boolean editflg){
        JOptionPane.setDefaultLocale(Locale.ENGLISH);
        setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        initComponents();
        editFlg = editflg;
        if(editFlg){
            this.setTitle("Edit Item Details");
        } else {
            this.setTitle("Add New Item");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        transactionPriceTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        AddClientOkButton = new javax.swing.JButton();
        AddClientCancelButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        transactionQuantityTextField = new javax.swing.JTextField();
        quantityLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        actualPriceLabel1 = new javax.swing.JLabel();
        itemNameLabel = new javax.swing.JLabel();
        customerNameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setText("Transaction Details");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("Item Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setText("Customer Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        getContentPane().add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        getContentPane().add(transactionPriceTextField, gridBagConstraints);

        AddClientOkButton.setText("OK");
        AddClientOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddClientOkButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AddClientOkButton);

        AddClientCancelButton.setText("Cancel");
        AddClientCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddClientCancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AddClientCancelButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
        getContentPane().add(jPanel1, gridBagConstraints);

        jLabel5.setText("Quantity");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        getContentPane().add(transactionQuantityTextField, gridBagConstraints);

        quantityLabel.setText("Price");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        getContentPane().add(quantityLabel, gridBagConstraints);

        jLabel7.setText("Actual Price per Item");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(jLabel7, gridBagConstraints);

        jLabel8.setText("Price per Item");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(jLabel8, gridBagConstraints);

        jLabel9.setText("In Stock");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(jLabel9, gridBagConstraints);

        actualPriceLabel1.setText("Price");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        getContentPane().add(actualPriceLabel1, gridBagConstraints);

        itemNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        getContentPane().add(itemNameLabel, gridBagConstraints);

        customerNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        getContentPane().add(customerNameLabel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddClientOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddClientOkButtonActionPerformed
        // TODO add your handling code here:
//        if(!checkItem(itemNameTextField.getText(), itemManuTextField.getText(), transactionQuantityTextField.getText(), transactionPriceTextField.getText())){
//            if(editFlg){
//                int result = ItemAction.editItem(itemNameTextField.getText(), itemManuTextField.getText(), transactionQuantityTextField.getText(), transactionPriceTextField.getText(), itemNumber);
//                if(!(result < 0) ){
//                    JOptionPane.showMessageDialog(this,ErrorMessages.CONFIRM_EDITED_ITEM ,ErrorMessages.TITLE_SUCCESS,JOptionPane.INFORMATION_MESSAGE);
//                }
//                this.dispose();
//                
//            } else {
//                int result = ItemAction.insertItem(itemNameTextField.getText(), itemManuTextField.getText(), transactionQuantityTextField.getText(), transactionPriceTextField.getText());
//                if(!(result < 0) ){
//                    success();
//                }
//            }
//        }
}//GEN-LAST:event_AddClientOkButtonActionPerformed

    private void AddClientCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddClientCancelButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
}//GEN-LAST:event_AddClientCancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//
//            public void run() {
//                AddClient dialog = new AddClient(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }
    
    private boolean checkItem(String name, String manufacturer, String quantity, String price){
        boolean errorFlg = false;
        String errMsg = new String();
        if(name.isEmpty()||name == null){
            errorFlg = true;
            errMsg += "* "+ErrorMessages.ERROR_ITEM_NAME;
        }
        if(manufacturer.isEmpty()||manufacturer == null){
            errorFlg = true;
            errMsg += "* "+ErrorMessages.ERROR_ITEM_MANUFACTURER;
        }
        if(quantity.isEmpty()||quantity == null){
            errorFlg = true;
            errMsg += "* "+ErrorMessages.ERROR_ITEM_QUANTITY;
        } else {
            try{
                FractionAction.convertToDouble(quantity);
            } catch (Exception e) {
                  errorFlg = true;
                errMsg += "* "+ErrorMessages.ERROR_ITEM_QUANTITY;
            }
        }
        if(price.isEmpty()||price == null){
            errorFlg = true;
            errMsg += "* "+ErrorMessages.ERROR_ITEM_PRICE;
        } else {
            try{
                Double.parseDouble(price);
            } catch (Exception e) {
                errorFlg = true;
                errMsg += "* "+ErrorMessages.ERROR_ITEM_PRICE;
            }
        }
        
        if(errorFlg){
            
            JOptionPane.showMessageDialog(this,errMsg ,ErrorMessages.TITLE_ERROR,JOptionPane.ERROR_MESSAGE);
        }
        
        return errorFlg;
        
        
    }
     
     private void success(){
//          int answer = JOptionPane.showConfirmDialog(this,ErrorMessages.CONFIRM_ADDED_ITEM,ErrorMessages.TITLE_SUCCESS,JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
//          if(answer==0){
//             itemNameTextField.requestFocus();
//             itemNameTextField.setText("");
//             itemManuTextField.setText("");
//             transactionQuantityTextField.setText("");
//             transactionPriceTextField.setText("");
//          }else{
//             this.dispose();
//         }
     }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddClientCancelButton;
    private javax.swing.JButton AddClientOkButton;
    private javax.swing.JLabel actualPriceLabel1;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JLabel itemNameLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JTextField transactionPriceTextField;
    private javax.swing.JTextField transactionQuantityTextField;
    // End of variables declaration//GEN-END:variables
}
