/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pos_project.UI;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.KeyListener;
import java.io.File;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.Locale;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import pos_project.Action.CollectionAction;
import pos_project.Action.ExcelAction;
import pos_project.classes.CheckVoucherList;
import pos_project.classes.Client;
import pos_project.classes.ErrorMessages;
import pos_project.classes.Formats;
/**
 *
 * @author Cifer
 */
public class CheckVoucherUi extends javax.swing.JDialog {
Client checkVoucherCustomer;
CheckVoucherList cVList;
TableRowSorter<DefaultTableModel> invoiceSorter;
TableRowSorter<DefaultTableModel> checkSorter;
DefaultTableModel checkVoucherModel;
    /**
     * Creates new form CheckVoucherUi
     */
    public CheckVoucherUi(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        checkVoucherModel = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
       
        checkVoucherModel.setColumnIdentifiers(new String[] {"Invoice Date", "Invoice No.", "Amount", "Particulars" ,"Check Date", "Amount"});
        checkVoucherTable.setModel(checkVoucherModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel10 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        invoicePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoiceList = new javax.swing.JTable();
        invoiceTextField = new javax.swing.JTextField();
        checkPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        checkList = new javax.swing.JTable();
        checkTextField = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        checkVoucherNameLabel = new javax.swing.JLabel();
        jButton17 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        checkVoucherTable = new javax.swing.JTable();
        jButton18 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel10.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel10ComponentShown(evt);
            }
        });
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        invoicePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        invoicePanel.setMinimumSize(new java.awt.Dimension(200, 150));
        invoicePanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Search:          ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        invoicePanel.add(jLabel1, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 150));

        invoiceList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Invoice No."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoiceList.setColumnSelectionAllowed(true);
        invoiceList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                invoiceListMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(invoiceList);
        invoiceList.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (invoiceList.getColumnModel().getColumnCount() > 0) {
            invoiceList.getColumnModel().getColumn(0).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = -352;
        gridBagConstraints.ipady = -277;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        invoicePanel.add(jScrollPane1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        invoicePanel.add(invoiceTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel1.add(invoicePanel, gridBagConstraints);

        checkPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        checkPanel.setMinimumSize(new java.awt.Dimension(200, 150));
        checkPanel.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Search:          ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        checkPanel.add(jLabel2, gridBagConstraints);

        jScrollPane3.setMinimumSize(new java.awt.Dimension(100, 150));

        checkList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Check No."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        checkList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                checkListMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(checkList);
        if (checkList.getColumnModel().getColumnCount() > 0) {
            checkList.getColumnModel().getColumn(0).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = -352;
        gridBagConstraints.ipady = -277;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        checkPanel.add(jScrollPane3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        checkPanel.add(checkTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 0);
        jPanel1.add(checkPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        jPanel10.add(jPanel1, gridBagConstraints);

        jLabel26.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        jPanel10.add(jLabel26, gridBagConstraints);

        checkVoucherNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 5, 50);
        jPanel10.add(checkVoucherNameLabel, gridBagConstraints);

        jButton17.setText("Search...");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel10.add(jButton17, gridBagConstraints);

        checkVoucherTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Quantity As Of", "Date"
            }
        ));
        jScrollPane9.setViewportView(checkVoucherTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 650;
        gridBagConstraints.ipady = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel10.add(jScrollPane9, gridBagConstraints);

        jButton18.setText("Generate Report");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 10, 5);
        jPanel10.add(jButton18, gridBagConstraints);

        jButton1.setText("Clear Table");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel10.add(jButton1, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        SearchUi detailsPopUp = new SearchUi(new JFrame(),true, 2,false);
        //        }

        detailsPopUp.setLocationRelativeTo(null);
        detailsPopUp.pack();
        detailsPopUp.setVisible(true);
        if(detailsPopUp.getClient() != null){
            checkVoucherCustomer = detailsPopUp.getClient();
            checkVoucherNameLabel.setText(checkVoucherCustomer.getClientName());
            cVList = (CollectionAction.getCheckVoucherListData(checkVoucherCustomer.getClientId()));
            initializeInvoiceListTable(cVList.getInvoiceListModel());
            initializeCheckListTable(cVList.getCheckListModel());
        }

    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        generateExcel(checkVoucherTable.getModel(), "Check Voucher", 3);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jPanel10ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel10ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel10ComponentShown

    private void invoiceListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoiceListMouseReleased
        // TODO add your handling code here:
        Integer row = new Integer(invoiceList.getModel().getValueAt(invoiceList.convertRowIndexToModel(invoiceList.getSelectedRow()),invoiceList.getColumnCount()).toString());
        
        ArrayList filler = new ArrayList();
        filler.add(new String[] {" ", " ", " ", " ", " ", " "});
        addMainVoucherTable(cVList.getInvoiceList().get(row).getCheckVoucherList(), filler);
    }//GEN-LAST:event_invoiceListMouseReleased

    private void checkListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkListMouseReleased
        // TODO add your handling code here:
        Integer row = new Integer(checkList.getModel().getValueAt(checkList.convertRowIndexToModel(checkList.getSelectedRow()),checkList.getColumnCount()).toString());
        ArrayList filler = new ArrayList();
        filler.add(new String[] {" ", "TOTAL:", Formats.centavoDecimal.format(cVList.getCheckNumberList().get(row).getInvoiceTotalAmount()).toString(), " "," ", Formats.centavoDecimal.format(cVList.getCheckNumberList().get(row).getCheckTotalAmount())});
        filler.add(new String[] {" ", " ", " ", " ", " ", " "});
        addMainVoucherTable(cVList.getCheckNumberList().get(row).getCheckVoucherList(), filler);
    }//GEN-LAST:event_checkListMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        checkVoucherTable.removeAll();
        while(checkVoucherModel.getRowCount() != 0){
            checkVoucherModel.removeRow(0);
        }
        
//        for(int i=0; i<checkVoucherTable.getRowCount();i++){
//            checkVoucherTable.remove(i);
//        }
         System.out.println(checkVoucherModel);
        checkVoucherTable.setModel(checkVoucherModel);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckVoucherUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckVoucherUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckVoucherUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckVoucherUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
       double b= 15%2;
        System.out.println(b);
        
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CheckVoucherUi dialog = new CheckVoucherUi(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable checkList;
    private javax.swing.JPanel checkPanel;
    private javax.swing.JTextField checkTextField;
    private javax.swing.JLabel checkVoucherNameLabel;
    private javax.swing.JTable checkVoucherTable;
    private javax.swing.JTable invoiceList;
    private javax.swing.JPanel invoicePanel;
    private javax.swing.JTextField invoiceTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane9;
    // End of variables declaration//GEN-END:variables

private void initializeInvoiceListTable(DefaultTableModel mod){
     invoiceTextField.addKeyListener(new KeyListener(){
            public void keyReleased(java.awt.event.KeyEvent e){
                String text = invoiceTextField.getText();
                if (text.length() == 0) {
                    invoiceSorter.setRowFilter(null);
                } else {
                    invoiceSorter.setRowFilter(RowFilter.regexFilter("(?i)"+text));
                }
            }

            public void keyPressed(java.awt.event.KeyEvent e){
            }

            public void keyTyped(java.awt.event.KeyEvent e){
                
            }

            });
        invoiceSorter = new TableRowSorter<DefaultTableModel>(mod);
        invoiceList.setModel(mod);
        invoiceList.setRowSorter(invoiceSorter);
        invoiceList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        invoiceList.setShowGrid(true);
        invoiceList.setGridColor(Color.black);
        invoiceList.getColumnModel().removeColumn(invoiceList.getColumnModel().getColumn(invoiceList.getColumnModel().getColumnCount()-1));
}

private void initializeCheckListTable(DefaultTableModel mod){
     checkTextField.addKeyListener(new KeyListener(){
            public void keyReleased(java.awt.event.KeyEvent e){
                String text = checkTextField.getText();
                if (text.length() == 0) {
                    checkSorter.setRowFilter(null);
                } else {
                    checkSorter.setRowFilter(RowFilter.regexFilter("(?i)"+text));
                }
            }

            public void keyPressed(java.awt.event.KeyEvent e){
            }

            public void keyTyped(java.awt.event.KeyEvent e){
                
            }

            });
      checkSorter = new TableRowSorter<DefaultTableModel>(mod);
        checkList.setModel(mod);
        checkList.setRowSorter(checkSorter);
        checkList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        checkList.setShowGrid(true);
        checkList.setGridColor(Color.black);
        checkList.getColumnModel().removeColumn(checkList.getColumnModel().getColumn(checkList.getColumnModel().getColumnCount()-1));
}

private void addMainVoucherTable(ArrayList<String[]> values, ArrayList<String[]> fillers){
    if(values.size()+fillers.size()+checkVoucherModel.getRowCount()<11){
        for(String[] arr: values){
            checkVoucherModel.addRow(arr);    
        } 
        for(String[] arr: fillers){
            checkVoucherModel.addRow(arr);    
        } 
    checkVoucherTable.setModel(checkVoucherModel);
} else {
        JOptionPane.setDefaultLocale(Locale.ENGLISH);
            JOptionPane.showMessageDialog(this,ErrorMessages.WARNING_CHECK_VOUCHER_LIMIT, ErrorMessages.TITLE_WARNING, JOptionPane.WARNING_MESSAGE);
 }
}


private void generateExcel(TableModel mod, String title, int reportType){
            
        try{
            JFileChooser.setDefaultLocale(Locale.ENGLISH);
            JFileChooser chooser = new JFileChooser();
              chooser.setDialogTitle("Save File");
            chooser.removeChoosableFileFilter(chooser.getFileFilter() );
            chooser.setFileFilter(new FileNameExtensionFilter("2003 Excel file *.xls", "xls")) ;

             int actionDialog = chooser.showSaveDialog(this);

              if ( actionDialog == JFileChooser.APPROVE_OPTION ){
                File file = chooser.getSelectedFile();
                        String fileName = new String();

                if(file.exists()){
//                    JOptionPane.showMessageDialog(this, "Please input another filename replace function not implemented yet", "Write Error", JOptionPane.ERROR_MESSAGE);
//                    file.delete();
//                         saveBrowse(chooser,isMonth,Type);
                      int confirmDialog = JOptionPane.showConfirmDialog(this, "Replace exisitng file?", "Save", JOptionPane.YES_NO_OPTION);
//
                    if(confirmDialog == JOptionPane.YES_OPTION){
                      file.delete();
                       }
//
//                    }else{
//                       saveBrowse(chooser,isMonth);
//                    }
                }
                fileName = file.toString();
                if( fileName.contains(".xls")){
                    fileName = fileName.substring(0,fileName.length()-4);
                }
                
                ExcelAction.createCheckVoucherWXL(fileName+".xls", mod, title, checkVoucherNameLabel.getText());
                
                //generate excel code
                
                 Desktop dt = Desktop.getDesktop();
                                dt.open(new File(fileName+".xls"));

              }

            }catch (Exception e){
                             e.printStackTrace();
                             System.out.println(e);
         }
}

}
